2025-03-31 14:10:18,911 - INFO - Script is running
2025-03-31 14:10:18,911 - INFO - Processing PDF file: stockholm_2023.pdf
2025-03-31 14:10:18,923 - INFO - Extracting text from page 1/86
2025-03-31 14:10:18,923 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:18,924 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:18,926 - INFO - Extracting text from page 2/86
2025-03-31 14:10:18,926 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:18,926 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:18,930 - INFO - Extracting text from page 3/86
2025-03-31 14:10:18,931 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:18,931 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:18,935 - INFO - Extracting text from page 4/86
2025-03-31 14:10:18,935 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:18,935 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:18,942 - INFO - Extracting text from page 5/86
2025-03-31 14:10:18,942 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:18,942 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:18,948 - INFO - Extracting text from page 6/86
2025-03-31 14:10:18,948 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:18,948 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:18,953 - INFO - Extracting text from page 7/86
2025-03-31 14:10:18,953 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:18,953 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:18,958 - INFO - Extracting text from page 8/86
2025-03-31 14:10:18,958 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:18,958 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:18,963 - INFO - Extracting text from page 9/86
2025-03-31 14:10:18,964 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:18,964 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:18,968 - INFO - Extracting text from page 10/86
2025-03-31 14:10:18,968 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:18,968 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:18,974 - INFO - Extracting text from page 11/86
2025-03-31 14:10:18,974 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:18,974 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:18,979 - INFO - Extracting text from page 12/86
2025-03-31 14:10:18,979 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:18,979 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:18,985 - INFO - Extracting text from page 13/86
2025-03-31 14:10:18,985 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:18,985 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:18,990 - INFO - Extracting text from page 14/86
2025-03-31 14:10:18,990 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:18,990 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:18,995 - INFO - Extracting text from page 15/86
2025-03-31 14:10:18,995 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:18,995 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,000 - INFO - Extracting text from page 16/86
2025-03-31 14:10:19,000 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,000 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,005 - INFO - Extracting text from page 17/86
2025-03-31 14:10:19,005 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,005 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,010 - INFO - Extracting text from page 18/86
2025-03-31 14:10:19,010 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,010 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,015 - INFO - Extracting text from page 19/86
2025-03-31 14:10:19,015 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,015 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,020 - INFO - Extracting text from page 20/86
2025-03-31 14:10:19,020 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,020 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,025 - INFO - Extracting text from page 21/86
2025-03-31 14:10:19,025 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,025 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,030 - INFO - Extracting text from page 22/86
2025-03-31 14:10:19,030 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,030 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,035 - INFO - Extracting text from page 23/86
2025-03-31 14:10:19,035 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,035 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,040 - INFO - Extracting text from page 24/86
2025-03-31 14:10:19,040 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,040 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,045 - INFO - Extracting text from page 25/86
2025-03-31 14:10:19,045 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,045 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,051 - INFO - Extracting text from page 26/86
2025-03-31 14:10:19,051 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,051 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,055 - INFO - Extracting text from page 27/86
2025-03-31 14:10:19,055 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,055 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,061 - INFO - Extracting text from page 28/86
2025-03-31 14:10:19,061 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,061 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,066 - INFO - Extracting text from page 29/86
2025-03-31 14:10:19,066 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,066 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,071 - INFO - Extracting text from page 30/86
2025-03-31 14:10:19,071 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,071 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,077 - INFO - Extracting text from page 31/86
2025-03-31 14:10:19,077 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,077 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,083 - INFO - Extracting text from page 32/86
2025-03-31 14:10:19,083 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,083 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,089 - INFO - Extracting text from page 33/86
2025-03-31 14:10:19,089 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,089 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,094 - INFO - Extracting text from page 34/86
2025-03-31 14:10:19,094 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,094 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,099 - INFO - Extracting text from page 35/86
2025-03-31 14:10:19,099 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,099 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,104 - INFO - Extracting text from page 36/86
2025-03-31 14:10:19,104 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,104 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,106 - INFO - Extracting text from page 37/86
2025-03-31 14:10:19,106 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,107 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,112 - INFO - Extracting text from page 38/86
2025-03-31 14:10:19,112 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,112 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,116 - INFO - Extracting text from page 39/86
2025-03-31 14:10:19,116 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,116 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,121 - INFO - Extracting text from page 40/86
2025-03-31 14:10:19,121 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,121 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,126 - INFO - Extracting text from page 41/86
2025-03-31 14:10:19,126 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,126 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,130 - INFO - Extracting text from page 42/86
2025-03-31 14:10:19,130 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,130 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,134 - INFO - Extracting text from page 43/86
2025-03-31 14:10:19,134 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,134 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,141 - INFO - Extracting text from page 44/86
2025-03-31 14:10:19,141 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,141 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,146 - INFO - Extracting text from page 45/86
2025-03-31 14:10:19,146 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,146 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,150 - INFO - Extracting text from page 46/86
2025-03-31 14:10:19,150 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,150 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,156 - INFO - Extracting text from page 47/86
2025-03-31 14:10:19,156 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,156 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,160 - INFO - Extracting text from page 48/86
2025-03-31 14:10:19,160 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,160 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,166 - INFO - Extracting text from page 49/86
2025-03-31 14:10:19,166 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,166 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,170 - INFO - Extracting text from page 50/86
2025-03-31 14:10:19,170 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,170 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,175 - INFO - Extracting text from page 51/86
2025-03-31 14:10:19,175 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,175 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,180 - INFO - Extracting text from page 52/86
2025-03-31 14:10:19,181 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,181 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,186 - INFO - Extracting text from page 53/86
2025-03-31 14:10:19,186 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,186 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,190 - INFO - Extracting text from page 54/86
2025-03-31 14:10:19,191 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,191 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,197 - INFO - Extracting text from page 55/86
2025-03-31 14:10:19,197 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,197 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,202 - INFO - Extracting text from page 56/86
2025-03-31 14:10:19,202 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,202 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,207 - INFO - Extracting text from page 57/86
2025-03-31 14:10:19,207 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,207 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,212 - INFO - Extracting text from page 58/86
2025-03-31 14:10:19,212 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,212 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,217 - INFO - Extracting text from page 59/86
2025-03-31 14:10:19,217 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,217 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,222 - INFO - Extracting text from page 60/86
2025-03-31 14:10:19,222 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,222 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,226 - INFO - Extracting text from page 61/86
2025-03-31 14:10:19,226 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,226 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,230 - INFO - Extracting text from page 62/86
2025-03-31 14:10:19,230 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,230 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,235 - INFO - Extracting text from page 63/86
2025-03-31 14:10:19,235 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,235 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,240 - INFO - Extracting text from page 64/86
2025-03-31 14:10:19,240 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,240 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,245 - INFO - Extracting text from page 65/86
2025-03-31 14:10:19,245 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,245 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,251 - INFO - Extracting text from page 66/86
2025-03-31 14:10:19,251 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,251 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,256 - INFO - Extracting text from page 67/86
2025-03-31 14:10:19,256 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,256 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,261 - INFO - Extracting text from page 68/86
2025-03-31 14:10:19,261 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,261 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,266 - INFO - Extracting text from page 69/86
2025-03-31 14:10:19,266 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,266 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,271 - INFO - Extracting text from page 70/86
2025-03-31 14:10:19,271 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,271 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,276 - INFO - Extracting text from page 71/86
2025-03-31 14:10:19,276 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,276 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,281 - INFO - Extracting text from page 72/86
2025-03-31 14:10:19,282 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,282 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,286 - INFO - Extracting text from page 73/86
2025-03-31 14:10:19,287 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,287 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,291 - INFO - Extracting text from page 74/86
2025-03-31 14:10:19,291 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,291 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,296 - INFO - Extracting text from page 75/86
2025-03-31 14:10:19,296 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,297 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,301 - INFO - Extracting text from page 76/86
2025-03-31 14:10:19,302 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,302 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,307 - INFO - Extracting text from page 77/86
2025-03-31 14:10:19,307 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,307 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,312 - INFO - Extracting text from page 78/86
2025-03-31 14:10:19,312 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,312 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,316 - INFO - Extracting text from page 79/86
2025-03-31 14:10:19,316 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,316 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,321 - INFO - Extracting text from page 80/86
2025-03-31 14:10:19,321 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,321 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,325 - INFO - Extracting text from page 81/86
2025-03-31 14:10:19,325 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,325 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,330 - INFO - Extracting text from page 82/86
2025-03-31 14:10:19,330 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,330 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,334 - INFO - Extracting text from page 83/86
2025-03-31 14:10:19,334 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,334 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,339 - INFO - Extracting text from page 84/86
2025-03-31 14:10:19,339 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,339 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,344 - INFO - Extracting text from page 85/86
2025-03-31 14:10:19,344 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,344 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:10:19,349 - INFO - Extracting text from page 86/86
2025-03-31 14:10:19,349 - ERROR - Error in API response: 

You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.

You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. 

Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`

A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742

2025-03-31 14:10:19,349 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,855 - INFO - Script is running
2025-03-31 14:12:32,856 - INFO - Processing PDF file: stockholm_2023.pdf
2025-03-31 14:12:32,874 - INFO - Extracting text from page 1/86
2025-03-31 14:12:32,874 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,874 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,877 - INFO - Extracting text from page 2/86
2025-03-31 14:12:32,878 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,878 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,882 - INFO - Extracting text from page 3/86
2025-03-31 14:12:32,882 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,882 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,886 - INFO - Extracting text from page 4/86
2025-03-31 14:12:32,886 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,886 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,891 - INFO - Extracting text from page 5/86
2025-03-31 14:12:32,891 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,891 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,896 - INFO - Extracting text from page 6/86
2025-03-31 14:12:32,897 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,897 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,901 - INFO - Extracting text from page 7/86
2025-03-31 14:12:32,902 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,902 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,906 - INFO - Extracting text from page 8/86
2025-03-31 14:12:32,907 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,907 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,912 - INFO - Extracting text from page 9/86
2025-03-31 14:12:32,912 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,912 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,917 - INFO - Extracting text from page 10/86
2025-03-31 14:12:32,917 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,917 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,925 - INFO - Extracting text from page 11/86
2025-03-31 14:12:32,925 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,925 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,930 - INFO - Extracting text from page 12/86
2025-03-31 14:12:32,930 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,930 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,935 - INFO - Extracting text from page 13/86
2025-03-31 14:12:32,935 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,935 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,940 - INFO - Extracting text from page 14/86
2025-03-31 14:12:32,940 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,941 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,945 - INFO - Extracting text from page 15/86
2025-03-31 14:12:32,945 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,946 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,950 - INFO - Extracting text from page 16/86
2025-03-31 14:12:32,953 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,953 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,959 - INFO - Extracting text from page 17/86
2025-03-31 14:12:32,959 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,959 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,964 - INFO - Extracting text from page 18/86
2025-03-31 14:12:32,964 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,964 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,969 - INFO - Extracting text from page 19/86
2025-03-31 14:12:32,969 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,969 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,974 - INFO - Extracting text from page 20/86
2025-03-31 14:12:32,974 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,974 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,980 - INFO - Extracting text from page 21/86
2025-03-31 14:12:32,980 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,980 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,985 - INFO - Extracting text from page 22/86
2025-03-31 14:12:32,985 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,985 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,990 - INFO - Extracting text from page 23/86
2025-03-31 14:12:32,990 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,990 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:32,995 - INFO - Extracting text from page 24/86
2025-03-31 14:12:32,996 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:32,996 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,001 - INFO - Extracting text from page 25/86
2025-03-31 14:12:33,001 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,001 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,006 - INFO - Extracting text from page 26/86
2025-03-31 14:12:33,006 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,006 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,011 - INFO - Extracting text from page 27/86
2025-03-31 14:12:33,011 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,011 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,016 - INFO - Extracting text from page 28/86
2025-03-31 14:12:33,016 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,016 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,021 - INFO - Extracting text from page 29/86
2025-03-31 14:12:33,021 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,021 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,026 - INFO - Extracting text from page 30/86
2025-03-31 14:12:33,026 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,026 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,031 - INFO - Extracting text from page 31/86
2025-03-31 14:12:33,031 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,031 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,037 - INFO - Extracting text from page 32/86
2025-03-31 14:12:33,037 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,037 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,043 - INFO - Extracting text from page 33/86
2025-03-31 14:12:33,043 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,043 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,048 - INFO - Extracting text from page 34/86
2025-03-31 14:12:33,048 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,048 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,054 - INFO - Extracting text from page 35/86
2025-03-31 14:12:33,054 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,054 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,058 - INFO - Extracting text from page 36/86
2025-03-31 14:12:33,058 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,058 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,061 - INFO - Extracting text from page 37/86
2025-03-31 14:12:33,061 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,061 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,066 - INFO - Extracting text from page 38/86
2025-03-31 14:12:33,066 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,066 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,071 - INFO - Extracting text from page 39/86
2025-03-31 14:12:33,071 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,071 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,076 - INFO - Extracting text from page 40/86
2025-03-31 14:12:33,076 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,076 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,081 - INFO - Extracting text from page 41/86
2025-03-31 14:12:33,081 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,081 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,085 - INFO - Extracting text from page 42/86
2025-03-31 14:12:33,085 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,085 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,090 - INFO - Extracting text from page 43/86
2025-03-31 14:12:33,090 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,090 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,095 - INFO - Extracting text from page 44/86
2025-03-31 14:12:33,095 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,095 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,102 - INFO - Extracting text from page 45/86
2025-03-31 14:12:33,102 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,102 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,106 - INFO - Extracting text from page 46/86
2025-03-31 14:12:33,106 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,106 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,111 - INFO - Extracting text from page 47/86
2025-03-31 14:12:33,112 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,112 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,116 - INFO - Extracting text from page 48/86
2025-03-31 14:12:33,116 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,116 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,122 - INFO - Extracting text from page 49/86
2025-03-31 14:12:33,122 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,122 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,126 - INFO - Extracting text from page 50/86
2025-03-31 14:12:33,126 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,126 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,131 - INFO - Extracting text from page 51/86
2025-03-31 14:12:33,131 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,131 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,136 - INFO - Extracting text from page 52/86
2025-03-31 14:12:33,137 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,137 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,142 - INFO - Extracting text from page 53/86
2025-03-31 14:12:33,142 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,142 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,147 - INFO - Extracting text from page 54/86
2025-03-31 14:12:33,147 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,147 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,152 - INFO - Extracting text from page 55/86
2025-03-31 14:12:33,152 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,152 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,157 - INFO - Extracting text from page 56/86
2025-03-31 14:12:33,157 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,157 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,161 - INFO - Extracting text from page 57/86
2025-03-31 14:12:33,161 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,161 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,166 - INFO - Extracting text from page 58/86
2025-03-31 14:12:33,166 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,166 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,171 - INFO - Extracting text from page 59/86
2025-03-31 14:12:33,171 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,171 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,176 - INFO - Extracting text from page 60/86
2025-03-31 14:12:33,176 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,176 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,180 - INFO - Extracting text from page 61/86
2025-03-31 14:12:33,180 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,180 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,184 - INFO - Extracting text from page 62/86
2025-03-31 14:12:33,185 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,185 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,190 - INFO - Extracting text from page 63/86
2025-03-31 14:12:33,190 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,190 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,195 - INFO - Extracting text from page 64/86
2025-03-31 14:12:33,195 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,195 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,200 - INFO - Extracting text from page 65/86
2025-03-31 14:12:33,200 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,200 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,206 - INFO - Extracting text from page 66/86
2025-03-31 14:12:33,206 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,206 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,211 - INFO - Extracting text from page 67/86
2025-03-31 14:12:33,211 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,211 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,217 - INFO - Extracting text from page 68/86
2025-03-31 14:12:33,217 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,217 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,222 - INFO - Extracting text from page 69/86
2025-03-31 14:12:33,222 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,222 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,226 - INFO - Extracting text from page 70/86
2025-03-31 14:12:33,227 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,227 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,231 - INFO - Extracting text from page 71/86
2025-03-31 14:12:33,232 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,232 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,237 - INFO - Extracting text from page 72/86
2025-03-31 14:12:33,237 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,237 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,242 - INFO - Extracting text from page 73/86
2025-03-31 14:12:33,242 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,242 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,246 - INFO - Extracting text from page 74/86
2025-03-31 14:12:33,246 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,246 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,251 - INFO - Extracting text from page 75/86
2025-03-31 14:12:33,251 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,251 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,256 - INFO - Extracting text from page 76/86
2025-03-31 14:12:33,256 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,256 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,261 - INFO - Extracting text from page 77/86
2025-03-31 14:12:33,261 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,261 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,265 - INFO - Extracting text from page 78/86
2025-03-31 14:12:33,265 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,265 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,269 - INFO - Extracting text from page 79/86
2025-03-31 14:12:33,269 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,269 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,274 - INFO - Extracting text from page 80/86
2025-03-31 14:12:33,274 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,274 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,278 - INFO - Extracting text from page 81/86
2025-03-31 14:12:33,278 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,278 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,283 - INFO - Extracting text from page 82/86
2025-03-31 14:12:33,283 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,283 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,288 - INFO - Extracting text from page 83/86
2025-03-31 14:12:33,288 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,288 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,293 - INFO - Extracting text from page 84/86
2025-03-31 14:12:33,293 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,293 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,297 - INFO - Extracting text from page 85/86
2025-03-31 14:12:33,297 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,297 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:12:33,303 - INFO - Extracting text from page 86/86
2025-03-31 14:12:33,303 - ERROR - Error in API response: Completions.create() got an unexpected keyword argument 'api_key'
2025-03-31 14:12:33,303 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:15:36,883 - INFO - Script is running
2025-03-31 14:15:36,883 - INFO - Processing PDF file: stockholm_2023.pdf
2025-03-31 14:15:36,904 - INFO - Extracting text from page 1/86
2025-03-31 14:16:14,999 - INFO - Script is running
2025-03-31 14:16:14,999 - INFO - Processing PDF file: stockholm_2023.pdf
2025-03-31 14:16:15,017 - INFO - Extracting text from page 1/86
2025-03-31 14:17:04,125 - INFO - Script is running
2025-03-31 14:17:04,125 - INFO - Processing PDF file: stockholm_2023.pdf
2025-03-31 14:17:04,142 - INFO - Extracting text from page 1/86
2025-03-31 14:17:04,887 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:04,888 - INFO - Retrying request to /chat/completions in 0.497603 seconds
2025-03-31 14:17:05,601 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:05,603 - INFO - Retrying request to /chat/completions in 0.828734 seconds
2025-03-31 14:17:06,651 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:06,658 - ERROR - Error in API response: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-03-31 14:17:06,658 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:17:06,666 - INFO - Extracting text from page 2/86
2025-03-31 14:17:06,883 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:06,884 - INFO - Retrying request to /chat/completions in 0.393097 seconds
2025-03-31 14:17:07,511 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:07,513 - INFO - Retrying request to /chat/completions in 0.934995 seconds
2025-03-31 14:17:08,641 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:08,643 - ERROR - Error in API response: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-03-31 14:17:08,644 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:17:08,655 - INFO - Extracting text from page 3/86
2025-03-31 14:17:08,843 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:08,843 - INFO - Retrying request to /chat/completions in 0.381105 seconds
2025-03-31 14:17:09,437 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:09,438 - INFO - Retrying request to /chat/completions in 0.838124 seconds
2025-03-31 14:17:10,464 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:10,464 - ERROR - Error in API response: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-03-31 14:17:10,464 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:17:10,469 - INFO - Extracting text from page 4/86
2025-03-31 14:17:10,663 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:10,664 - INFO - Retrying request to /chat/completions in 0.439724 seconds
2025-03-31 14:17:11,360 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:11,360 - INFO - Retrying request to /chat/completions in 0.986115 seconds
2025-03-31 14:17:12,541 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:12,541 - ERROR - Error in API response: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-03-31 14:17:12,542 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:17:12,551 - INFO - Extracting text from page 5/86
2025-03-31 14:17:12,813 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:12,815 - INFO - Retrying request to /chat/completions in 0.407958 seconds
2025-03-31 14:17:13,443 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:13,444 - INFO - Retrying request to /chat/completions in 0.861622 seconds
2025-03-31 14:17:14,494 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:14,495 - ERROR - Error in API response: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-03-31 14:17:14,495 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:17:14,510 - INFO - Extracting text from page 6/86
2025-03-31 14:17:14,702 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:14,705 - INFO - Retrying request to /chat/completions in 0.428389 seconds
2025-03-31 14:17:15,347 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:15,349 - INFO - Retrying request to /chat/completions in 0.758114 seconds
2025-03-31 14:17:16,304 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:16,305 - ERROR - Error in API response: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-03-31 14:17:16,306 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:17:16,320 - INFO - Extracting text from page 7/86
2025-03-31 14:17:16,503 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:16,504 - INFO - Retrying request to /chat/completions in 0.469116 seconds
2025-03-31 14:17:17,180 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:17,182 - INFO - Retrying request to /chat/completions in 0.844110 seconds
2025-03-31 14:17:18,215 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:18,217 - ERROR - Error in API response: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-03-31 14:17:18,217 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:17:18,232 - INFO - Extracting text from page 8/86
2025-03-31 14:17:18,429 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:18,431 - INFO - Retrying request to /chat/completions in 0.444513 seconds
2025-03-31 14:17:19,056 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:19,057 - INFO - Retrying request to /chat/completions in 0.927035 seconds
2025-03-31 14:17:20,266 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:20,268 - ERROR - Error in API response: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-03-31 14:17:20,269 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:17:20,282 - INFO - Extracting text from page 9/86
2025-03-31 14:17:20,462 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:20,463 - INFO - Retrying request to /chat/completions in 0.377269 seconds
2025-03-31 14:17:21,020 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:21,021 - INFO - Retrying request to /chat/completions in 0.770522 seconds
2025-03-31 14:17:22,060 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:22,061 - ERROR - Error in API response: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-03-31 14:17:22,061 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:17:22,068 - INFO - Extracting text from page 10/86
2025-03-31 14:17:22,362 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:22,362 - INFO - Retrying request to /chat/completions in 0.407675 seconds
2025-03-31 14:17:22,988 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:22,991 - INFO - Retrying request to /chat/completions in 0.899614 seconds
2025-03-31 14:17:24,136 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:24,138 - ERROR - Error in API response: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-03-31 14:17:24,138 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:17:24,154 - INFO - Extracting text from page 11/86
2025-03-31 14:17:24,334 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:24,335 - INFO - Retrying request to /chat/completions in 0.413726 seconds
2025-03-31 14:17:24,984 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:24,987 - INFO - Retrying request to /chat/completions in 0.758879 seconds
2025-03-31 14:17:25,938 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:25,939 - ERROR - Error in API response: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-03-31 14:17:25,940 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:17:25,955 - INFO - Extracting text from page 12/86
2025-03-31 14:17:26,265 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:26,266 - INFO - Retrying request to /chat/completions in 0.399473 seconds
2025-03-31 14:17:26,867 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:26,869 - INFO - Retrying request to /chat/completions in 0.823858 seconds
2025-03-31 14:17:27,897 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:27,899 - ERROR - Error in API response: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-03-31 14:17:27,899 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:17:27,914 - INFO - Extracting text from page 13/86
2025-03-31 14:17:28,129 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:28,133 - INFO - Retrying request to /chat/completions in 0.460250 seconds
2025-03-31 14:17:28,833 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:28,835 - INFO - Retrying request to /chat/completions in 0.919077 seconds
2025-03-31 14:17:29,943 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:29,946 - ERROR - Error in API response: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-03-31 14:17:29,946 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:17:29,962 - INFO - Extracting text from page 14/86
2025-03-31 14:17:30,221 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:30,223 - INFO - Retrying request to /chat/completions in 0.460396 seconds
2025-03-31 14:17:30,952 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:30,953 - INFO - Retrying request to /chat/completions in 0.958229 seconds
2025-03-31 14:17:32,101 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:32,101 - ERROR - Error in API response: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-03-31 14:17:32,101 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:17:32,109 - INFO - Extracting text from page 15/86
2025-03-31 14:17:32,323 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:32,324 - INFO - Retrying request to /chat/completions in 0.466908 seconds
2025-03-31 14:17:33,036 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-03-31 14:17:33,041 - INFO - Retrying request to /chat/completions in 0.861153 seconds
2025-03-31 14:22:06,719 - INFO - Script is running
2025-03-31 14:22:06,720 - INFO - Processing PDF file: stockholm_2023.pdf
2025-03-31 14:22:06,743 - INFO - Extracting text from page 1/86
2025-03-31 14:22:15,159 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:22:15,166 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:22:15,173 - INFO - Extracting text from page 2/86
2025-03-31 14:22:21,198 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:22:21,201 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:22:21,210 - INFO - Extracting text from page 3/86
2025-03-31 14:22:28,552 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:22:28,555 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:22:28,568 - INFO - Extracting text from page 4/86
2025-03-31 14:22:31,151 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:22:31,156 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:22:31,170 - INFO - Extracting text from page 5/86
2025-03-31 14:25:05,908 - INFO - Script is running
2025-03-31 14:25:05,909 - INFO - Processing PDF file: stockholm_2023.pdf
2025-03-31 14:25:05,927 - INFO - Extracting text from page 1/86
2025-03-31 14:25:05,927 - DEBUG - Extracted text: STOCKHOLM
CONVENTION
ON PERSISTENT ORGANIC POLLUTA
2025-03-31 14:25:05,930 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\nSTOCKHOLM\nCONVENTION\nON PERSISTENT ORGANIC POLLUTANTS (POPS)\nTEXT AND ANNEXES\nREVISED IN 2023\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:25:05,951 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:25:05,952 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-03-31 14:25:06,061 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x108aab150>
2025-03-31 14:25:06,062 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x1091a8b90> server_hostname='api.openai.com' timeout=5.0
2025-03-31 14:25:06,106 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1089f3cd0>
2025-03-31 14:25:06,106 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:25:06,106 - DEBUG - send_request_headers.complete
2025-03-31 14:25:06,107 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:25:06,107 - DEBUG - send_request_body.complete
2025-03-31 14:25:06,107 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:25:12,898 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 12:25:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'6526'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124660'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'163ms'), (b'x-request-id', b'req_0855f0a069704eadfccdfaf2b1107125'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=.odespyiyPXAKjeMO1ar.BgzNyQYA5X42M43GbLZjSA-1743423912-1.0.1.1-FzO5t9e4pBfjJk.08sq54K0cNwLPrr6VhzJV9BFMAM2xUIRmBNZHVe2bpg42Bh5clxMxHSCrngEo7VqjnOV8E2Fj6dU.vT9c.e.cmLG2YL8; path=/; expires=Mon, 31-Mar-25 12:55:12 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=UGQvQVnOuhsnfeqXBR26vBzn7.aXVYf8MpD65_FCaKg-1743423912940-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'928fd3d629654d91-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 14:25:12,902 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:25:12,902 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 14:25:12,903 - DEBUG - receive_response_body.complete
2025-03-31 14:25:12,903 - DEBUG - response_closed.started
2025-03-31 14:25:12,903 - DEBUG - response_closed.complete
2025-03-31 14:25:12,903 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Mon, 31 Mar 2025 12:25:12 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'master-thesis-chemical-rag'), ('openai-processing-ms', '6526'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '1000'), ('x-ratelimit-limit-tokens', '125000'), ('x-ratelimit-remaining-requests', '999'), ('x-ratelimit-remaining-tokens', '124660'), ('x-ratelimit-reset-requests', '60ms'), ('x-ratelimit-reset-tokens', '163ms'), ('x-request-id', 'req_0855f0a069704eadfccdfaf2b1107125'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=.odespyiyPXAKjeMO1ar.BgzNyQYA5X42M43GbLZjSA-1743423912-1.0.1.1-FzO5t9e4pBfjJk.08sq54K0cNwLPrr6VhzJV9BFMAM2xUIRmBNZHVe2bpg42Bh5clxMxHSCrngEo7VqjnOV8E2Fj6dU.vT9c.e.cmLG2YL8; path=/; expires=Mon, 31-Mar-25 12:55:12 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=UGQvQVnOuhsnfeqXBR26vBzn7.aXVYf8MpD65_FCaKg-1743423912940-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '928fd3d629654d91-FRA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-03-31 14:25:12,903 - DEBUG - request_id: req_0855f0a069704eadfccdfaf2b1107125
2025-03-31 14:25:12,907 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH8UMVlXRhhFuuHH652cuRdC4owrs', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content="I don't see the actual text containing the chemical data in your message. You've only included the introductory section of the report, but not the specific chemical names and CAS numbers. Could you please provide the part of the PDF containing the chemical trade names and CAS numbers you want me to analyze? Once you provide that text, I can proceed immediately.", refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743423906, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=69, prompt_tokens=335, total_tokens=404, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 14:25:12,907 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:25:12,911 - INFO - Extracting text from page 2/86
2025-03-31 14:25:12,911 - DEBUG - Extracted text: 
2025-03-31 14:25:12,913 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:25:12,914 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:25:12,914 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:25:12,914 - DEBUG - send_request_headers.complete
2025-03-31 14:25:12,914 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:25:12,914 - DEBUG - send_request_body.complete
2025-03-31 14:25:12,914 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:25:16,605 - DEBUG - receive_response_headers.failed exception=KeyboardInterrupt()
2025-03-31 14:25:16,606 - DEBUG - response_closed.started
2025-03-31 14:25:16,607 - DEBUG - response_closed.complete
2025-03-31 14:29:07,657 - INFO - Script is running
2025-03-31 14:29:07,658 - INFO - Processing PDF file: stockholm_2023.pdf
2025-03-31 14:29:07,677 - INFO - Extracting text from page 1/86
2025-03-31 14:29:07,677 - DEBUG - Extracted text: STOCKHOLM
CONVENTION
ON PERSISTENT ORGANIC POLLUTA
2025-03-31 14:29:07,680 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\nSTOCKHOLM\nCONVENTION\nON PERSISTENT ORGANIC POLLUTANTS (POPS)\nTEXT AND ANNEXES\nREVISED IN 2023\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:29:07,699 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:29:07,700 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-03-31 14:29:07,856 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x109984210>
2025-03-31 14:29:07,856 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x109944b90> server_hostname='api.openai.com' timeout=5.0
2025-03-31 14:29:07,900 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1077205d0>
2025-03-31 14:29:07,901 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:29:07,902 - DEBUG - send_request_headers.complete
2025-03-31 14:29:07,902 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:29:07,902 - DEBUG - send_request_body.complete
2025-03-31 14:29:07,903 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:29:15,713 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 12:29:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'7598'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124660'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'163ms'), (b'x-request-id', b'req_7f6f7db5c0a6b1fb2bdccfd6259980f9'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=nDwH0FwTGAAZPSTsFBLO6YR0.fxIY8un.tMhKCWfw44-1743424155-1.0.1.1-Ak.jpN4bs5W4olCsxi0aeMT5vyG8Bxv9qJGO7iRvvxF6hSLvwyRzwNQMBdGmww0yHe.Hi0d_hK5I.BEc_2JHJQY0wrUhUQy2dZXIafvKmpU; path=/; expires=Mon, 31-Mar-25 12:59:15 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=HKY9VQoP0pi_ONLhMWy_rzy_PP34lR4xvlq.w.j_Q1I-1743424155758-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'928fd9bcfaf83606-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 14:29:15,718 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:29:15,721 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 14:29:15,723 - DEBUG - receive_response_body.complete
2025-03-31 14:29:15,723 - DEBUG - response_closed.started
2025-03-31 14:29:15,723 - DEBUG - response_closed.complete
2025-03-31 14:29:15,723 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Mon, 31 Mar 2025 12:29:15 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'master-thesis-chemical-rag'), ('openai-processing-ms', '7598'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '1000'), ('x-ratelimit-limit-tokens', '125000'), ('x-ratelimit-remaining-requests', '999'), ('x-ratelimit-remaining-tokens', '124660'), ('x-ratelimit-reset-requests', '60ms'), ('x-ratelimit-reset-tokens', '163ms'), ('x-request-id', 'req_7f6f7db5c0a6b1fb2bdccfd6259980f9'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=nDwH0FwTGAAZPSTsFBLO6YR0.fxIY8un.tMhKCWfw44-1743424155-1.0.1.1-Ak.jpN4bs5W4olCsxi0aeMT5vyG8Bxv9qJGO7iRvvxF6hSLvwyRzwNQMBdGmww0yHe.Hi0d_hK5I.BEc_2JHJQY0wrUhUQy2dZXIafvKmpU; path=/; expires=Mon, 31-Mar-25 12:59:15 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=HKY9VQoP0pi_ONLhMWy_rzy_PP34lR4xvlq.w.j_Q1I-1743424155758-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '928fd9bcfaf83606-FRA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-03-31 14:29:15,724 - DEBUG - request_id: req_7f6f7db5c0a6b1fb2bdccfd6259980f9
2025-03-31 14:29:15,734 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH8YGH3OuFfRNLlffqUSBX6MUtBov', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content="I don't see the specific text or chemical information in the content you provided. The text you've shared so far doesn't include chemical trade names or CAS numbers.\n\nCould you please provide the specific text from the PDF containing the chemical trade names and CAS numbers so that I can accurately extract the required pairs?\n\nOnce provided, I will promptly and accurately list every chemical pair exactly as directed.", refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743424148, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=75, prompt_tokens=335, total_tokens=410, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 14:29:15,734 - WARNING - Response is not as expected or missing 'content' attribute
2025-03-31 14:29:15,734 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:29:15,743 - INFO - Extracting text from page 2/86
2025-03-31 14:29:15,743 - DEBUG - Extracted text: 
2025-03-31 14:29:15,744 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:29:15,745 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:29:15,745 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:29:15,745 - DEBUG - send_request_headers.complete
2025-03-31 14:29:15,745 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:29:15,746 - DEBUG - send_request_body.complete
2025-03-31 14:29:15,746 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:29:18,961 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 12:29:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'3010'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124684'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'151ms'), (b'x-request-id', b'req_7812ad9c4f608fdb31770c4b59b51104'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'928fd9edfc3e3606-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 14:29:18,963 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:29:18,964 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 14:29:18,965 - DEBUG - receive_response_body.complete
2025-03-31 14:29:18,965 - DEBUG - response_closed.started
2025-03-31 14:29:18,965 - DEBUG - response_closed.complete
2025-03-31 14:29:18,965 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 12:29:19 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '3010', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124684', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '151ms', 'x-request-id': 'req_7812ad9c4f608fdb31770c4b59b51104', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '928fd9edfc3e3606-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 14:29:18,965 - DEBUG - request_id: req_7812ad9c4f608fdb31770c4b59b51104
2025-03-31 14:29:18,966 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH8YNa4VG84H356mZ4dO4c3f95pOk', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='Please provide the text from the PDF report that you wish me to analyze. The text was not included in your previous message.', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743424155, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=26, prompt_tokens=299, total_tokens=325, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 14:29:18,966 - WARNING - Response is not as expected or missing 'content' attribute
2025-03-31 14:29:18,966 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:29:18,977 - INFO - Extracting text from page 3/86
2025-03-31 14:29:18,977 - DEBUG - Extracted text: STOCKHOLM
CONVENTION
ON PERSISTENT ORGANIC POLLUTA
2025-03-31 14:29:18,980 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\nSTOCKHOLM\nCONVENTION\nON PERSISTENT ORGANIC POLLUTANTS (POPS)\nTEXT AND ANNEXES\nREVISED IN 2023\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:29:18,982 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:29:18,982 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:29:18,982 - DEBUG - send_request_headers.complete
2025-03-31 14:29:18,982 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:29:18,982 - DEBUG - send_request_body.complete
2025-03-31 14:29:18,982 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:29:28,934 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 12:29:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'9748'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124660'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'163ms'), (b'x-request-id', b'req_0c5bec64198a32d73f3e113675689285'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'928fda023b8f3606-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 14:29:28,936 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:29:28,936 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 14:29:28,938 - DEBUG - receive_response_body.complete
2025-03-31 14:29:28,938 - DEBUG - response_closed.started
2025-03-31 14:29:28,938 - DEBUG - response_closed.complete
2025-03-31 14:29:28,938 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 12:29:28 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '9748', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124660', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '163ms', 'x-request-id': 'req_0c5bec64198a32d73f3e113675689285', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '928fda023b8f3606-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 14:29:28,938 - DEBUG - request_id: req_0c5bec64198a32d73f3e113675689285
2025-03-31 14:29:28,939 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH8YR7CsTahbBxjr0IPk1kIz9G20g', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='I don\'t see the text containing chemical details or CAS numbers in what you provided. The current text snippet:\n\n"STOCKHOLM  \nCONVENTION  \nON PERSISTENT ORGANIC POLLUTANTS (POPS)  \nTEXT AND ANNEXES  \nREVISED IN 2023"\n\ndoes NOT contain any chemical trade names or CAS numbers.\n\nCould you please provide me with the correct text excerpt containing chemical trade names and CAS numbers? Once you\'ve done this, I can immediately extract the data for you in the structured format requested.', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743424159, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=108, prompt_tokens=335, total_tokens=443, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 14:29:28,939 - WARNING - Response is not as expected or missing 'content' attribute
2025-03-31 14:29:28,940 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:29:28,953 - INFO - Extracting text from page 4/86
2025-03-31 14:29:28,953 - DEBUG - Extracted text: Copyright @ Secretariat of the Stockholm Conventio
2025-03-31 14:29:28,956 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\nCopyright @ Secretariat of the Stockholm Convention (SSC), May 2023.\nThis booklet is published for information only. It does not substitute the original authentic texts of the Stockholm \nConvention and amendments thereto as deposited with the Secretary-General of the United Nations acting as the \nDepository of the Convention. In case of error, omission, interruption, deletion, defect, alteration of their contents, and \nany discrepancy between the present booklet, on the one hand, and the original authentic text, on the other hand, the \nlatter shall prevail. \nThis publication may be reproduced in whole or in part and in any form for educational or non-profit purposes without \nspecial permission from the copyright holder, i.e. SSC, provided acknowledgement of the source is made. SSC would \nappreciate receiving a copy of any publication that uses this publication as a source. No use of this publication may be \nmade for resale or for any other commercial purpose whatsoever without prior permission in writing from SSC.\nThe views expressed in this publication are those of the authors and do not necessarily reflect the views of SSC, the United \nNations Environment Programme (UNEP) or the United Nations (UN). SSC, UNEP or the UN do not accept responsibility \nfor the accuracy or completeness of the contents and shall not be liable for any loss or damage that may be occasioned, \ndirectly or indirectly, through the use of, or reliance on, the contents of this publication.\nThe designations employed and the presentation of the material in this publication do not imply the expression of any \nopinion whatsoever on the part of SSC, the United Nations Environment Programme or the UN, concerning the geo-political \nsituations or the legal status of any country, territory, or city or area or their authorities, or concerning the delimitation \nof their frontiers or boundaries.\nDisclaimer\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:29:28,957 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:29:28,957 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:29:28,957 - DEBUG - send_request_headers.complete
2025-03-31 14:29:28,957 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:29:28,957 - DEBUG - send_request_body.complete
2025-03-31 14:29:28,957 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:29:31,459 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 12:29:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'2292'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124209'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'379ms'), (b'x-request-id', b'req_d788b67a84bf96a13ed0ab098a32ceb2'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'928fda408f8d3606-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 14:29:31,461 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:29:31,461 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 14:29:31,462 - DEBUG - receive_response_body.complete
2025-03-31 14:29:31,462 - DEBUG - response_closed.started
2025-03-31 14:29:31,462 - DEBUG - response_closed.complete
2025-03-31 14:29:31,463 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 12:29:31 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '2292', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124209', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '379ms', 'x-request-id': 'req_d788b67a84bf96a13ed0ab098a32ceb2', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '928fda408f8d3606-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 14:29:31,463 - DEBUG - request_id: req_d788b67a84bf96a13ed0ab098a32ceb2
2025-03-31 14:29:31,464 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH8YbgLfufR4IeoRLkGAEzoN5xY2z', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='The provided text does not contain any Chemical Trade Names or CAS Numbers.\n\nTherefore, the extraction result is empty.', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743424169, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=23, prompt_tokens=673, total_tokens=696, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 14:29:31,464 - WARNING - Response is not as expected or missing 'content' attribute
2025-03-31 14:29:31,464 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:29:31,479 - INFO - Extracting text from page 5/86
2025-03-31 14:29:31,479 - DEBUG - Extracted text: |  3
INTRODUCTION
The Stockholm Convention on Pers
2025-03-31 14:29:31,482 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n|\u2002 3\nINTRODUCTION\nThe Stockholm Convention on Persistent Organic Pollutants was adopted at a \nConference of Plenipotentiaries on 22 May 2001 in Stockholm, Sweden. The \nConvention entered into force on 17 May 2004.\nArticle 18 of the Convention requires the Conference of the Parties to adopt \narbitration and conciliation procedures to govern the settlement of disputes \nbetween Parties to the Convention. At its first meeting, held from 2 to 6 May 2005 in \nPunta del Este, Uruguay, the Conference of the Parties adopted decision SC-1/2, by \nwhich it established such procedures. The procedures are set out in Annex G  to the \nConvention, Part I of which sets forth the arbitration procedure and Part II of which \nsets forth the conciliation procedure. Annex G entered into force on 31 October 2007, \ni.e. one year after the date of the communication of its adoption by the depositary for \nthe Convention.\nAmendments to Annexes A, B or C to the Convention enter into force one year from the \ndate of communication of their adoption by the depositary, except for those Parties \nthat submit either: a notification of non-acceptance in accordance with the provisions \nof paragraph 3 (b) of Article 22; or a declaration in accordance with paragraph 4 of \nArticle 22 and paragraph 4 of Article 25 of the Convention.\nThis revised booklet reflects the amendments to the Annexes A, B and C to the \nConvention adopted at the fourth, fifth, sixth, seventh, eighth, ninth, tenth and \neleventh meetings of the Conference of the Parties.\nThe version of the Stockholm Convention contained in this booklet is for information \npurposes and does not substitute the original authentic texts of the Convention and \namendments thereto as deposited with the Secretary-General in New York. Should \nyou wish to access the authentic texts of the Convention, obtain a certified true copy \nof the Convention or, more generally, have access to amendments and modifications \nto the certified true copies, rectifications of authentic texts or any other relevant \nformalities circulated under the cover of depositary notifications (CNs), you are \nadvised to visit the United Nations Treaty Section online (https://treaties.un.org) or \nkindly contact the Treaty Section for further assistance.\n \nThe Secretariat of the Stockholm Convention, May 2023.\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:29:31,485 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:29:31,485 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:29:31,485 - DEBUG - send_request_headers.complete
2025-03-31 14:29:31,485 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:29:31,485 - DEBUG - send_request_body.complete
2025-03-31 14:29:31,486 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:29:35,581 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 12:29:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'3895'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124102'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'430ms'), (b'x-request-id', b'req_793b7a317aec8f1a50d7417bb7d11d3a'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'928fda505e1f3606-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 14:29:35,582 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:29:35,582 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 14:29:35,583 - DEBUG - receive_response_body.complete
2025-03-31 14:29:35,583 - DEBUG - response_closed.started
2025-03-31 14:29:35,583 - DEBUG - response_closed.complete
2025-03-31 14:29:35,583 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 12:29:35 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '3895', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124102', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '430ms', 'x-request-id': 'req_793b7a317aec8f1a50d7417bb7d11d3a', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '928fda505e1f3606-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 14:29:35,583 - DEBUG - request_id: req_793b7a317aec8f1a50d7417bb7d11d3a
2025-03-31 14:29:35,584 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH8YdhpkD1RLOTXXh2IMFMy9vQmWo', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='There are no Chemical Trade Names or CAS Numbers present in the provided text. \n\nTherefore, the result is empty (no entries):\n\nChemical Trade Name, CAS Number\n', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743424171, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=34, prompt_tokens=802, total_tokens=836, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 14:29:35,584 - WARNING - Response is not as expected or missing 'content' attribute
2025-03-31 14:29:35,584 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:29:35,593 - INFO - Extracting text from page 6/86
2025-03-31 14:29:35,594 - DEBUG - Extracted text: |  4
STOCKHOLM CONVENTION  
ON PERSISTENT ORGANIC 
2025-03-31 14:29:35,596 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n|\u2002 4\nSTOCKHOLM CONVENTION  \nON PERSISTENT ORGANIC POLLUTANTS\nThe Parties to this Convention,\nRecognizing that persistent organic pollutants possess toxic properties, resist \ndegradation, bioaccumulate and are transported, through air, water and migratory \nspecies, across international boundaries and deposited far from their place of \nrelease, where they accumulate in terrestrial and aquatic ecosystems,\nAware of the health concerns, especially in developing countries, resulting from local \nexposure to persistent organic pollutants, in particular impacts upon women and, \nthrough them, upon future generations,\nAcknowledging that the Arctic ecosystems and indigenous communities are \nparticularly at risk because of the biomagnification of persistent organic pollutants \nand that contamination of their traditional foods is a public health issue,\nConscious of the need for global action on persistent organic pollutants,\nMindful of decision 19/13 C of 7 February 1997 of the Governing Council of the \nUnited\xa0Nations Environment Programme to initiate international action to protect \nhuman health and the environment through measures which will reduce and/or \neliminate emissions and discharges of persistent organic pollutants,\nRecalling the pertinent provisions of the relevant international environmental \nconventions, especially the Rotterdam Convention on the Prior Informed Consent \nProcedure for Certain Hazardous Chemicals and Pesticides in International Trade, \nand the Basel Convention on the Control of Transboundary Movements of Hazardous \nWastes and their Disposal including the regional agreements developed within the \nframework of its Article 11,\nRecalling also the pertinent provisions of the Rio Declaration on Environment and \nDevelopment and Agenda 21,\nAcknowledging that precaution underlies the concerns of all the Parties and is \nembedded within this Convention,\nRecognizing that this Convention and other international agreements in the field of \ntrade and the environment are mutually supportive,\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:29:35,596 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:29:35,596 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:29:35,597 - DEBUG - send_request_headers.complete
2025-03-31 14:29:35,597 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:29:35,597 - DEBUG - send_request_body.complete
2025-03-31 14:29:35,597 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:29:36,927 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 12:29:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'1122'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124176'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'395ms'), (b'x-request-id', b'req_816abd3277d9439b777f6542672a6176'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'928fda6a0d4a3606-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 14:29:36,928 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:29:36,928 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 14:29:36,929 - DEBUG - receive_response_body.complete
2025-03-31 14:29:36,929 - DEBUG - response_closed.started
2025-03-31 14:29:36,929 - DEBUG - response_closed.complete
2025-03-31 14:29:36,929 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 12:29:36 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '1122', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124176', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '395ms', 'x-request-id': 'req_816abd3277d9439b777f6542672a6176', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '928fda6a0d4a3606-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 14:29:36,929 - DEBUG - request_id: req_816abd3277d9439b777f6542672a6176
2025-03-31 14:29:36,930 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH8Yhv4nLHjnVcSh5bOCCUNrU9Rkp', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='NA, NA', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743424175, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=4, prompt_tokens=670, total_tokens=674, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 14:29:36,930 - WARNING - Response is not as expected or missing 'content' attribute
2025-03-31 14:29:36,930 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:29:36,943 - INFO - Extracting text from page 7/86
2025-03-31 14:29:36,943 - DEBUG - Extracted text: |  5
Reaffirming that States have, in accordance w
2025-03-31 14:29:36,946 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n|\u2002 5\nReaffirming that States have, in accordance with the Charter of the United\xa0Nations \nand the principles of international law, the sovereign right to exploit their own \nresources pursuant to their own environmental and developmental policies, and the \nresponsibility to ensure that activities within their jurisdiction or control do not cause \ndamage to the environment of other States or of areas beyond the limits of national \njurisdiction,\nTaking into account the circumstances and particular requirements of developing \ncountries, in particular the least developed among them, and countries with \neconomies in transition, especially the need to strengthen their national capabilities \nfor the management of chemicals, including through the transfer of technology, the \nprovision of financial and technical assistance and the promotion of cooperation \namong the Parties,\nTaking full account of the Programme of Action for the Sustainable Development of \nSmall Island Developing States, adopted in Barbados on 6 May 1994,\nNoting the respective capabilities of developed and developing countries, as well as \nthe common but differentiated responsibilities of States as set forth in Principle 7 of \nthe Rio Declaration on Environment and Development,\nRecognizing the important contribution that the private sector and non-governmental \norganizations can make to achieving the reduction and/or elimination of emissions \nand discharges of persistent organic pollutants,\nUnderlining the importance of manufacturers of persistent organic pollutants taking \nresponsibility for reducing adverse effects caused by their products and for providing \ninformation to users, Governments and the public on the hazardous properties of \nthose chemicals,\nConscious of the need to take measures to prevent adverse effects caused by \npersistent organic pollutants at all stages of their life cycle,\nReaffirming Principle 16 of the Rio Declaration on Environment and Development \nwhich states that national authorities should endeavour to promote the internalization \nof environmental costs and the use of economic instruments, taking into account \nthe approach that the polluter should, in principle, bear the cost of pollution, with \ndue regard to the public interest and without distorting international trade and \ninvestment,\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:29:36,947 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:29:36,947 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:29:36,948 - DEBUG - send_request_headers.complete
2025-03-31 14:29:36,948 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:29:36,948 - DEBUG - send_request_body.complete
2025-03-31 14:29:36,948 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:29:37,544 - DEBUG - receive_response_headers.failed exception=KeyboardInterrupt()
2025-03-31 14:29:37,544 - DEBUG - response_closed.started
2025-03-31 14:29:37,546 - DEBUG - response_closed.complete
2025-03-31 14:36:20,560 - INFO - Script is running
2025-03-31 14:36:20,560 - INFO - Processing PDF file: stockholm_2023.pdf
2025-03-31 14:36:20,576 - INFO - Extracting text from page 1/38
2025-03-31 14:36:20,576 - DEBUG - Extracted text: | 35
ANNEXES

2025-03-31 14:36:20,579 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 35\nANNEXES\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:36:20,598 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:36:20,598 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-03-31 14:36:20,679 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1204b4e50>
2025-03-31 14:36:20,679 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x120470b90> server_hostname='api.openai.com' timeout=5.0
2025-03-31 14:36:20,720 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x116294910>
2025-03-31 14:36:20,720 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:36:20,721 - DEBUG - send_request_headers.complete
2025-03-31 14:36:20,721 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:36:20,721 - DEBUG - send_request_body.complete
2025-03-31 14:36:20,721 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:36:26,144 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 12:36:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'5220'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124679'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'153ms'), (b'x-request-id', b'req_af9f47b60dadadb64aa8de1a5c1b0448'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=raSgReqVl.jF7GVHKixwcSoP2kUiuNiVxAVY0ub7sYs-1743424586-1.0.1.1-6f0w3O3Tlg8lyzNjwC49_BjO_ZRbcV.FMWAEmahPJO1zrDAfBiPj52Xr0TTSZDsfIzSMrrZI_frk_sJ2TJPV7dPVGLuNJHrvCNdo7ARUg8M; path=/; expires=Mon, 31-Mar-25 13:06:26 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=XuE7ACrGXJDI9_FjFNqQ_viVQ1c2E4LoV_kHYUDCmHY-1743424586195-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'928fe44e1b850394-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 14:36:26,147 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:36:26,147 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 14:36:26,148 - DEBUG - receive_response_body.complete
2025-03-31 14:36:26,148 - DEBUG - response_closed.started
2025-03-31 14:36:26,148 - DEBUG - response_closed.complete
2025-03-31 14:36:26,148 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Mon, 31 Mar 2025 12:36:26 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'master-thesis-chemical-rag'), ('openai-processing-ms', '5220'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '1000'), ('x-ratelimit-limit-tokens', '125000'), ('x-ratelimit-remaining-requests', '999'), ('x-ratelimit-remaining-tokens', '124679'), ('x-ratelimit-reset-requests', '60ms'), ('x-ratelimit-reset-tokens', '153ms'), ('x-request-id', 'req_af9f47b60dadadb64aa8de1a5c1b0448'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=raSgReqVl.jF7GVHKixwcSoP2kUiuNiVxAVY0ub7sYs-1743424586-1.0.1.1-6f0w3O3Tlg8lyzNjwC49_BjO_ZRbcV.FMWAEmahPJO1zrDAfBiPj52Xr0TTSZDsfIzSMrrZI_frk_sJ2TJPV7dPVGLuNJHrvCNdo7ARUg8M; path=/; expires=Mon, 31-Mar-25 13:06:26 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=XuE7ACrGXJDI9_FjFNqQ_viVQ1c2E4LoV_kHYUDCmHY-1743424586195-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '928fe44e1b850394-FRA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-03-31 14:36:26,149 - DEBUG - request_id: req_af9f47b60dadadb64aa8de1a5c1b0448
2025-03-31 14:36:26,155 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH8fEE60i1ErqCJIKh87KP4pXGQxx', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content="I don't see the text from the PDF report included in your message. Could you please provide the text you want me to analyze? Once you provide it, I'll immediately extract the Chemical Trade Name and CAS Number pairs for you according to the format requested.", refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743424580, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=51, prompt_tokens=307, total_tokens=358, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 14:36:26,155 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:36:26,165 - INFO - Extracting text from page 2/38
2025-03-31 14:36:26,165 - DEBUG - Extracted text: | 36
ANNEX A1
ELIMINATION
Part I
Chemical
Activity
2025-03-31 14:36:26,168 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 36\nANNEX A1\nELIMINATION\nPart I\nChemical\nActivity\nSpeciﬁc exemption2\nAldrin* \nCAS No: 309-00-2\nProduction\nNone\nUse\nLocal ectoparasiticide \nInsecticide\nAlpha \nhexachlorocyclohexane* \nCAS No: 319-84-6\nProduction\nNone\nUse\nNone\nBeta \nhexachlorocyclohexane* \nCAS No: 319-85-7\nProduction\nNone\nUse\nNone\nChlordane* \nCAS No: 57-74-9\nProduction\nAs allowed for the Parties listed in \nthe Register\nUse\nLocal ectoparasiticide \nInsecticide \nTermiticide\nTermiticide in buildings and dams\nTermiticide in roads\nAdditive in plywood adhesives\nChlordecone* \nCAS No: 143-50-0\nProduction\nNone\nUse\nNone\n1 \nAs amended by decisions SC-4/10 to SC-4/18 of 8 May 2009; SC-5/3 of 29 April 2011; SC-6/13 of 10 May 2013; \nSC-7/12 to SC-7/14 of 15 May 2015; and SC-8/10 to SC-8/12 of 5 May 2017; and SC-9/4, SC-9/11 and SC-9/12 \nof 10 May 2019; and SC-11/9, SC-11/10 and SC-11/11 of 12 May 2023.\n2 \nPlease note that, in accordance with paragraph 9 of Article 4 of the Convention, when there are no longer any \nParties registered for a particular type of speciﬁc exemption no new registrations may be made with respect \nto such exemptions, which appear in gray text in the table.\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:36:26,169 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:36:26,169 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:36:26,169 - DEBUG - send_request_headers.complete
2025-03-31 14:36:26,170 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:36:26,170 - DEBUG - send_request_body.complete
2025-03-31 14:36:26,170 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:36:34,729 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 12:36:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'8365'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124396'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'289ms'), (b'x-request-id', b'req_d50155c890946a7a617e121a24d61f53'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'928fe4702fcd0394-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 14:36:34,732 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:36:34,732 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 14:36:34,733 - DEBUG - receive_response_body.complete
2025-03-31 14:36:34,733 - DEBUG - response_closed.started
2025-03-31 14:36:34,733 - DEBUG - response_closed.complete
2025-03-31 14:36:34,734 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 12:36:34 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '8365', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124396', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '289ms', 'x-request-id': 'req_d50155c890946a7a617e121a24d61f53', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '928fe4702fcd0394-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 14:36:34,734 - DEBUG - request_id: req_d50155c890946a7a617e121a24d61f53
2025-03-31 14:36:34,735 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH8fKf2HZolJUHtjBHGsGuXs0qHtd', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Aldrin", "309-00-2"  \n"Alpha hexachlorocyclohexane", "319-84-6"  \n"Beta hexachlorocyclohexane", "319-85-7"  \n"Chlordane", "57-74-9"  \n"Chlordecone", "143-50-0"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743424586, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=77, prompt_tokens=712, total_tokens=789, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 14:36:34,735 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:36:34,745 - INFO - Extracting text from page 3/38
2025-03-31 14:36:34,745 - DEBUG - Extracted text: | 37
Chemical
Activity
Speciﬁc exemption2
Decabrom
2025-03-31 14:36:34,748 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 37\nChemical\nActivity\nSpeciﬁc exemption2\nDecabromodiphenyl \nether (BDE-209) \npresent in commercial \ndecabromodiphenyl ether  \n(CAS No: 1163-19-5)\nProduction\nAs allowed for the Parties listed in \nthe Register\nUse \nIn accordance with Part IX of this \nAnnex:\n• Parts for use in vehicles speciﬁed \nin paragraph 2 of Part IX of this \nAnnex \n• Aircraft for which type approval \nhas been applied for before \nDecember 2018 and has been \nreceived before December 2022 \nand spare parts for those aircraft \n• Textile products that require \nanti-ﬂammable characteristics, \nexcluding clothing and toys \n• Additives in plastic housings \nand parts used for heating home \nappliances, irons, fans, immersion \nheaters that contain or are in \ndirect contact with electrical \nparts or are required to comply \nwith ﬁre retardancy standards, at \nconcentrations lower than 10 per \ncent by weight of the part \n• Polyurethane foam for building \ninsulation\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:36:34,749 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:36:34,750 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:36:34,750 - DEBUG - send_request_headers.complete
2025-03-31 14:36:34,750 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:36:34,750 - DEBUG - send_request_body.complete
2025-03-31 14:36:34,750 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:36:39,738 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 12:36:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'4705'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124446'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'265ms'), (b'x-request-id', b'req_40c21d2c2375894d9f7e454bdf0e9d33'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'928fe4a5cdbe0394-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 14:36:39,741 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:36:39,743 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 14:36:39,743 - DEBUG - receive_response_body.complete
2025-03-31 14:36:39,744 - DEBUG - response_closed.started
2025-03-31 14:36:39,744 - DEBUG - response_closed.complete
2025-03-31 14:36:39,746 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 12:36:39 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '4705', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124446', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '265ms', 'x-request-id': 'req_40c21d2c2375894d9f7e454bdf0e9d33', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '928fe4a5cdbe0394-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 14:36:39,746 - DEBUG - request_id: req_40c21d2c2375894d9f7e454bdf0e9d33
2025-03-31 14:36:39,747 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH8fTy44jH8Z8iqn9GXKhxn5UCk1S', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Decabromodiphenyl ether (BDE-209)", "1163-19-5"\n"Commercial decabromodiphenyl ether", "1163-19-5"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743424595, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=43, prompt_tokens=537, total_tokens=580, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 14:36:39,747 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:36:39,757 - INFO - Extracting text from page 4/38
2025-03-31 14:36:39,757 - DEBUG - Extracted text: | 38
Chemical
Activity
Speciﬁc exemption2
Dechlora
2025-03-31 14:36:39,760 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 38\nChemical\nActivity\nSpeciﬁc exemption2\nDechlorane Plus \nCAS No: 13560-89-9\n“Dechlorane Plus” includes \nits syn-isomer  \n(CAS No: 135821-03-3)  \nand its anti-isomer  \n(CAS No: 135821-74-8)\nProduction\nNone\nUse\nIn accordance with part XI of this \nAnnex:\n• Aerospace \n• Space and defence applications \n• Medical imaging and radiotherapy \ndevices and installations \n• Replacement parts for, and \nrepair of, articles in applications in \naccordance with the provisions of \nparagraphs 2 and 3 of part XI of this \nAnnex\nDicofol \nCAS No: 115-32-2 \nCAS No: 10606-46-9\nProduction\nNone\nUse\nNone\nDieldrin* \nCAS No: 60-57-1\nProduction\nNone\nUse\nIn agricultural operations\nEndrin* \nCAS No: 72-20-8\nProduction\nNone\nUse\nNone\nHeptachlor* \nCAS No: 76-44-8\nProduction\nNone\nUse\nTermiticide \nTermiticide in structures of houses\nTermiticide (subterranean)\nWood treatment \nIn use in underground cable boxes\nHexabromobiphenyl * \nCAS No: 36355-01-8\nProduction\nNone\nUse\nNone\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:36:39,761 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:36:39,761 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:36:39,761 - DEBUG - send_request_headers.complete
2025-03-31 14:36:39,761 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:36:39,762 - DEBUG - send_request_body.complete
2025-03-31 14:36:39,762 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:36:53,404 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 12:36:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'13364'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124442'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'267ms'), (b'x-request-id', b'req_7e6ea83b3fa1024928efbb1e68a3a695'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'928fe4c51f860394-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 14:36:53,406 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:36:53,406 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 14:36:53,407 - DEBUG - receive_response_body.complete
2025-03-31 14:36:53,407 - DEBUG - response_closed.started
2025-03-31 14:36:53,407 - DEBUG - response_closed.complete
2025-03-31 14:36:53,408 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 12:36:53 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '13364', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124442', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '267ms', 'x-request-id': 'req_7e6ea83b3fa1024928efbb1e68a3a695', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '928fe4c51f860394-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 14:36:53,408 - DEBUG - request_id: req_7e6ea83b3fa1024928efbb1e68a3a695
2025-03-31 14:36:53,409 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH8fY37pvqkk6YPzNCP3yWhWfRr8j', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Dechlorane Plus", "13560-89-9"\n"Dechlorane Plus syn-isomer", "135821-03-3"\n"Dechlorane Plus anti-isomer", "135821-74-8"\n"Dicofol", "115-32-2"\n"Dicofol", "10606-46-9"\n"Dieldrin", "60-57-1"\n"Endrin", "72-20-8"\n"Heptachlor", "76-44-8"\n"Hexabromobiphenyl", "36355-01-8"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743424600, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=125, prompt_tokens=609, total_tokens=734, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 14:36:53,409 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:36:53,418 - INFO - Extracting text from page 5/38
2025-03-31 14:36:53,418 - DEBUG - Extracted text: | 39
Chemical
Activity
Speciﬁc exemption2
Hexabrom
2025-03-31 14:36:53,422 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 39\nChemical\nActivity\nSpeciﬁc exemption2\nHexabromocyclododecane\nProduction\nAs allowed for the Parties listed in \nthe Register in accordance with the \nprovisions of Part VII of this Annex\nUse\nExpanded polystyrene and \nextruded polystyrene in buildings \nin accordance with the provisions of \nPart VII of this Annex\nHexabromodiphenyl ether* \nand \nheptabromodiphenyl ether*\nProduction\nNone\nUse\nArticles in accordance with the \nprovisions of Part IV of this Annex\nHexachlorobenzene \nCAS No: 118-74-1\nProduction\nAs allowed for the Parties listed in \nthe Register\nUse\nIntermediate\nSolvent in pesticide\nClosed system site limited \nintermediate\nHexachlorobutadiene  \nCAS No: 87-68-3\nProduction\nNone\nUse\nNone\nLindane* \nCAS No: 58-89-9\nProduction\nNone\nUse\nHuman health pharmaceutical for \ncontrol of head lice and scabies as \nsecond line treatment\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:36:53,422 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:36:53,423 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:36:53,423 - DEBUG - send_request_headers.complete
2025-03-31 14:36:53,423 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:36:53,423 - DEBUG - send_request_body.complete
2025-03-31 14:36:53,423 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:37:02,812 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 12:37:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'9185'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124474'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'252ms'), (b'x-request-id', b'req_a5e789378c5285119475bd180caf78b8'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'928fe51a7aac0394-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 14:37:02,815 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:37:02,815 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 14:37:02,825 - DEBUG - receive_response_body.complete
2025-03-31 14:37:02,826 - DEBUG - response_closed.started
2025-03-31 14:37:02,826 - DEBUG - response_closed.complete
2025-03-31 14:37:02,826 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 12:37:02 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '9185', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124474', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '252ms', 'x-request-id': 'req_a5e789378c5285119475bd180caf78b8', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '928fe51a7aac0394-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 14:37:02,826 - DEBUG - request_id: req_a5e789378c5285119475bd180caf78b8
2025-03-31 14:37:02,827 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH8flzG5jqjMuqOtf1Rpoxl3R5vrd', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Hexabromocyclododecane", "NA"  \n"Hexabromodiphenyl ether", "NA"  \n"Heptabromodiphenyl ether", "NA"  \n"Hexachlorobenzene", "118-74-1"  \n"Hexachlorobutadiene", "87-68-3"  \n"Lindane", "58-89-9"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743424613, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=87, prompt_tokens=533, total_tokens=620, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 14:37:02,827 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:37:02,835 - INFO - Extracting text from page 6/38
2025-03-31 14:37:02,835 - DEBUG - Extracted text: | 40
Chemical
Activity
Speciﬁc exemption2
Methoxyc
2025-03-31 14:37:02,838 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 40\nChemical\nActivity\nSpeciﬁc exemption2\nMethoxychlor*\n“Methoxychlor” refers to \nany possible isomer of \ndimethoxydiphenyltrichloroethane \nor any combination thereof.\nFor example:\nCAS No: 72-43-5;\nCAS No: 30667-99-3;\nCAS No: 76733-77-2;\nCAS No: 255065-25-9;\nCAS No: 255065-26-0;\nCAS No: 59424-81-6;\nCAS No: 1348358-72-4.\nProduction\nNone\nUse\nNone\nMirex* \nCAS No: 2385-85-5\nProduction\nAs allowed for the Parties listed in \nthe Register\nUse\nTermiticide\nPentachlorobenzene* \nCAS No: 608-93-5\nProduction\nNone\nUse\nNone\nPentachlorophenol and its \nsalts and esters\nProduction\nAs allowed for the Parties listed in \nthe Register in accordance with the \nprovisions of Part VIII of this Annex\nUse\nPentachlorophenol for utility poles \nand cross-arms in accordance with \nthe provisions of Part VIII of this \nAnnex\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:37:02,839 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:37:02,840 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:37:02,840 - DEBUG - send_request_headers.complete
2025-03-31 14:37:02,840 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:37:02,840 - DEBUG - send_request_body.complete
2025-03-31 14:37:02,840 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:37:11,369 - DEBUG - receive_response_headers.failed exception=KeyboardInterrupt()
2025-03-31 14:37:11,371 - DEBUG - response_closed.started
2025-03-31 14:37:11,372 - DEBUG - response_closed.complete
2025-03-31 14:37:30,914 - INFO - Script is running
2025-03-31 14:37:30,914 - INFO - Processing PDF file: stockholm_2023.pdf
2025-03-31 14:37:30,931 - INFO - Extracting text from page 1/4
2025-03-31 14:37:30,931 - DEBUG - Extracted text: | 36
ANNEX A1
ELIMINATION
Part I
Chemical
Activity
2025-03-31 14:37:30,934 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 36\nANNEX A1\nELIMINATION\nPart I\nChemical\nActivity\nSpeciﬁc exemption2\nAldrin* \nCAS No: 309-00-2\nProduction\nNone\nUse\nLocal ectoparasiticide \nInsecticide\nAlpha \nhexachlorocyclohexane* \nCAS No: 319-84-6\nProduction\nNone\nUse\nNone\nBeta \nhexachlorocyclohexane* \nCAS No: 319-85-7\nProduction\nNone\nUse\nNone\nChlordane* \nCAS No: 57-74-9\nProduction\nAs allowed for the Parties listed in \nthe Register\nUse\nLocal ectoparasiticide \nInsecticide \nTermiticide\nTermiticide in buildings and dams\nTermiticide in roads\nAdditive in plywood adhesives\nChlordecone* \nCAS No: 143-50-0\nProduction\nNone\nUse\nNone\n1 \nAs amended by decisions SC-4/10 to SC-4/18 of 8 May 2009; SC-5/3 of 29 April 2011; SC-6/13 of 10 May 2013; \nSC-7/12 to SC-7/14 of 15 May 2015; and SC-8/10 to SC-8/12 of 5 May 2017; and SC-9/4, SC-9/11 and SC-9/12 \nof 10 May 2019; and SC-11/9, SC-11/10 and SC-11/11 of 12 May 2023.\n2 \nPlease note that, in accordance with paragraph 9 of Article 4 of the Convention, when there are no longer any \nParties registered for a particular type of speciﬁc exemption no new registrations may be made with respect \nto such exemptions, which appear in gray text in the table.\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:37:30,973 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:37:30,976 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-03-31 14:37:31,150 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1299a1910>
2025-03-31 14:37:31,150 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x129970b90> server_hostname='api.openai.com' timeout=5.0
2025-03-31 14:37:31,192 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1299ae050>
2025-03-31 14:37:31,192 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:37:31,192 - DEBUG - send_request_headers.complete
2025-03-31 14:37:31,192 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:37:31,192 - DEBUG - send_request_body.complete
2025-03-31 14:37:31,192 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:37:38,550 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 12:37:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'7142'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124396'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'289ms'), (b'x-request-id', b'req_e2b0b6b47dea488e410efb2bd9ff92c8'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=AwxPRH0CQB0eaMq3q8Fh5O5v.H2KndtaRdNILNtkddI-1743424658-1.0.1.1-tyRhYOy453QfA_bu6vJV_jmSy05_tAEE5sdakcYDt6glBvqudLzPdWfC36sC6f4CSLwGLf7n.ylMFZ39iSwbmCyr_b84Qh04pjOb1F2GXOU; path=/; expires=Mon, 31-Mar-25 13:07:38 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=Iy9BdjB8FByMlLBqWHps.yegiKCMhBhF6tW6rJz7WOo-1743424658603-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'928fe6068a698fda-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 14:37:38,554 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:37:38,554 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 14:37:38,555 - DEBUG - receive_response_body.complete
2025-03-31 14:37:38,555 - DEBUG - response_closed.started
2025-03-31 14:37:38,555 - DEBUG - response_closed.complete
2025-03-31 14:37:38,555 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Mon, 31 Mar 2025 12:37:38 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'master-thesis-chemical-rag'), ('openai-processing-ms', '7142'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '1000'), ('x-ratelimit-limit-tokens', '125000'), ('x-ratelimit-remaining-requests', '999'), ('x-ratelimit-remaining-tokens', '124396'), ('x-ratelimit-reset-requests', '60ms'), ('x-ratelimit-reset-tokens', '289ms'), ('x-request-id', 'req_e2b0b6b47dea488e410efb2bd9ff92c8'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=AwxPRH0CQB0eaMq3q8Fh5O5v.H2KndtaRdNILNtkddI-1743424658-1.0.1.1-tyRhYOy453QfA_bu6vJV_jmSy05_tAEE5sdakcYDt6glBvqudLzPdWfC36sC6f4CSLwGLf7n.ylMFZ39iSwbmCyr_b84Qh04pjOb1F2GXOU; path=/; expires=Mon, 31-Mar-25 13:07:38 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=Iy9BdjB8FByMlLBqWHps.yegiKCMhBhF6tW6rJz7WOo-1743424658603-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '928fe6068a698fda-FRA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-03-31 14:37:38,555 - DEBUG - request_id: req_e2b0b6b47dea488e410efb2bd9ff92c8
2025-03-31 14:37:38,559 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH8gNnCLDiDkk3KMaTfm4PJGJUhuq', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Aldrin", "309-00-2"\n"Alpha hexachlorocyclohexane", "319-84-6"\n"Beta hexachlorocyclohexane", "319-85-7"\n"Chlordane", "57-74-9"\n"Chlordecone", "143-50-0"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743424651, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=73, prompt_tokens=712, total_tokens=785, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 14:37:38,559 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:37:38,568 - INFO - Extracting text from page 2/4
2025-03-31 14:37:38,569 - DEBUG - Extracted text: | 37
Chemical
Activity
Speciﬁc exemption2
Decabrom
2025-03-31 14:37:38,572 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 37\nChemical\nActivity\nSpeciﬁc exemption2\nDecabromodiphenyl \nether (BDE-209) \npresent in commercial \ndecabromodiphenyl ether  \n(CAS No: 1163-19-5)\nProduction\nAs allowed for the Parties listed in \nthe Register\nUse \nIn accordance with Part IX of this \nAnnex:\n• Parts for use in vehicles speciﬁed \nin paragraph 2 of Part IX of this \nAnnex \n• Aircraft for which type approval \nhas been applied for before \nDecember 2018 and has been \nreceived before December 2022 \nand spare parts for those aircraft \n• Textile products that require \nanti-ﬂammable characteristics, \nexcluding clothing and toys \n• Additives in plastic housings \nand parts used for heating home \nappliances, irons, fans, immersion \nheaters that contain or are in \ndirect contact with electrical \nparts or are required to comply \nwith ﬁre retardancy standards, at \nconcentrations lower than 10 per \ncent by weight of the part \n• Polyurethane foam for building \ninsulation\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:37:38,573 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:37:38,574 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:37:38,574 - DEBUG - send_request_headers.complete
2025-03-31 14:37:38,574 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:37:38,574 - DEBUG - send_request_body.complete
2025-03-31 14:37:38,574 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:37:43,374 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 12:37:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'4556'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124446'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'265ms'), (b'x-request-id', b'req_08185f9a2ee8844d3ec276a294fde5b9'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'928fe634a9258fda-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 14:37:43,376 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:37:43,377 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 14:37:43,378 - DEBUG - receive_response_body.complete
2025-03-31 14:37:43,378 - DEBUG - response_closed.started
2025-03-31 14:37:43,378 - DEBUG - response_closed.complete
2025-03-31 14:37:43,378 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 12:37:43 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '4556', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124446', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '265ms', 'x-request-id': 'req_08185f9a2ee8844d3ec276a294fde5b9', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '928fe634a9258fda-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 14:37:43,378 - DEBUG - request_id: req_08185f9a2ee8844d3ec276a294fde5b9
2025-03-31 14:37:43,380 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH8gUgKoXxPp3L4X8oRT0A6RhNQCP', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Decabromodiphenyl ether (BDE-209)", "1163-19-5"\n"commercial decabromodiphenyl ether", "1163-19-5"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743424658, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=43, prompt_tokens=537, total_tokens=580, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 14:37:43,380 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:37:43,390 - INFO - Extracting text from page 3/4
2025-03-31 14:37:43,390 - DEBUG - Extracted text: | 38
Chemical
Activity
Speciﬁc exemption2
Dechlora
2025-03-31 14:37:43,393 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 38\nChemical\nActivity\nSpeciﬁc exemption2\nDechlorane Plus \nCAS No: 13560-89-9\n“Dechlorane Plus” includes \nits syn-isomer  \n(CAS No: 135821-03-3)  \nand its anti-isomer  \n(CAS No: 135821-74-8)\nProduction\nNone\nUse\nIn accordance with part XI of this \nAnnex:\n• Aerospace \n• Space and defence applications \n• Medical imaging and radiotherapy \ndevices and installations \n• Replacement parts for, and \nrepair of, articles in applications in \naccordance with the provisions of \nparagraphs 2 and 3 of part XI of this \nAnnex\nDicofol \nCAS No: 115-32-2 \nCAS No: 10606-46-9\nProduction\nNone\nUse\nNone\nDieldrin* \nCAS No: 60-57-1\nProduction\nNone\nUse\nIn agricultural operations\nEndrin* \nCAS No: 72-20-8\nProduction\nNone\nUse\nNone\nHeptachlor* \nCAS No: 76-44-8\nProduction\nNone\nUse\nTermiticide \nTermiticide in structures of houses\nTermiticide (subterranean)\nWood treatment \nIn use in underground cable boxes\nHexabromobiphenyl * \nCAS No: 36355-01-8\nProduction\nNone\nUse\nNone\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:37:43,394 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:37:43,394 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:37:43,395 - DEBUG - send_request_headers.complete
2025-03-31 14:37:43,395 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:37:43,395 - DEBUG - send_request_body.complete
2025-03-31 14:37:43,395 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:37:58,025 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 12:37:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'14379'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124442'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'267ms'), (b'x-request-id', b'req_c8b970dc08b27d968264b06533465ca9'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'928fe652ce578fda-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 14:37:58,029 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:37:58,029 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 14:37:58,030 - DEBUG - receive_response_body.complete
2025-03-31 14:37:58,030 - DEBUG - response_closed.started
2025-03-31 14:37:58,030 - DEBUG - response_closed.complete
2025-03-31 14:37:58,030 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 12:37:58 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '14379', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124442', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '267ms', 'x-request-id': 'req_c8b970dc08b27d968264b06533465ca9', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '928fe652ce578fda-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 14:37:58,031 - DEBUG - request_id: req_c8b970dc08b27d968264b06533465ca9
2025-03-31 14:37:58,032 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH8gZF0tAjzZUHhJODkoiKwj9OG2x', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Dechlorane Plus", "13560-89-9"\n"Dechlorane Plus syn-isomer", "135821-03-3"\n"Dechlorane Plus anti-isomer", "135821-74-8"\n"Dicofol", "115-32-2"\n"Dicofol", "10606-46-9"\n"Dieldrin", "60-57-1"\n"Endrin", "72-20-8"\n"Heptachlor", "76-44-8"\n"Hexabromobiphenyl", "36355-01-8"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743424663, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=125, prompt_tokens=609, total_tokens=734, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 14:37:58,032 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:37:58,040 - INFO - Extracting text from page 4/4
2025-03-31 14:37:58,040 - DEBUG - Extracted text: | 39
Chemical
Activity
Speciﬁc exemption2
Hexabrom
2025-03-31 14:37:58,043 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 39\nChemical\nActivity\nSpeciﬁc exemption2\nHexabromocyclododecane\nProduction\nAs allowed for the Parties listed in \nthe Register in accordance with the \nprovisions of Part VII of this Annex\nUse\nExpanded polystyrene and \nextruded polystyrene in buildings \nin accordance with the provisions of \nPart VII of this Annex\nHexabromodiphenyl ether* \nand \nheptabromodiphenyl ether*\nProduction\nNone\nUse\nArticles in accordance with the \nprovisions of Part IV of this Annex\nHexachlorobenzene \nCAS No: 118-74-1\nProduction\nAs allowed for the Parties listed in \nthe Register\nUse\nIntermediate\nSolvent in pesticide\nClosed system site limited \nintermediate\nHexachlorobutadiene  \nCAS No: 87-68-3\nProduction\nNone\nUse\nNone\nLindane* \nCAS No: 58-89-9\nProduction\nNone\nUse\nHuman health pharmaceutical for \ncontrol of head lice and scabies as \nsecond line treatment\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:37:58,044 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:37:58,045 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:37:58,045 - DEBUG - send_request_headers.complete
2025-03-31 14:37:58,045 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:37:58,045 - DEBUG - send_request_body.complete
2025-03-31 14:37:58,045 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:38:08,016 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 12:38:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'9768'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124474'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'252ms'), (b'x-request-id', b'req_9ffd2eb15d2e14608f297fb781389c67'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'928fe6ae5d3c8fda-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 14:38:08,018 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:38:08,019 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 14:38:08,022 - DEBUG - receive_response_body.complete
2025-03-31 14:38:08,022 - DEBUG - response_closed.started
2025-03-31 14:38:08,022 - DEBUG - response_closed.complete
2025-03-31 14:38:08,022 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 12:38:08 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '9768', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124474', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '252ms', 'x-request-id': 'req_9ffd2eb15d2e14608f297fb781389c67', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '928fe6ae5d3c8fda-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 14:38:08,022 - DEBUG - request_id: req_9ffd2eb15d2e14608f297fb781389c67
2025-03-31 14:38:08,023 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH8goiHsbUtzX5obh3iWebpVQgxy5', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Hexabromocyclododecane", "NA"  \n"Hexabromodiphenyl ether", "NA"  \n"Heptabromodiphenyl ether", "NA"  \n"Hexachlorobenzene", "118-74-1"  \n"Hexachlorobutadiene", "87-68-3"  \n"Lindane", "58-89-9"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743424678, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=87, prompt_tokens=533, total_tokens=620, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 14:38:08,023 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:38:08,099 - DEBUG - close.started
2025-03-31 14:38:08,101 - DEBUG - close.complete
2025-03-31 14:39:10,241 - INFO - Script is running
2025-03-31 14:39:10,241 - INFO - Processing PDF file: stockholm_2023.pdf
2025-03-31 14:39:10,259 - INFO - Extracting text from page 1/4
2025-03-31 14:39:10,259 - DEBUG - Extracted text: | 36
ANNEX A1
ELIMINATION
Part I
Chemical
Activity
2025-03-31 14:39:10,262 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 36\nANNEX A1\nELIMINATION\nPart I\nChemical\nActivity\nSpeciﬁc exemption2\nAldrin* \nCAS No: 309-00-2\nProduction\nNone\nUse\nLocal ectoparasiticide \nInsecticide\nAlpha \nhexachlorocyclohexane* \nCAS No: 319-84-6\nProduction\nNone\nUse\nNone\nBeta \nhexachlorocyclohexane* \nCAS No: 319-85-7\nProduction\nNone\nUse\nNone\nChlordane* \nCAS No: 57-74-9\nProduction\nAs allowed for the Parties listed in \nthe Register\nUse\nLocal ectoparasiticide \nInsecticide \nTermiticide\nTermiticide in buildings and dams\nTermiticide in roads\nAdditive in plywood adhesives\nChlordecone* \nCAS No: 143-50-0\nProduction\nNone\nUse\nNone\n1 \nAs amended by decisions SC-4/10 to SC-4/18 of 8 May 2009; SC-5/3 of 29 April 2011; SC-6/13 of 10 May 2013; \nSC-7/12 to SC-7/14 of 15 May 2015; and SC-8/10 to SC-8/12 of 5 May 2017; and SC-9/4, SC-9/11 and SC-9/12 \nof 10 May 2019; and SC-11/9, SC-11/10 and SC-11/11 of 12 May 2023.\n2 \nPlease note that, in accordance with paragraph 9 of Article 4 of the Convention, when there are no longer any \nParties registered for a particular type of speciﬁc exemption no new registrations may be made with respect \nto such exemptions, which appear in gray text in the table.\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:39:10,282 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:39:10,282 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-03-31 14:39:10,361 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x115e3b550>
2025-03-31 14:39:10,361 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x116f44b90> server_hostname='api.openai.com' timeout=5.0
2025-03-31 14:39:10,408 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1153c4190>
2025-03-31 14:39:10,408 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:39:10,409 - DEBUG - send_request_headers.complete
2025-03-31 14:39:10,409 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:39:10,409 - DEBUG - send_request_body.complete
2025-03-31 14:39:10,409 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:39:20,049 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 12:39:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'9423'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124396'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'289ms'), (b'x-request-id', b'req_e161a1750920c7d1ca054df50a3183d2'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=23yBcXwFekn2wExHhShkACw8K4w125oOV5LorV7HhJw-1743424760-1.0.1.1-U.T_oeTFq2clnA47yxTAGw_VHcvPOfLJwcy49HHS2AdL0MQVQPpOCBHijHGjdTpz5uToE0ICh9i0Q9XHjb.ovParS5h6KyKt4WL.vbbcq6A; path=/; expires=Mon, 31-Mar-25 13:09:20 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=YDkYsSPat1f..aMJL49Ah6ia6ZR_zLhj6QOWkaXTVLU-1743424760080-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'928fe8729ce3dba7-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 14:39:20,052 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:39:20,053 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 14:39:20,053 - DEBUG - receive_response_body.complete
2025-03-31 14:39:20,053 - DEBUG - response_closed.started
2025-03-31 14:39:20,054 - DEBUG - response_closed.complete
2025-03-31 14:39:20,054 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Mon, 31 Mar 2025 12:39:20 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'master-thesis-chemical-rag'), ('openai-processing-ms', '9423'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '1000'), ('x-ratelimit-limit-tokens', '125000'), ('x-ratelimit-remaining-requests', '999'), ('x-ratelimit-remaining-tokens', '124396'), ('x-ratelimit-reset-requests', '60ms'), ('x-ratelimit-reset-tokens', '289ms'), ('x-request-id', 'req_e161a1750920c7d1ca054df50a3183d2'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=23yBcXwFekn2wExHhShkACw8K4w125oOV5LorV7HhJw-1743424760-1.0.1.1-U.T_oeTFq2clnA47yxTAGw_VHcvPOfLJwcy49HHS2AdL0MQVQPpOCBHijHGjdTpz5uToE0ICh9i0Q9XHjb.ovParS5h6KyKt4WL.vbbcq6A; path=/; expires=Mon, 31-Mar-25 13:09:20 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=YDkYsSPat1f..aMJL49Ah6ia6ZR_zLhj6QOWkaXTVLU-1743424760080-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '928fe8729ce3dba7-FRA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-03-31 14:39:20,054 - DEBUG - request_id: req_e161a1750920c7d1ca054df50a3183d2
2025-03-31 14:39:20,061 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH8hy7O2Vht2NHPoUzEtOdMqpfOWx', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Aldrin", "309-00-2"  \n"Alpha hexachlorocyclohexane", "319-84-6"  \n"Beta hexachlorocyclohexane", "319-85-7"  \n"Chlordane", "57-74-9"  \n"Chlordecone", "143-50-0"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743424750, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=77, prompt_tokens=712, total_tokens=789, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 14:39:20,061 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:39:20,070 - INFO - Extracting text from page 2/4
2025-03-31 14:39:20,070 - DEBUG - Extracted text: | 37
Chemical
Activity
Speciﬁc exemption2
Decabrom
2025-03-31 14:39:20,073 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 37\nChemical\nActivity\nSpeciﬁc exemption2\nDecabromodiphenyl \nether (BDE-209) \npresent in commercial \ndecabromodiphenyl ether  \n(CAS No: 1163-19-5)\nProduction\nAs allowed for the Parties listed in \nthe Register\nUse \nIn accordance with Part IX of this \nAnnex:\n• Parts for use in vehicles speciﬁed \nin paragraph 2 of Part IX of this \nAnnex \n• Aircraft for which type approval \nhas been applied for before \nDecember 2018 and has been \nreceived before December 2022 \nand spare parts for those aircraft \n• Textile products that require \nanti-ﬂammable characteristics, \nexcluding clothing and toys \n• Additives in plastic housings \nand parts used for heating home \nappliances, irons, fans, immersion \nheaters that contain or are in \ndirect contact with electrical \nparts or are required to comply \nwith ﬁre retardancy standards, at \nconcentrations lower than 10 per \ncent by weight of the part \n• Polyurethane foam for building \ninsulation\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:39:20,074 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:39:20,074 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:39:20,075 - DEBUG - send_request_headers.complete
2025-03-31 14:39:20,075 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:39:20,075 - DEBUG - send_request_body.complete
2025-03-31 14:39:20,075 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:39:25,786 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 12:39:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'5509'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124446'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'265ms'), (b'x-request-id', b'req_b492a8a8cb6fbcc7ffacf15d5b54ef51'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'928fe8af0824dba7-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 14:39:25,787 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:39:25,787 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 14:39:25,788 - DEBUG - receive_response_body.complete
2025-03-31 14:39:25,788 - DEBUG - response_closed.started
2025-03-31 14:39:25,788 - DEBUG - response_closed.complete
2025-03-31 14:39:25,788 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 12:39:25 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '5509', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124446', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '265ms', 'x-request-id': 'req_b492a8a8cb6fbcc7ffacf15d5b54ef51', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '928fe8af0824dba7-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 14:39:25,788 - DEBUG - request_id: req_b492a8a8cb6fbcc7ffacf15d5b54ef51
2025-03-31 14:39:25,789 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH8i8O5aIfDP3MRhgKA7o4lZT423y', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Decabromodiphenyl ether (BDE-209)", "1163-19-5"\n"commercial decabromodiphenyl ether", "1163-19-5"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743424760, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=43, prompt_tokens=537, total_tokens=580, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 14:39:25,789 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:39:25,798 - INFO - Extracting text from page 3/4
2025-03-31 14:39:25,798 - DEBUG - Extracted text: | 38
Chemical
Activity
Speciﬁc exemption2
Dechlora
2025-03-31 14:39:25,801 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 38\nChemical\nActivity\nSpeciﬁc exemption2\nDechlorane Plus \nCAS No: 13560-89-9\n“Dechlorane Plus” includes \nits syn-isomer  \n(CAS No: 135821-03-3)  \nand its anti-isomer  \n(CAS No: 135821-74-8)\nProduction\nNone\nUse\nIn accordance with part XI of this \nAnnex:\n• Aerospace \n• Space and defence applications \n• Medical imaging and radiotherapy \ndevices and installations \n• Replacement parts for, and \nrepair of, articles in applications in \naccordance with the provisions of \nparagraphs 2 and 3 of part XI of this \nAnnex\nDicofol \nCAS No: 115-32-2 \nCAS No: 10606-46-9\nProduction\nNone\nUse\nNone\nDieldrin* \nCAS No: 60-57-1\nProduction\nNone\nUse\nIn agricultural operations\nEndrin* \nCAS No: 72-20-8\nProduction\nNone\nUse\nNone\nHeptachlor* \nCAS No: 76-44-8\nProduction\nNone\nUse\nTermiticide \nTermiticide in structures of houses\nTermiticide (subterranean)\nWood treatment \nIn use in underground cable boxes\nHexabromobiphenyl * \nCAS No: 36355-01-8\nProduction\nNone\nUse\nNone\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:39:25,802 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:39:25,802 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:39:25,802 - DEBUG - send_request_headers.complete
2025-03-31 14:39:25,802 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:39:25,803 - DEBUG - send_request_body.complete
2025-03-31 14:39:25,803 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:39:39,194 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 12:39:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'13183'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124442'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'267ms'), (b'x-request-id', b'req_38625d138c8ec9d9b1ae0ff871ccd141'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'928fe8d2dde0dba7-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 14:39:39,197 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:39:39,197 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 14:39:39,198 - DEBUG - receive_response_body.complete
2025-03-31 14:39:39,198 - DEBUG - response_closed.started
2025-03-31 14:39:39,198 - DEBUG - response_closed.complete
2025-03-31 14:39:39,198 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 12:39:39 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '13183', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124442', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '267ms', 'x-request-id': 'req_38625d138c8ec9d9b1ae0ff871ccd141', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '928fe8d2dde0dba7-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 14:39:39,199 - DEBUG - request_id: req_38625d138c8ec9d9b1ae0ff871ccd141
2025-03-31 14:39:39,200 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH8iEgMjOJAtOGudHRjGSW08zXvm0', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Dechlorane Plus", "13560-89-9"\n"Dechlorane Plus (syn-isomer)", "135821-03-3"\n"Dechlorane Plus (anti-isomer)", "135821-74-8"\n"Dicofol", "115-32-2"\n"Dicofol", "10606-46-9"\n"Dieldrin", "60-57-1"\n"Endrin", "72-20-8"\n"Heptachlor", "76-44-8"\n"Hexabromobiphenyl", "36355-01-8"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743424766, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=127, prompt_tokens=609, total_tokens=736, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 14:39:39,200 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:39:39,208 - INFO - Extracting text from page 4/4
2025-03-31 14:39:39,209 - DEBUG - Extracted text: | 39
Chemical
Activity
Speciﬁc exemption2
Hexabrom
2025-03-31 14:39:39,212 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 39\nChemical\nActivity\nSpeciﬁc exemption2\nHexabromocyclododecane\nProduction\nAs allowed for the Parties listed in \nthe Register in accordance with the \nprovisions of Part VII of this Annex\nUse\nExpanded polystyrene and \nextruded polystyrene in buildings \nin accordance with the provisions of \nPart VII of this Annex\nHexabromodiphenyl ether* \nand \nheptabromodiphenyl ether*\nProduction\nNone\nUse\nArticles in accordance with the \nprovisions of Part IV of this Annex\nHexachlorobenzene \nCAS No: 118-74-1\nProduction\nAs allowed for the Parties listed in \nthe Register\nUse\nIntermediate\nSolvent in pesticide\nClosed system site limited \nintermediate\nHexachlorobutadiene  \nCAS No: 87-68-3\nProduction\nNone\nUse\nNone\nLindane* \nCAS No: 58-89-9\nProduction\nNone\nUse\nHuman health pharmaceutical for \ncontrol of head lice and scabies as \nsecond line treatment\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 14:39:39,213 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 14:39:39,213 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 14:39:39,214 - DEBUG - send_request_headers.complete
2025-03-31 14:39:39,214 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 14:39:39,214 - DEBUG - send_request_body.complete
2025-03-31 14:39:39,214 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 14:39:48,510 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 12:39:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'8935'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124474'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'252ms'), (b'x-request-id', b'req_c4abfe90218d71f5a2f4621504496870'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'928fe926bb3adba7-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 14:39:48,513 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 14:39:48,513 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 14:39:48,514 - DEBUG - receive_response_body.complete
2025-03-31 14:39:48,514 - DEBUG - response_closed.started
2025-03-31 14:39:48,514 - DEBUG - response_closed.complete
2025-03-31 14:39:48,514 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 12:39:48 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '8935', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124474', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '252ms', 'x-request-id': 'req_c4abfe90218d71f5a2f4621504496870', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '928fe926bb3adba7-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 14:39:48,515 - DEBUG - request_id: req_c4abfe90218d71f5a2f4621504496870
2025-03-31 14:39:48,516 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH8iROUUqJyS8XBqpcuMCCrP7Rd2l', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Hexabromocyclododecane", "NA"  \n"Hexabromodiphenyl ether", "NA"  \n"Heptabromodiphenyl ether", "NA"  \n"Hexachlorobenzene", "118-74-1"  \n"Hexachlorobutadiene", "87-68-3"  \n"Lindane", "58-89-9"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743424779, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=87, prompt_tokens=533, total_tokens=620, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 14:39:48,516 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 14:39:48,819 - INFO - Processed stockholm_2023.pdf and saved Excel file to ../data/processed/stockholm_2023.xlsx
2025-03-31 14:39:48,875 - DEBUG - close.started
2025-03-31 14:39:48,877 - DEBUG - close.complete
2025-03-31 15:10:52,303 - INFO - Script is running
2025-03-31 15:10:52,303 - INFO - Processing PDF file: stockholm_2023.pdf
2025-03-31 15:10:52,321 - INFO - Extracting text from page 1/4
2025-03-31 15:10:52,321 - DEBUG - Extracted text: | 36
ANNEX A1
ELIMINATION
Part I
Chemical
Activity
2025-03-31 15:10:52,324 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 36\nANNEX A1\nELIMINATION\nPart I\nChemical\nActivity\nSpeciﬁc exemption2\nAldrin* \nCAS No: 309-00-2\nProduction\nNone\nUse\nLocal ectoparasiticide \nInsecticide\nAlpha \nhexachlorocyclohexane* \nCAS No: 319-84-6\nProduction\nNone\nUse\nNone\nBeta \nhexachlorocyclohexane* \nCAS No: 319-85-7\nProduction\nNone\nUse\nNone\nChlordane* \nCAS No: 57-74-9\nProduction\nAs allowed for the Parties listed in \nthe Register\nUse\nLocal ectoparasiticide \nInsecticide \nTermiticide\nTermiticide in buildings and dams\nTermiticide in roads\nAdditive in plywood adhesives\nChlordecone* \nCAS No: 143-50-0\nProduction\nNone\nUse\nNone\n1 \nAs amended by decisions SC-4/10 to SC-4/18 of 8 May 2009; SC-5/3 of 29 April 2011; SC-6/13 of 10 May 2013; \nSC-7/12 to SC-7/14 of 15 May 2015; and SC-8/10 to SC-8/12 of 5 May 2017; and SC-9/4, SC-9/11 and SC-9/12 \nof 10 May 2019; and SC-11/9, SC-11/10 and SC-11/11 of 12 May 2023.\n2 \nPlease note that, in accordance with paragraph 9 of Article 4 of the Convention, when there are no longer any \nParties registered for a particular type of speciﬁc exemption no new registrations may be made with respect \nto such exemptions, which appear in gray text in the table.\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:10:52,348 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:10:52,349 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-03-31 15:10:52,427 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10d40bfd0>
2025-03-31 15:10:52,428 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10d3ecb90> server_hostname='api.openai.com' timeout=5.0
2025-03-31 15:10:52,471 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10a873ed0>
2025-03-31 15:10:52,471 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:10:52,472 - DEBUG - send_request_headers.complete
2025-03-31 15:10:52,472 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:10:52,472 - DEBUG - send_request_body.complete
2025-03-31 15:10:52,472 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:11:01,798 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:11:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'8866'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124396'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'289ms'), (b'x-request-id', b'req_94f1de57b32372172a708644b7999ae9'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=geUGAHH8BSNB0aY2WHVVSh6f6d8ZPivhexD0VCSyzI4-1743426661-1.0.1.1-aqMLLAKYVqVgl4pioYO9beGmN1F6IPRFOU9VcwVLbMp3p0YAbpQvsGsbq1IK74Js6H_OfWNpmrxh8UQ_6IpLXMJvIrjL_KPOzr1g82IBQZU; path=/; expires=Mon, 31-Mar-25 13:41:01 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=FLOdD.aHlzuWhauSieJJYuHcTdfiOu_WaUdMSR036do-1743426661817-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'929016e24ff137f2-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:11:01,799 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:11:01,800 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:11:01,800 - DEBUG - receive_response_body.complete
2025-03-31 15:11:01,800 - DEBUG - response_closed.started
2025-03-31 15:11:01,800 - DEBUG - response_closed.complete
2025-03-31 15:11:01,800 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Mon, 31 Mar 2025 13:11:01 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'master-thesis-chemical-rag'), ('openai-processing-ms', '8866'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '1000'), ('x-ratelimit-limit-tokens', '125000'), ('x-ratelimit-remaining-requests', '999'), ('x-ratelimit-remaining-tokens', '124396'), ('x-ratelimit-reset-requests', '60ms'), ('x-ratelimit-reset-tokens', '289ms'), ('x-request-id', 'req_94f1de57b32372172a708644b7999ae9'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=geUGAHH8BSNB0aY2WHVVSh6f6d8ZPivhexD0VCSyzI4-1743426661-1.0.1.1-aqMLLAKYVqVgl4pioYO9beGmN1F6IPRFOU9VcwVLbMp3p0YAbpQvsGsbq1IK74Js6H_OfWNpmrxh8UQ_6IpLXMJvIrjL_KPOzr1g82IBQZU; path=/; expires=Mon, 31-Mar-25 13:41:01 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=FLOdD.aHlzuWhauSieJJYuHcTdfiOu_WaUdMSR036do-1743426661817-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '929016e24ff137f2-FRA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-03-31 15:11:01,800 - DEBUG - request_id: req_94f1de57b32372172a708644b7999ae9
2025-03-31 15:11:01,803 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9CeiQblofj7yK94I2irtvrmkEzC', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Aldrin", "309-00-2"\n"Alpha hexachlorocyclohexane", "319-84-6"\n"Beta hexachlorocyclohexane", "319-85-7"\n"Chlordane", "57-74-9"\n"Chlordecone", "143-50-0"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743426652, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=73, prompt_tokens=712, total_tokens=785, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:11:01,803 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 15:11:01,807 - INFO - Extracting text from page 2/4
2025-03-31 15:11:01,807 - DEBUG - Extracted text: | 37
Chemical
Activity
Speciﬁc exemption2
Decabrom
2025-03-31 15:11:01,809 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 37\nChemical\nActivity\nSpeciﬁc exemption2\nDecabromodiphenyl \nether (BDE-209) \npresent in commercial \ndecabromodiphenyl ether  \n(CAS No: 1163-19-5)\nProduction\nAs allowed for the Parties listed in \nthe Register\nUse \nIn accordance with Part IX of this \nAnnex:\n• Parts for use in vehicles speciﬁed \nin paragraph 2 of Part IX of this \nAnnex \n• Aircraft for which type approval \nhas been applied for before \nDecember 2018 and has been \nreceived before December 2022 \nand spare parts for those aircraft \n• Textile products that require \nanti-ﬂammable characteristics, \nexcluding clothing and toys \n• Additives in plastic housings \nand parts used for heating home \nappliances, irons, fans, immersion \nheaters that contain or are in \ndirect contact with electrical \nparts or are required to comply \nwith ﬁre retardancy standards, at \nconcentrations lower than 10 per \ncent by weight of the part \n• Polyurethane foam for building \ninsulation\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:11:01,810 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:11:01,810 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:11:01,810 - DEBUG - send_request_headers.complete
2025-03-31 15:11:01,810 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:11:01,810 - DEBUG - send_request_body.complete
2025-03-31 15:11:01,810 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:11:07,514 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:11:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'5489'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124446'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'265ms'), (b'x-request-id', b'req_5af42fd1f0ce968d3d3e2ae07a8d4643'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9290171cb89637f2-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:11:07,515 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:11:07,515 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:11:07,517 - DEBUG - receive_response_body.complete
2025-03-31 15:11:07,517 - DEBUG - response_closed.started
2025-03-31 15:11:07,517 - DEBUG - response_closed.complete
2025-03-31 15:11:07,517 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:11:07 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '5489', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124446', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '265ms', 'x-request-id': 'req_5af42fd1f0ce968d3d3e2ae07a8d4643', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9290171cb89637f2-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:11:07,518 - DEBUG - request_id: req_5af42fd1f0ce968d3d3e2ae07a8d4643
2025-03-31 15:11:07,518 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9CoqjMWgUtyvbLq04wyuDM5m2qy', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Decabromodiphenyl ether (BDE-209)", "1163-19-5"\n"commercial decabromodiphenyl ether", "1163-19-5"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743426662, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=43, prompt_tokens=537, total_tokens=580, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:11:07,518 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 15:11:07,525 - INFO - Extracting text from page 3/4
2025-03-31 15:11:07,525 - DEBUG - Extracted text: | 38
Chemical
Activity
Speciﬁc exemption2
Dechlora
2025-03-31 15:11:07,528 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 38\nChemical\nActivity\nSpeciﬁc exemption2\nDechlorane Plus \nCAS No: 13560-89-9\n“Dechlorane Plus” includes \nits syn-isomer  \n(CAS No: 135821-03-3)  \nand its anti-isomer  \n(CAS No: 135821-74-8)\nProduction\nNone\nUse\nIn accordance with part XI of this \nAnnex:\n• Aerospace \n• Space and defence applications \n• Medical imaging and radiotherapy \ndevices and installations \n• Replacement parts for, and \nrepair of, articles in applications in \naccordance with the provisions of \nparagraphs 2 and 3 of part XI of this \nAnnex\nDicofol \nCAS No: 115-32-2 \nCAS No: 10606-46-9\nProduction\nNone\nUse\nNone\nDieldrin* \nCAS No: 60-57-1\nProduction\nNone\nUse\nIn agricultural operations\nEndrin* \nCAS No: 72-20-8\nProduction\nNone\nUse\nNone\nHeptachlor* \nCAS No: 76-44-8\nProduction\nNone\nUse\nTermiticide \nTermiticide in structures of houses\nTermiticide (subterranean)\nWood treatment \nIn use in underground cable boxes\nHexabromobiphenyl * \nCAS No: 36355-01-8\nProduction\nNone\nUse\nNone\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:11:07,529 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:11:07,529 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:11:07,530 - DEBUG - send_request_headers.complete
2025-03-31 15:11:07,530 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:11:07,530 - DEBUG - send_request_body.complete
2025-03-31 15:11:07,530 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:11:22,348 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:11:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'14337'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124443'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'267ms'), (b'x-request-id', b'req_c0c2b3ef12a5f2f4ccf0392080af7a4c'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'929017406aad37f2-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:11:22,350 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:11:22,350 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:11:22,350 - DEBUG - receive_response_body.complete
2025-03-31 15:11:22,351 - DEBUG - response_closed.started
2025-03-31 15:11:22,351 - DEBUG - response_closed.complete
2025-03-31 15:11:22,351 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:11:22 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '14337', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124443', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '267ms', 'x-request-id': 'req_c0c2b3ef12a5f2f4ccf0392080af7a4c', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '929017406aad37f2-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:11:22,352 - DEBUG - request_id: req_c0c2b3ef12a5f2f4ccf0392080af7a4c
2025-03-31 15:11:22,354 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9CtK1CXyeWvrDCZTzhEALbvg1rw', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Dechlorane Plus", "13560-89-9"\n"Dechlorane Plus (syn-isomer)", "135821-03-3"\n"Dechlorane Plus (anti-isomer)", "135821-74-8"\n"Dicofol", "115-32-2"\n"Dicofol", "10606-46-9"\n"Dieldrin", "60-57-1"\n"Endrin", "72-20-8"\n"Heptachlor", "76-44-8"\n"Hexabromobiphenyl", "36355-01-8"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743426667, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=127, prompt_tokens=609, total_tokens=736, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:11:22,355 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 15:11:22,363 - INFO - Extracting text from page 4/4
2025-03-31 15:11:22,364 - DEBUG - Extracted text: | 39
Chemical
Activity
Speciﬁc exemption2
Hexabrom
2025-03-31 15:11:22,367 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 39\nChemical\nActivity\nSpeciﬁc exemption2\nHexabromocyclododecane\nProduction\nAs allowed for the Parties listed in \nthe Register in accordance with the \nprovisions of Part VII of this Annex\nUse\nExpanded polystyrene and \nextruded polystyrene in buildings \nin accordance with the provisions of \nPart VII of this Annex\nHexabromodiphenyl ether* \nand \nheptabromodiphenyl ether*\nProduction\nNone\nUse\nArticles in accordance with the \nprovisions of Part IV of this Annex\nHexachlorobenzene \nCAS No: 118-74-1\nProduction\nAs allowed for the Parties listed in \nthe Register\nUse\nIntermediate\nSolvent in pesticide\nClosed system site limited \nintermediate\nHexachlorobutadiene  \nCAS No: 87-68-3\nProduction\nNone\nUse\nNone\nLindane* \nCAS No: 58-89-9\nProduction\nNone\nUse\nHuman health pharmaceutical for \ncontrol of head lice and scabies as \nsecond line treatment\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:11:22,368 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:11:22,368 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:11:22,368 - DEBUG - send_request_headers.complete
2025-03-31 15:11:22,368 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:11:22,369 - DEBUG - send_request_body.complete
2025-03-31 15:11:22,369 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:11:31,007 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:11:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'8448'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124474'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'252ms'), (b'x-request-id', b'req_63edfd4cfbc8ff6be63212bd516159ae'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9290179d2d8d37f2-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:11:31,009 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:11:31,010 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:11:31,011 - DEBUG - receive_response_body.complete
2025-03-31 15:11:31,012 - DEBUG - response_closed.started
2025-03-31 15:11:31,012 - DEBUG - response_closed.complete
2025-03-31 15:11:31,012 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:11:31 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '8448', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124474', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '252ms', 'x-request-id': 'req_63edfd4cfbc8ff6be63212bd516159ae', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9290179d2d8d37f2-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:11:31,013 - DEBUG - request_id: req_63edfd4cfbc8ff6be63212bd516159ae
2025-03-31 15:11:31,014 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9D8gQGQmAJ4rG2oZpUrqXUIOXtA', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Hexabromocyclododecane", "NA"  \n"Hexabromodiphenyl ether", "NA"  \n"Heptabromodiphenyl ether", "NA"  \n"Hexachlorobenzene", "118-74-1"  \n"Hexachlorobutadiene", "87-68-3"  \n"Lindane", "58-89-9"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743426682, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=87, prompt_tokens=533, total_tokens=620, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:11:31,014 - WARNING - Response is not as expected or missing 'text' attribute
2025-03-31 15:11:31,097 - INFO - Processed stockholm_2023.pdf and saved Excel file to ../data/processed/stockholm_2023.xlsx
2025-03-31 15:11:31,148 - DEBUG - close.started
2025-03-31 15:11:31,149 - DEBUG - close.complete
2025-03-31 15:14:56,559 - INFO - Script is running
2025-03-31 15:14:56,559 - INFO - Processing PDF file: stockholm_2023.pdf
2025-03-31 15:14:56,574 - INFO - Extracting text from page 1/4
2025-03-31 15:14:56,574 - DEBUG - Extracted text: | 36
ANNEX A1
ELIMINATION
Part I
Chemical
Activity
2025-03-31 15:14:56,577 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 36\nANNEX A1\nELIMINATION\nPart I\nChemical\nActivity\nSpeciﬁc exemption2\nAldrin* \nCAS No: 309-00-2\nProduction\nNone\nUse\nLocal ectoparasiticide \nInsecticide\nAlpha \nhexachlorocyclohexane* \nCAS No: 319-84-6\nProduction\nNone\nUse\nNone\nBeta \nhexachlorocyclohexane* \nCAS No: 319-85-7\nProduction\nNone\nUse\nNone\nChlordane* \nCAS No: 57-74-9\nProduction\nAs allowed for the Parties listed in \nthe Register\nUse\nLocal ectoparasiticide \nInsecticide \nTermiticide\nTermiticide in buildings and dams\nTermiticide in roads\nAdditive in plywood adhesives\nChlordecone* \nCAS No: 143-50-0\nProduction\nNone\nUse\nNone\n1 \nAs amended by decisions SC-4/10 to SC-4/18 of 8 May 2009; SC-5/3 of 29 April 2011; SC-6/13 of 10 May 2013; \nSC-7/12 to SC-7/14 of 15 May 2015; and SC-8/10 to SC-8/12 of 5 May 2017; and SC-9/4, SC-9/11 and SC-9/12 \nof 10 May 2019; and SC-11/9, SC-11/10 and SC-11/11 of 12 May 2023.\n2 \nPlease note that, in accordance with paragraph 9 of Article 4 of the Convention, when there are no longer any \nParties registered for a particular type of speciﬁc exemption no new registrations may be made with respect \nto such exemptions, which appear in gray text in the table.\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:14:56,596 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:14:56,596 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-03-31 15:14:56,675 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11dbcb290>
2025-03-31 15:14:56,675 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x128540b00> server_hostname='api.openai.com' timeout=5.0
2025-03-31 15:14:56,722 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x12856c9d0>
2025-03-31 15:14:56,723 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:14:56,723 - DEBUG - send_request_headers.complete
2025-03-31 15:14:56,723 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:14:56,723 - DEBUG - send_request_body.complete
2025-03-31 15:14:56,723 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:15:05,683 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:15:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'8649'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124396'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'289ms'), (b'x-request-id', b'req_68c9b0cd42b53b52555714d5c0c5c339'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=kE1APOceBLegmtUoMwu29Dka8Z7qIdN5w1DDGvZOi0U-1743426905-1.0.1.1-CsAhNkSQ.3tNELVx5b5KrJrRBeqhG6NNAUoDRjuahc8NH.OtJ3SrKkmU0xbgbHjFWy8ZR5P2eSQ6ylLaHJhOHUjHgRwddURy..5GsZ09y90; path=/; expires=Mon, 31-Mar-25 13:45:05 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=OCodXFge8u_JbMOtLec9mW0iAZCPNjKdi5NdP2qVDOI-1743426905601-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92901cd8eaabbbf2-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:15:05,686 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:15:05,686 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:15:05,687 - DEBUG - receive_response_body.complete
2025-03-31 15:15:05,687 - DEBUG - response_closed.started
2025-03-31 15:15:05,687 - DEBUG - response_closed.complete
2025-03-31 15:15:05,687 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Mon, 31 Mar 2025 13:15:05 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'master-thesis-chemical-rag'), ('openai-processing-ms', '8649'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '1000'), ('x-ratelimit-limit-tokens', '125000'), ('x-ratelimit-remaining-requests', '999'), ('x-ratelimit-remaining-tokens', '124396'), ('x-ratelimit-reset-requests', '60ms'), ('x-ratelimit-reset-tokens', '289ms'), ('x-request-id', 'req_68c9b0cd42b53b52555714d5c0c5c339'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=kE1APOceBLegmtUoMwu29Dka8Z7qIdN5w1DDGvZOi0U-1743426905-1.0.1.1-CsAhNkSQ.3tNELVx5b5KrJrRBeqhG6NNAUoDRjuahc8NH.OtJ3SrKkmU0xbgbHjFWy8ZR5P2eSQ6ylLaHJhOHUjHgRwddURy..5GsZ09y90; path=/; expires=Mon, 31-Mar-25 13:45:05 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=OCodXFge8u_JbMOtLec9mW0iAZCPNjKdi5NdP2qVDOI-1743426905601-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '92901cd8eaabbbf2-FRA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-03-31 15:15:05,688 - DEBUG - request_id: req_68c9b0cd42b53b52555714d5c0c5c339
2025-03-31 15:15:05,696 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9GaP2XLb63BG0HfTbQoBBGIvs6d', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Aldrin", "309-00-2"\n"Alpha hexachlorocyclohexane", "319-84-6"\n"Beta hexachlorocyclohexane", "319-85-7"\n"Chlordane", "57-74-9"\n"Chlordecone", "143-50-0"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743426896, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=73, prompt_tokens=712, total_tokens=785, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:15:05,704 - INFO - Extracting text from page 2/4
2025-03-31 15:15:05,704 - DEBUG - Extracted text: | 37
Chemical
Activity
Speciﬁc exemption2
Decabrom
2025-03-31 15:15:05,707 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 37\nChemical\nActivity\nSpeciﬁc exemption2\nDecabromodiphenyl \nether (BDE-209) \npresent in commercial \ndecabromodiphenyl ether  \n(CAS No: 1163-19-5)\nProduction\nAs allowed for the Parties listed in \nthe Register\nUse \nIn accordance with Part IX of this \nAnnex:\n• Parts for use in vehicles speciﬁed \nin paragraph 2 of Part IX of this \nAnnex \n• Aircraft for which type approval \nhas been applied for before \nDecember 2018 and has been \nreceived before December 2022 \nand spare parts for those aircraft \n• Textile products that require \nanti-ﬂammable characteristics, \nexcluding clothing and toys \n• Additives in plastic housings \nand parts used for heating home \nappliances, irons, fans, immersion \nheaters that contain or are in \ndirect contact with electrical \nparts or are required to comply \nwith ﬁre retardancy standards, at \nconcentrations lower than 10 per \ncent by weight of the part \n• Polyurethane foam for building \ninsulation\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:15:05,708 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:15:05,709 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:15:05,709 - DEBUG - send_request_headers.complete
2025-03-31 15:15:05,709 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:15:05,709 - DEBUG - send_request_body.complete
2025-03-31 15:15:05,709 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:15:10,493 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:15:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'4449'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124446'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'265ms'), (b'x-request-id', b'req_e74a97058ca76aa1925b9f863f771146'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92901d110d1bbbf2-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:15:10,496 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:15:10,496 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:15:10,497 - DEBUG - receive_response_body.complete
2025-03-31 15:15:10,498 - DEBUG - response_closed.started
2025-03-31 15:15:10,498 - DEBUG - response_closed.complete
2025-03-31 15:15:10,498 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:15:10 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '4449', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124446', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '265ms', 'x-request-id': 'req_e74a97058ca76aa1925b9f863f771146', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92901d110d1bbbf2-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:15:10,498 - DEBUG - request_id: req_e74a97058ca76aa1925b9f863f771146
2025-03-31 15:15:10,499 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9GjGsY57TXaMTR7vn4DhOuGzL7K', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Decabromodiphenyl ether (BDE-209)", "1163-19-5"\n"commercial decabromodiphenyl ether", "1163-19-5"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743426905, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=43, prompt_tokens=537, total_tokens=580, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:15:10,508 - INFO - Extracting text from page 3/4
2025-03-31 15:15:10,508 - DEBUG - Extracted text: | 38
Chemical
Activity
Speciﬁc exemption2
Dechlora
2025-03-31 15:15:10,512 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 38\nChemical\nActivity\nSpeciﬁc exemption2\nDechlorane Plus \nCAS No: 13560-89-9\n“Dechlorane Plus” includes \nits syn-isomer  \n(CAS No: 135821-03-3)  \nand its anti-isomer  \n(CAS No: 135821-74-8)\nProduction\nNone\nUse\nIn accordance with part XI of this \nAnnex:\n• Aerospace \n• Space and defence applications \n• Medical imaging and radiotherapy \ndevices and installations \n• Replacement parts for, and \nrepair of, articles in applications in \naccordance with the provisions of \nparagraphs 2 and 3 of part XI of this \nAnnex\nDicofol \nCAS No: 115-32-2 \nCAS No: 10606-46-9\nProduction\nNone\nUse\nNone\nDieldrin* \nCAS No: 60-57-1\nProduction\nNone\nUse\nIn agricultural operations\nEndrin* \nCAS No: 72-20-8\nProduction\nNone\nUse\nNone\nHeptachlor* \nCAS No: 76-44-8\nProduction\nNone\nUse\nTermiticide \nTermiticide in structures of houses\nTermiticide (subterranean)\nWood treatment \nIn use in underground cable boxes\nHexabromobiphenyl * \nCAS No: 36355-01-8\nProduction\nNone\nUse\nNone\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:15:10,513 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:15:10,513 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:15:10,514 - DEBUG - send_request_headers.complete
2025-03-31 15:15:10,514 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:15:10,514 - DEBUG - send_request_body.complete
2025-03-31 15:15:10,514 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:15:23,372 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:15:23 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'12628'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124442'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'267ms'), (b'x-request-id', b'req_ca23c4013e0c75cc1c899ea5818091e9'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92901d2f0e36bbf2-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:15:23,377 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:15:23,378 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:15:23,378 - DEBUG - receive_response_body.complete
2025-03-31 15:15:23,378 - DEBUG - response_closed.started
2025-03-31 15:15:23,378 - DEBUG - response_closed.complete
2025-03-31 15:15:23,378 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:15:23 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '12628', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124442', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '267ms', 'x-request-id': 'req_ca23c4013e0c75cc1c899ea5818091e9', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92901d2f0e36bbf2-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:15:23,379 - DEBUG - request_id: req_ca23c4013e0c75cc1c899ea5818091e9
2025-03-31 15:15:23,380 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9Gors1un9PRbhhAQImSYNRkfNS2', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Dechlorane Plus", "13560-89-9"\n"Dechlorane Plus syn-isomer", "135821-03-3"\n"Dechlorane Plus anti-isomer", "135821-74-8"\n"Dicofol", "115-32-2"\n"Dicofol", "10606-46-9"\n"Dieldrin", "60-57-1"\n"Endrin", "72-20-8"\n"Heptachlor", "76-44-8"\n"Hexabromobiphenyl", "36355-01-8"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743426910, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=125, prompt_tokens=609, total_tokens=734, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:15:23,388 - INFO - Extracting text from page 4/4
2025-03-31 15:15:23,388 - DEBUG - Extracted text: | 39
Chemical
Activity
Speciﬁc exemption2
Hexabrom
2025-03-31 15:15:23,392 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 39\nChemical\nActivity\nSpeciﬁc exemption2\nHexabromocyclododecane\nProduction\nAs allowed for the Parties listed in \nthe Register in accordance with the \nprovisions of Part VII of this Annex\nUse\nExpanded polystyrene and \nextruded polystyrene in buildings \nin accordance with the provisions of \nPart VII of this Annex\nHexabromodiphenyl ether* \nand \nheptabromodiphenyl ether*\nProduction\nNone\nUse\nArticles in accordance with the \nprovisions of Part IV of this Annex\nHexachlorobenzene \nCAS No: 118-74-1\nProduction\nAs allowed for the Parties listed in \nthe Register\nUse\nIntermediate\nSolvent in pesticide\nClosed system site limited \nintermediate\nHexachlorobutadiene  \nCAS No: 87-68-3\nProduction\nNone\nUse\nNone\nLindane* \nCAS No: 58-89-9\nProduction\nNone\nUse\nHuman health pharmaceutical for \ncontrol of head lice and scabies as \nsecond line treatment\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:15:23,393 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:15:23,393 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:15:23,394 - DEBUG - send_request_headers.complete
2025-03-31 15:15:23,394 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:15:23,394 - DEBUG - send_request_body.complete
2025-03-31 15:15:23,394 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:15:32,851 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:15:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'9256'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124474'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'252ms'), (b'x-request-id', b'req_836d075c356dfbac47eababb0281af97'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92901d7f8ba1bbf2-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:15:32,853 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:15:32,854 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:15:32,855 - DEBUG - receive_response_body.complete
2025-03-31 15:15:32,855 - DEBUG - response_closed.started
2025-03-31 15:15:32,855 - DEBUG - response_closed.complete
2025-03-31 15:15:32,855 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:15:32 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '9256', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124474', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '252ms', 'x-request-id': 'req_836d075c356dfbac47eababb0281af97', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92901d7f8ba1bbf2-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:15:32,856 - DEBUG - request_id: req_836d075c356dfbac47eababb0281af97
2025-03-31 15:15:32,857 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9H1yEsQCQ3nnPZ5AKhaPN7n3FIp', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Hexabromocyclododecane", "NA"  \n"Hexabromodiphenyl ether", "NA"  \n"Heptabromodiphenyl ether", "NA"  \n"Hexachlorobenzene", "118-74-1"  \n"Hexachlorobutadiene", "87-68-3"  \n"Lindane", "58-89-9"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743426923, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=87, prompt_tokens=533, total_tokens=620, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:15:32,942 - INFO - Processed stockholm_2023.pdf and saved Excel file to ../data/processed/stockholm_2023.xlsx
2025-03-31 15:15:32,994 - DEBUG - close.started
2025-03-31 15:15:32,995 - DEBUG - close.complete
2025-03-31 15:24:44,498 - INFO - Script is running
2025-03-31 15:24:44,498 - INFO - Processing PDF file: rotterdam.pdf
2025-03-31 15:24:44,518 - INFO - Extracting text from page 1/5
2025-03-31 15:24:44,518 - DEBUG - Extracted text: | 33
ANNEX III 1 
CHEMICALS SUBJECT TO THE PRIOR I
2025-03-31 15:24:44,521 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 33\nANNEX III 1 \nCHEMICALS SUBJECT TO THE PRIOR INFORMED CONSENT PROCEDURE\nChemical\nRelevant\nCAS number(s)\nCategory\n2,4,5-T and its salts and esters\n93-76-5*\nPesticide\nAlachlor\n15972-60-8\nPesticide\nAldicarb\n116-06-3\nPesticide\nAldrin\n309-00-2\nPesticide\nAzinphos-methyl\n86-50-0\nPesticide\nBinapacryl\n485-31-4\nPesticide\nCaptafol\n2425-06-1\nPesticide\nCarbofuran\n1563-66-2\nPesticide\nChlordane\n57-74-9\nPesticide\nChlordimeform\n6164-98-3\nPesticide\nChlorobenzilate\n510-15-6\nPesticide\nDDT\n50-29-3\nPesticide\nDieldrin\n60-57-1\nPesticide\nDinitro-ortho-cresol (DNOC) and its salts \n(such as ammonium salt, potassium salt \nand sodium salt)\n534-52-1\n2980-64-5\n5787-96-2\n2312-76-7\nPesticide\nDinoseb and its salts and esters\n88-85-7*\nPesticide\n1,2-dibromoethane (EDB)\n106-93-4\nPesticide\nEndosulfan\n115-29-7\nPesticide\nEthylene dichloride\n107-06-2\nPesticide\nEthylene oxide\n75-21-8\nPesticide\nFluoroacetamide\n640-19-7\nPesticide\nHCH (mixed isomers)\n608-73-1\nPesticide\n1 \nAs amended by the Conference of the Parties by its decision RC-1/3 of 24 September 2004; RC-4/5 of  \n31 October 2008; RC-5/3, RC-5/4 and RC-5/5 of 24 June 2011; RC-6/4, RC-6/5, RC-6/6 and RC-6/7 of  \n10 May 2013; RC-7/4 of 15 May 2015; RC-8/2, RC-8/3, RC-8/4 and RC-8/5 of 5 May 2017; RC-9/3 and RC-9/4 \nof 10 May 2019; RC-10/6 and RC-10/7 of 17 June 2022; and RC-11/3 of 12 May 2023.\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:24:44,540 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:24:44,541 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-03-31 15:24:44,622 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10a39d390>
2025-03-31 15:24:44,623 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10a358b00> server_hostname='api.openai.com' timeout=5.0
2025-03-31 15:24:44,665 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x109309c90>
2025-03-31 15:24:44,665 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:24:44,665 - DEBUG - send_request_headers.complete
2025-03-31 15:24:44,665 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:24:44,665 - DEBUG - send_request_body.complete
2025-03-31 15:24:44,666 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:25:32,981 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:25:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'47983'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124350'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'311ms'), (b'x-request-id', b'req_1bb9a564d36e7e2bddc72592313307c8'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=9TW3SUXYkPd2KhkvdUk8ZCEt8d8BYBiuaZyQwPH_Z5g-1743427532-1.0.1.1-ssvLM3HuXltULAz9KHt4_M44hUtWc8YO_wwDZBtcK1AOu05SGt8gPrAuLIJL_9B9Hu.ygb11FoD5DaN0rPoeY9fMiENmTxjaJD2hxFKZcm0; path=/; expires=Mon, 31-Mar-25 13:55:32 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=ax0AasuoKVV0BOn5e1ubm_gugCuGOb6QRcddDlUtzAI-1743427532953-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92902b3388471ce4-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:25:32,983 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:25:32,984 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:25:32,984 - DEBUG - receive_response_body.complete
2025-03-31 15:25:32,984 - DEBUG - response_closed.started
2025-03-31 15:25:32,984 - DEBUG - response_closed.complete
2025-03-31 15:25:32,985 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Mon, 31 Mar 2025 13:25:32 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'master-thesis-chemical-rag'), ('openai-processing-ms', '47983'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '1000'), ('x-ratelimit-limit-tokens', '125000'), ('x-ratelimit-remaining-requests', '999'), ('x-ratelimit-remaining-tokens', '124350'), ('x-ratelimit-reset-requests', '60ms'), ('x-ratelimit-reset-tokens', '311ms'), ('x-request-id', 'req_1bb9a564d36e7e2bddc72592313307c8'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=9TW3SUXYkPd2KhkvdUk8ZCEt8d8BYBiuaZyQwPH_Z5g-1743427532-1.0.1.1-ssvLM3HuXltULAz9KHt4_M44hUtWc8YO_wwDZBtcK1AOu05SGt8gPrAuLIJL_9B9Hu.ygb11FoD5DaN0rPoeY9fMiENmTxjaJD2hxFKZcm0; path=/; expires=Mon, 31-Mar-25 13:55:32 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=ax0AasuoKVV0BOn5e1ubm_gugCuGOb6QRcddDlUtzAI-1743427532953-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '92902b3388471ce4-FRA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-03-31 15:25:32,985 - DEBUG - request_id: req_1bb9a564d36e7e2bddc72592313307c8
2025-03-31 15:25:32,989 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9Q4MWyBi8CI8uJLvPHgKr9SICgT', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"2,4,5-T and its salts and esters", "93-76-5"  \n"Alachlor", "15972-60-8"  \n"Aldicarb", "116-06-3"  \n"Aldrin", "309-00-2"  \n"Azinphos-methyl", "86-50-0"  \n"Binapacryl", "485-31-4"  \n"Captafol", "2425-06-1"  \n"Carbofuran", "1563-66-2"  \n"Chlordane", "57-74-9"  \n"Chlordimeform", "6164-98-3"  \n"Chlorobenzilate", "510-15-6"  \n"DDT", "50-29-3"  \n"Dieldrin", "60-57-1"  \n"Dinitro-ortho-cresol (DNOC) and its salts (such as ammonium salt, potassium salt and sodium salt)", "534-52-1"  \n"Dinitro-ortho-cresol (DNOC) and its salts (such as ammonium salt, potassium salt and sodium salt)", "2980-64-5"  \n"Dinitro-ortho-cresol (DNOC) and its salts (such as ammonium salt, potassium salt and sodium salt)", "5787-96-2"  \n"Dinitro-ortho-cresol (DNOC) and its salts (such as ammonium salt, potassium salt and sodium salt)", "2312-76-7"  \n"Dinoseb and its salts and esters", "88-85-7"  \n"1,2-dibromoethane (EDB)", "106-93-4"  \n"Endosulfan", "115-29-7"  \n"Ethylene dichloride", "107-06-2"  \n"Ethylene oxide", "75-21-8"  \n"Fluoroacetamide", "640-19-7"  \n"HCH (mixed isomers)", "608-73-1"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743427484, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=449, prompt_tokens=911, total_tokens=1360, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:25:32,997 - INFO - Extracting text from page 2/5
2025-03-31 15:25:32,997 - DEBUG - Extracted text: | 34
Chemical
Relevant
CAS number(s)
Category
Hept
2025-03-31 15:25:32,999 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 34\nChemical\nRelevant\nCAS number(s)\nCategory\nHeptachlor\n76-44-8\nPesticide\nHexachlorobenzene\n118-74-1\nPesticide\nLindane\n58-89-9\nPesticide\nMercury compounds, including inorganic \nmercury compounds, alkyl mercury \ncompounds and alkyloxyalkyl and aryl \nmercury compounds\nPesticide\nMethamidophos\n10265-92-6\nPesticide\nMonocrotophos\n6923-22-4\nPesticide\nParathion\n56-38-2\nPesticide\nPentachlorophenol and its salts and \nesters\n87-86-5*\nPesticide\nPhorate\n298-02-2\nPesticide\nTerbufos\n13071-79-9\nPesticide \nToxaphene\n8001-35-2\nPesticide\nTrichlorfon\n52-68-6\nPesticide\nDustable powder formulations containing \na combination of:\n– Benomyl at or above 7 per cent,\n– Carbofuran at or above 10 per cent, and\n– Thiram at or above 15 per cent\n17804-35-2\n1563-66-2\n137-26-8\nSeverely \nhazardous \npesticide \nformulation\nPhosphamidon\n(soluble liquid formulations of the \nsubstance that exceed 1,000 g active \ningredient/l)\n13171-21-6 (mixture, \n(E) & (Z) isomers)\n23783-98-4 ((Z)-\nisomer)\n297-99-4 ((E)-isomer)\nSeverely \nhazardous \npesticide \nformulation\nMethyl-parathion\n(emulsiﬁable concentrates (EC) at or \nabove 19.5% active ingredient and dusts \nat or above 1.5% active ingredient)\n298-00-0\nSeverely \nhazardous \npesticide \nformulation\nAsbestos:\n– Actinolite\n– Anthophyllite\n– Amosite\n– Crocidolite\n– Tremolite\n77536-66-4\n77536-67-5\n12172-73-5\n12001-28-4\n77536-68-6\nIndustrial\nIndustrial\nIndustrial\nIndustrial\nIndustrial\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:25:33,000 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:25:33,000 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:25:33,000 - DEBUG - send_request_headers.complete
2025-03-31 15:25:33,000 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:25:33,000 - DEBUG - send_request_body.complete
2025-03-31 15:25:33,000 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:26:27,772 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:26:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'54546'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124103'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'430ms'), (b'x-request-id', b'req_349a95bbbb4b607e6d554e2504c5601e'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92902c61aac51ce4-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:26:27,777 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:26:27,778 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:26:27,779 - DEBUG - receive_response_body.complete
2025-03-31 15:26:27,779 - DEBUG - response_closed.started
2025-03-31 15:26:27,779 - DEBUG - response_closed.complete
2025-03-31 15:26:27,779 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:26:27 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '54546', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124103', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '430ms', 'x-request-id': 'req_349a95bbbb4b607e6d554e2504c5601e', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92902c61aac51ce4-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:26:27,780 - DEBUG - request_id: req_349a95bbbb4b607e6d554e2504c5601e
2025-03-31 15:26:27,783 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9QrQY8myJYt8GRH1bzulWn7p0aD', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Heptachlor", "76-44-8"  \n"Hexachlorobenzene", "118-74-1"  \n"Lindane", "58-89-9"  \n"Mercury compounds, including inorganic mercury compounds, alkyl mercury compounds and alkyloxyalkyl and aryl mercury compounds", "NA"  \n"Methamidophos", "10265-92-6"  \n"Monocrotophos", "6923-22-4"  \n"Parathion", "56-38-2"  \n"Pentachlorophenol and its salts and esters", "87-86-5*"  \n"Phorate", "298-02-2"  \n"Terbufos", "13071-79-9"  \n"Toxaphene", "8001-35-2"  \n"Trichlorfon", "52-68-6"  \n"Dustable powder formulations containing a combination of: – Benomyl at or above 7 per cent, – Carbofuran at or above 10 per cent, and – Thiram at or above 15 per cent", "17804-35-2"  \n"Dustable powder formulations containing a combination of: – Benomyl at or above 7 per cent, – Carbofuran at or above 10 per cent, and – Thiram at or above 15 per cent", "1563-66-2"  \n"Dustable powder formulations containing a combination of: – Benomyl at or above 7 per cent, – Carbofuran at or above 10 per cent, and – Thiram at or above 15 per cent", "137-26-8"  \n"Phosphamidon (soluble liquid formulations of the substance that exceed 1,000 g active ingredient/l)", "13171-21-6 (mixture, (E) & (Z) isomers)"  \n"Phosphamidon (soluble liquid formulations of the substance that exceed 1,000 g active ingredient/l)", "23783-98-4 ((Z)-isomer)"  \n"Phosphamidon (soluble liquid formulations of the substance that exceed 1,000 g active ingredient/l)", "297-99-4 ((E)-isomer)"  \n"Methyl-parathion (emulsifiable concentrates (EC) at or above 19.5% active ingredient and dusts at or above 1.5% active ingredient)", "298-00-0"  \n"Asbestos: – Actinolite", "77536-66-4"  \n"Asbestos: – Anthophyllite", "77536-67-5"  \n"Asbestos: – Amosite", "12172-73-5"  \n"Asbestos: – Crocidolite", "12001-28-4"  \n"Asbestos: – Tremolite", "77536-68-6"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743427533, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=605, prompt_tokens=826, total_tokens=1431, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:26:27,793 - INFO - Extracting text from page 3/5
2025-03-31 15:26:27,793 - DEBUG - Extracted text: | 35
Chemical
Relevant
CAS number(s)
Category
Comm
2025-03-31 15:26:27,798 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 35\nChemical\nRelevant\nCAS number(s)\nCategory\nCommercial octabromodiphenyl ether \nincluding:\n– Hexabromodiphenyl ether\n– Heptabromodiphenyl ether\n36483-60-0\n68928-80-3\nIndustrial\nCommercial pentabromodiphenyl ether\nincluding:\n– Tetrabromodiphenyl ether\n– Pentabromodiphenyl ether\n40088-47-9\n32534-81-9\nIndustrial\nDecabromodiphenyl ether\n1163-19-5\nIndustrial\nHexabromocyclododecane\n25637-99-4\n3194-55-6\n134237-50-6 \n134237-51-7\n134237-52-8\nIndustrial\nPerﬂuorooctane sulfonic acid,\nperﬂuorooctane sulfonates,\nperﬂuorooctane sulfonamides and \nperﬂuorooctane sulfonyls including:\n– Perﬂuorooctane sulfonic acid\n– Potassium perﬂuorooctane sulfonate \n– Lithium perﬂuorooctane sulfonate \n– Ammonium perﬂuorooctane sulfonate \n–  Diethanolammonium perﬂuorooctane \nsulfonate\n–  Tetraethylammonium perﬂuorooctane \nsulfonate\n–  Didecyldimethylammonium \nperﬂuorooctane sulfonate\n– N-Ethylperﬂuorooctane sulfonamide \n– N-Methylperﬂuorooctane sulfonamide \n–  N-Ethyl-N-(2-hydroxyethyl) \nperﬂuorooctane sulfonamide\n–  N-(2-hydroxyethyl)- \nN-methylperﬂuorooctane sulfonamide\n– Perﬂuorooctane sulfonyl ﬂuoride\n1763-23-1\n2795-39-3\n29457-72-5\n 29081-56-9\n70225-14-8\n56773-42-3\n251099-16-8\n4151-50-2\n31506-32-8\n1691-99-2\n24448-09-7\n307-35-7\nIndustrial\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:26:27,799 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:26:27,800 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:26:27,800 - DEBUG - send_request_headers.complete
2025-03-31 15:26:27,801 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:26:27,801 - DEBUG - send_request_body.complete
2025-03-31 15:26:27,801 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:29:07,770 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:29:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'159745'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124152'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'406ms'), (b'x-request-id', b'req_5c21c171b39a68fdca64914daf3822ac'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92902db82c971ce4-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:29:07,776 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:29:07,777 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:29:07,777 - DEBUG - receive_response_body.complete
2025-03-31 15:29:07,778 - DEBUG - response_closed.started
2025-03-31 15:29:07,778 - DEBUG - response_closed.complete
2025-03-31 15:29:07,778 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:29:07 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '159745', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124152', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '406ms', 'x-request-id': 'req_5c21c171b39a68fdca64914daf3822ac', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92902db82c971ce4-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:29:07,778 - DEBUG - request_id: req_5c21c171b39a68fdca64914daf3822ac
2025-03-31 15:29:07,782 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9Rky7gBiUPBZaPBoJFOrdW2CNkx', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Commercial octabromodiphenyl ether", "36483-60-0"  \n"Commercial octabromodiphenyl ether", "68928-80-3"  \n"Hexabromodiphenyl ether", "36483-60-0"  \n"Hexabromodiphenyl ether", "68928-80-3"  \n"Heptabromodiphenyl ether", "36483-60-0"  \n"Heptabromodiphenyl ether", "68928-80-3"  \n"Commercial pentabromodiphenyl ether", "40088-47-9"  \n"Commercial pentabromodiphenyl ether", "32534-81-9"  \n"Tetrabromodiphenyl ether", "40088-47-9"  \n"Tetrabromodiphenyl ether", "32534-81-9"  \n"Pentabromodiphenyl ether", "40088-47-9"  \n"Pentabromodiphenyl ether", "32534-81-9"  \n"Decabromodiphenyl ether", "1163-19-5"  \n"Hexabromocyclododecane", "25637-99-4"  \n"Hexabromocyclododecane", "3194-55-6"  \n"Hexabromocyclododecane", "134237-50-6"  \n"Hexabromocyclododecane", "134237-51-7"  \n"Hexabromocyclododecane", "134237-52-8"  \n"Perfluorooctane sulfonic acid", "1763-23-1"  \n"Perfluorooctane sulfonic acid", "2795-39-3"  \n"Perfluorooctane sulfonic acid", "29457-72-5"  \n"Perfluorooctane sulfonic acid", "29081-56-9"  \n"Perfluorooctane sulfonic acid", "70225-14-8"  \n"Perfluorooctane sulfonic acid", "56773-42-3"  \n"Perfluorooctane sulfonic acid", "251099-16-8"  \n"Perfluorooctane sulfonic acid", "4151-50-2"  \n"Perfluorooctane sulfonic acid", "31506-32-8"  \n"Perfluorooctane sulfonic acid", "1691-99-2"  \n"Perfluorooctane sulfonic acid", "24448-09-7"  \n"Perfluorooctane sulfonic acid", "307-35-7"  \n"Potassium perfluorooctane sulfonate", "1763-23-1"  \n"Potassium perfluorooctane sulfonate", "2795-39-3"  \n"Potassium perfluorooctane sulfonate", "29457-72-5"  \n"Potassium perfluorooctane sulfonate", "29081-56-9"  \n"Potassium perfluorooctane sulfonate", "70225-14-8"  \n"Potassium perfluorooctane sulfonate", "56773-42-3"  \n"Potassium perfluorooctane sulfonate", "251099-16-8"  \n"Potassium perfluorooctane sulfonate", "4151-50-2"  \n"Potassium perfluorooctane sulfonate", "31506-32-8"  \n"Potassium perfluorooctane sulfonate", "1691-99-2"  \n"Potassium perfluorooctane sulfonate", "24448-09-7"  \n"Potassium perfluorooctane sulfonate", "307-35-7"  \n"Lithium perfluorooctane sulfonate", "1763-23-1"  \n"Lithium perfluorooctane sulfonate", "2795-39-3"  \n"Lithium perfluorooctane sulfonate", "29457-72-5"  \n"Lithium perfluorooctane sulfonate", "29081-56-9"  \n"Lithium perfluorooctane sulfonate", "70225-14-8"  \n"Lithium perfluorooctane sulfonate", "56773-42-3"  \n"Lithium perfluorooctane sulfonate", "251099-16-8"  \n"Lithium perfluorooctane sulfonate", "4151-50-2"  \n"Lithium perfluorooctane sulfonate", "31506-32-8"  \n"Lithium perfluorooctane sulfonate", "1691-99-2"  \n"Lithium perfluorooctane sulfonate", "24448-09-7"  \n"Lithium perfluorooctane sulfonate", "307-35-7"  \n"Ammonium perfluorooctane sulfonate", "1763-23-1"  \n"Ammonium perfluorooctane sulfonate",  "2795-39-3"  \n"Ammonium perfluorooctane sulfonate", "29457-72-5"  \n"Ammonium perfluorooctane sulfonate", "29081-56-9"  \n"Ammonium perfluorooctane sulfonate", "70225-14-8"  \n"Ammonium perfluorooctane sulfonate", "56773-42-3"  \n"Ammonium perfluorooctane sulfonate", "251099-16-8"  \n"Ammonium perfluorooctane sulfonate", "4151-50-2"  \n"Ammonium perfluorooctane sulfonate", "31506-32-8"  \n"Ammonium perfluorooctane sulfonate", "1691-99-2"  \n"Ammonium perfluorooctane sulfonate", "24448-09-7"  \n"Ammonium perfluorooctane sulfonate", "307-35-7"  \n"Diethanolammonium perfluorooctane sulfonate", "1763-23-1"  \n"Diethanolammonium perfluorooctane sulfonate", "2795-39-3"  \n"Diethanolammonium perfluorooctane sulfonate", "29457-72-5"  \n"Diethanolammonium perfluorooctane sulfonate", "29081-56-9"  \n"Diethanolammonium perfluorooctane sulfonate", "70225-14-8"  \n"Diethanolammonium perfluorooctane sulfonate", "56773-42-3"  \n"Diethanolammonium perfluorooctane sulfonate", "251099-16-8"  \n"Diethanolammonium perfluorooctane sulfonate", "4151-50-2"  \n"Diethanolammonium perfluorooctane sulfonate", "31506-32-8"  \n"Diethanolammonium perfluorooctane sulfonate", "1691-99-2"  \n"Diethanolammonium perfluorooctane sulfonate", "24448-09-7"  \n"Diethanolammonium perfluorooctane sulfonate", "307-35-7"  \n"Tetraethylammonium perfluorooctane sulfonate", "NA"  \n"Didecyldimethylammonium perfluorooctane sulfonate", "NA"  \n"N-Ethylperfluorooctane sulfonamide", "NA"  \n"N-Methylperfluorooctane sulfonamide", "NA"  \n"N-Ethyl-N-(2-hydroxyethyl) perfluorooctane sulfonamide", "NA"  \n"N-(2-hydroxyethyl)-N-methylperfluorooctane sulfonamide", "NA"  \n"Perfluorooctane sulfonyl fluoride", "NA"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743427588, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=1860, prompt_tokens=845, total_tokens=2705, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:29:07,795 - INFO - Extracting text from page 4/5
2025-03-31 15:29:07,795 - DEBUG - Extracted text: | 36
Chemical
Relevant
CAS number(s)
Category
Perﬂ
2025-03-31 15:29:07,798 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 36\nChemical\nRelevant\nCAS number(s)\nCategory\nPerﬂuorooctanoic acid (PFOA), its salts \nand PFOA-related compounds***\n335-67-1\nIndustrial\nPolybrominated biphenyls (PBB)\n36355-01-8 (hexa-)\n27858-07-7 (octa-)\n13654-09-6 (deca-)\nIndustrial\nPolychlorinated biphenyls (PCB)\n1336-36-3\nIndustrial\nPolychlorinated terphenyls (PCT)\n61788-33-8\nIndustrial\nShort-chain chlorinated paraﬃns\n85535-84-8\nIndustrial\nTetraethyl lead\n78-00-2\nIndustrial\nTetramethyl lead\n75-74-1\nIndustrial\nTris (2,3-dibromopropyl) phosphate\n126-72-7\nIndustrial\nAll tributyltin compounds including: \n– Tributyltin oxide\n– Tributyltin ﬂuoride\n– Tributyltin methacrylate\n– Tributyltin benzoate\n– Tributyltin chloride\n– Tributyltin linoleate\n– Tributyltin naphthenate\n56-35-9\n1983-10-4\n2155-70-6\n4342-36-3\n1461-22-9\n24124-25-2\n85409-17-2\nPesticide/\nIndustrial**\n* \n Only the CAS numbers of parent compounds are listed. For a list of other relevant \nCAS numbers, reference may be made to the relevant decision guidance \ndocument.\n** \n All tributyltin compounds are listed in Annex III in both the industrial and \npesticide categories. These chemicals were initially listed in Annex III in the \npesticide category by decision RC-4/5, with the amendment entering into force \non 1 February 2009. Decision RC-8/5 subsequently amended Annex III to list all \ntributyltin compounds in the industrial category, with the amendment entering \ninto force on 15 September 2017.\n***  The following substances are included in this designation:\n– Perﬂuorooctanoic acid (PFOA) and its salts\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:29:07,801 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:29:07,802 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:29:07,802 - DEBUG - send_request_headers.complete
2025-03-31 15:29:07,802 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:29:07,802 - DEBUG - send_request_body.complete
2025-03-31 15:29:07,802 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:29:36,187 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:29:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'28100'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'122675'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'1.115s'), (b'x-request-id', b'req_1399dd36c9d6f0b86d3a64f133623d23'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'929031a02cfe1ce4-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:29:36,194 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:29:36,195 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:29:36,195 - DEBUG - receive_response_body.complete
2025-03-31 15:29:36,195 - DEBUG - response_closed.started
2025-03-31 15:29:36,196 - DEBUG - response_closed.complete
2025-03-31 15:29:36,196 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:29:36 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '28100', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '122675', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '1.115s', 'x-request-id': 'req_1399dd36c9d6f0b86d3a64f133623d23', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '929031a02cfe1ce4-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:29:36,196 - DEBUG - request_id: req_1399dd36c9d6f0b86d3a64f133623d23
2025-03-31 15:29:36,200 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9UKceS2AeRZOOhA9uOwztyU8SLP', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Perfluorooctanoic acid (PFOA), its salts and PFOA-related compounds", "335-67-1"  \n"Polybrominated biphenyls (PBB) - hexa-", "36355-01-8"  \n"Polybrominated biphenyls (PBB) - octa-", "27858-07-7"  \n"Polybrominated biphenyls (PBB) - deca-", "13654-09-6"  \n"Polychlorinated biphenyls (PCB)", "1336-36-3"  \n"Polychlorinated terphenyls (PCT)", "61788-33-8"  \n"Short-chain chlorinated paraffins", "85535-84-8"  \n"Tetraethyl lead", "78-00-2"  \n"Tetramethyl lead", "75-74-1"  \n"Tris (2,3-dibromopropyl) phosphate", "126-72-7"  \n"Tributyltin oxide", "56-35-9"  \n"Tributyltin fluoride", "1983-10-4"  \n"Tributyltin methacrylate", "2155-70-6"  \n"Tributyltin benzoate", "4342-36-3"  \n"Tributyltin chloride", "1461-22-9"  \n"Tributyltin linoleate", "24124-25-2"  \n"Tributyltin naphthenate", "85409-17-2"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743427748, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=342, prompt_tokens=792, total_tokens=1134, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:29:36,215 - INFO - Extracting text from page 5/5
2025-03-31 15:29:36,215 - DEBUG - Extracted text: | 37
– Any related substance (including its salts 
2025-03-31 15:29:36,222 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 37\n– Any related substance (including its salts and polymers) having a linear or \nbranched perﬂuoroheptyl group with the formula C7F15- directly attached to \nanother carbon atom as one of the structural elements \n– Any related substance (including its salts and polymers) having a linear \nor branched perﬂuorooctyl group with the formula C8F17- as one of the \nstructural elements\nThe following substances are excluded from this designation: \n– C8F17-X, where X = F, Cl, Br\n– C8F17-C(=O)OH, C8F17-C(=O)O-X\' or C8F17-CF2-X\'  \n(where X\' = any group, including salts)\n– Perﬂuorooctane sulfonic acid (PFOS) and its derivatives  \n(C8F17SO2X (X = OH, metal salt (O-M+), halide, amide and  \nother derivatives including polymers)).\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number, in that order.\nFormat your response as: Chemical Trade Name, CAS Number\n\nThis is how the data should be formatted:\nBenzene", "71-43-2"\n"Ethanol", "64-17-5"\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:29:36,227 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:29:36,228 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:29:36,229 - DEBUG - send_request_headers.complete
2025-03-31 15:29:36,229 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:29:36,229 - DEBUG - send_request_body.complete
2025-03-31 15:29:36,229 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:29:38,846 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:29:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'2348'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124498'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'240ms'), (b'x-request-id', b'req_24afee7d4900f1b1c438df47f3a496c9'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92903251dee91ce4-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:29:38,847 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:29:38,847 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:29:38,848 - DEBUG - receive_response_body.complete
2025-03-31 15:29:38,848 - DEBUG - response_closed.started
2025-03-31 15:29:38,848 - DEBUG - response_closed.complete
2025-03-31 15:29:38,848 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:29:38 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '2348', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124498', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '240ms', 'x-request-id': 'req_24afee7d4900f1b1c438df47f3a496c9', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92903251dee91ce4-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:29:38,848 - DEBUG - request_id: req_24afee7d4900f1b1c438df47f3a496c9
2025-03-31 15:29:38,849 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9UmuAn4Pgj8pAiaTzHAhxNwW5SZ', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='"Perfluorooctane sulfonic acid (PFOS)", "NA"', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743427776, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=19, prompt_tokens=520, total_tokens=539, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:29:38,941 - INFO - Processed rotterdam.pdf and saved Excel file to ../data/processed/rotterdam.xlsx
2025-03-31 15:29:38,999 - DEBUG - close.started
2025-03-31 15:29:39,001 - DEBUG - close.complete
2025-03-31 15:35:54,001 - INFO - Script is running
2025-03-31 15:35:54,001 - INFO - Processing PDF file: rotterdam.pdf
2025-03-31 15:35:54,017 - INFO - Extracting text from page 1/5
2025-03-31 15:35:54,017 - DEBUG - Extracted text: | 33
ANNEX III 1 
CHEMICALS SUBJECT TO THE PRIOR I
2025-03-31 15:35:54,020 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 33\nANNEX III 1 \nCHEMICALS SUBJECT TO THE PRIOR INFORMED CONSENT PROCEDURE\nChemical\nRelevant\nCAS number(s)\nCategory\n2,4,5-T and its salts and esters\n93-76-5*\nPesticide\nAlachlor\n15972-60-8\nPesticide\nAldicarb\n116-06-3\nPesticide\nAldrin\n309-00-2\nPesticide\nAzinphos-methyl\n86-50-0\nPesticide\nBinapacryl\n485-31-4\nPesticide\nCaptafol\n2425-06-1\nPesticide\nCarbofuran\n1563-66-2\nPesticide\nChlordane\n57-74-9\nPesticide\nChlordimeform\n6164-98-3\nPesticide\nChlorobenzilate\n510-15-6\nPesticide\nDDT\n50-29-3\nPesticide\nDieldrin\n60-57-1\nPesticide\nDinitro-ortho-cresol (DNOC) and its salts \n(such as ammonium salt, potassium salt \nand sodium salt)\n534-52-1\n2980-64-5\n5787-96-2\n2312-76-7\nPesticide\nDinoseb and its salts and esters\n88-85-7*\nPesticide\n1,2-dibromoethane (EDB)\n106-93-4\nPesticide\nEndosulfan\n115-29-7\nPesticide\nEthylene dichloride\n107-06-2\nPesticide\nEthylene oxide\n75-21-8\nPesticide\nFluoroacetamide\n640-19-7\nPesticide\nHCH (mixed isomers)\n608-73-1\nPesticide\n1 \nAs amended by the Conference of the Parties by its decision RC-1/3 of 24 September 2004; RC-4/5 of  \n31 October 2008; RC-5/3, RC-5/4 and RC-5/5 of 24 June 2011; RC-6/4, RC-6/5, RC-6/6 and RC-6/7 of  \n10 May 2013; RC-7/4 of 15 May 2015; RC-8/2, RC-8/3, RC-8/4 and RC-8/5 of 5 May 2017; RC-9/3 and RC-9/4 \nof 10 May 2019; RC-10/6 and RC-10/7 of 17 June 2022; and RC-11/3 of 12 May 2023.\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name (always a natural name) and CAS Number (always a number with 5-15 digits, might include "-").\n\nFormat your response as: Chemical Trade Name, CAS Number. Examples: \nMercury compounds, 71-43-2\nEthanol, 64-17-5\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:35:54,040 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:35:54,041 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-03-31 15:35:54,123 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11759f850>
2025-03-31 15:35:54,123 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x117770b00> server_hostname='api.openai.com' timeout=5.0
2025-03-31 15:35:54,164 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117794750>
2025-03-31 15:35:54,164 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:35:54,165 - DEBUG - send_request_headers.complete
2025-03-31 15:35:54,165 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:35:54,165 - DEBUG - send_request_body.complete
2025-03-31 15:35:54,165 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:36:30,010 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:36:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'35641'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124341'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'315ms'), (b'x-request-id', b'req_e3bdebde312cc55e5632a701c7698eb3'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=47HN5eietIvEgIqnwwT1vt5PFr2t2ILNqU7Frkj_kgs-1743428190-1.0.1.1-Kj01nYFfRQN6KD05taxOjiY76OhnmQqal4Slt0GBiA.KCtNTZ_e91KtqFHEEHPl8AWfvFRsw.lp9ldUdFUiTyRdb0cPb3M3S1.aOUDjPIQw; path=/; expires=Mon, 31-Mar-25 14:06:30 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=gWBeTIjUfTgQOSNCLa12so53uJHs5lhkeRdeoxabFvc-1743428190023-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92903b8bea50d348-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:36:30,015 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:36:30,016 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:36:30,016 - DEBUG - receive_response_body.complete
2025-03-31 15:36:30,016 - DEBUG - response_closed.started
2025-03-31 15:36:30,016 - DEBUG - response_closed.complete
2025-03-31 15:36:30,017 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Mon, 31 Mar 2025 13:36:30 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'master-thesis-chemical-rag'), ('openai-processing-ms', '35641'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '1000'), ('x-ratelimit-limit-tokens', '125000'), ('x-ratelimit-remaining-requests', '999'), ('x-ratelimit-remaining-tokens', '124341'), ('x-ratelimit-reset-requests', '60ms'), ('x-ratelimit-reset-tokens', '315ms'), ('x-request-id', 'req_e3bdebde312cc55e5632a701c7698eb3'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=47HN5eietIvEgIqnwwT1vt5PFr2t2ILNqU7Frkj_kgs-1743428190-1.0.1.1-Kj01nYFfRQN6KD05taxOjiY76OhnmQqal4Slt0GBiA.KCtNTZ_e91KtqFHEEHPl8AWfvFRsw.lp9ldUdFUiTyRdb0cPb3M3S1.aOUDjPIQw; path=/; expires=Mon, 31-Mar-25 14:06:30 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=gWBeTIjUfTgQOSNCLa12so53uJHs5lhkeRdeoxabFvc-1743428190023-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '92903b8bea50d348-FRA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-03-31 15:36:30,017 - DEBUG - request_id: req_e3bdebde312cc55e5632a701c7698eb3
2025-03-31 15:36:30,023 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9ashYgwzqHJgEoMLnTj1jcckMrK', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='2,4,5-T and its salts and esters, 93-76-5  \nAlachlor, 15972-60-8  \nAldicarb, 116-06-3  \nAldrin, 309-00-2  \nAzinphos-methyl, 86-50-0  \nBinapacryl, 485-31-4  \nCaptafol, 2425-06-1  \nCarbofuran, 1563-66-2  \nChlordane, 57-74-9  \nChlordimeform, 6164-98-3  \nChlorobenzilate, 510-15-6  \nDDT, 50-29-3  \nDieldrin, 60-57-1  \nDinitro-ortho-cresol (DNOC) and its salts (such as ammonium salt, potassium salt and sodium salt), 534-52-1  \nDinitro-ortho-cresol (DNOC) and its salts (such as ammonium salt, potassium salt and sodium salt), 2980-64-5  \nDinitro-ortho-cresol (DNOC) and its salts (such as ammonium salt, potassium salt and sodium salt), 5787-96-2  \nDinitro-ortho-cresol (DNOC) and its salts (such as ammonium salt, potassium salt and sodium salt), 2312-76-7  \nDinoseb and its salts and esters, 88-85-7  \n1,2-dibromoethane (EDB), 106-93-4  \nEndosulfan, 115-29-7  \nEthylene dichloride, 107-06-2  \nEthylene oxide, 75-21-8  \nFluoroacetamide, 640-19-7  \nHCH (mixed isomers), 608-73-1', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743428154, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=410, prompt_tokens=921, total_tokens=1331, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:36:30,035 - INFO - Extracting text from page 2/5
2025-03-31 15:36:30,035 - DEBUG - Extracted text: | 34
Chemical
Relevant
CAS number(s)
Category
Hept
2025-03-31 15:36:30,038 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 34\nChemical\nRelevant\nCAS number(s)\nCategory\nHeptachlor\n76-44-8\nPesticide\nHexachlorobenzene\n118-74-1\nPesticide\nLindane\n58-89-9\nPesticide\nMercury compounds, including inorganic \nmercury compounds, alkyl mercury \ncompounds and alkyloxyalkyl and aryl \nmercury compounds\nPesticide\nMethamidophos\n10265-92-6\nPesticide\nMonocrotophos\n6923-22-4\nPesticide\nParathion\n56-38-2\nPesticide\nPentachlorophenol and its salts and \nesters\n87-86-5*\nPesticide\nPhorate\n298-02-2\nPesticide\nTerbufos\n13071-79-9\nPesticide \nToxaphene\n8001-35-2\nPesticide\nTrichlorfon\n52-68-6\nPesticide\nDustable powder formulations containing \na combination of:\n– Benomyl at or above 7 per cent,\n– Carbofuran at or above 10 per cent, and\n– Thiram at or above 15 per cent\n17804-35-2\n1563-66-2\n137-26-8\nSeverely \nhazardous \npesticide \nformulation\nPhosphamidon\n(soluble liquid formulations of the \nsubstance that exceed 1,000 g active \ningredient/l)\n13171-21-6 (mixture, \n(E) & (Z) isomers)\n23783-98-4 ((Z)-\nisomer)\n297-99-4 ((E)-isomer)\nSeverely \nhazardous \npesticide \nformulation\nMethyl-parathion\n(emulsiﬁable concentrates (EC) at or \nabove 19.5% active ingredient and dusts \nat or above 1.5% active ingredient)\n298-00-0\nSeverely \nhazardous \npesticide \nformulation\nAsbestos:\n– Actinolite\n– Anthophyllite\n– Amosite\n– Crocidolite\n– Tremolite\n77536-66-4\n77536-67-5\n12172-73-5\n12001-28-4\n77536-68-6\nIndustrial\nIndustrial\nIndustrial\nIndustrial\nIndustrial\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name (always a natural name) and CAS Number (always a number with 5-15 digits, might include "-").\n\nFormat your response as: Chemical Trade Name, CAS Number. Examples: \nMercury compounds, 71-43-2\nEthanol, 64-17-5\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:36:30,039 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:36:30,039 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:36:30,040 - DEBUG - send_request_headers.complete
2025-03-31 15:36:30,040 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:36:30,040 - DEBUG - send_request_body.complete
2025-03-31 15:36:30,040 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:37:00,563 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:37:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'30302'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124136'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'414ms'), (b'x-request-id', b'req_3bfe1a681702d7e87cc2aed69d91ec14'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92903c6c1fded348-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:37:00,565 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:37:00,565 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:37:00,566 - DEBUG - receive_response_body.complete
2025-03-31 15:37:00,566 - DEBUG - response_closed.started
2025-03-31 15:37:00,566 - DEBUG - response_closed.complete
2025-03-31 15:37:00,566 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:37:00 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '30302', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124136', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '414ms', 'x-request-id': 'req_3bfe1a681702d7e87cc2aed69d91ec14', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92903c6c1fded348-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:37:00,566 - DEBUG - request_id: req_3bfe1a681702d7e87cc2aed69d91ec14
2025-03-31 15:37:00,567 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9bSsqayM8IkW2ijjAPrYHA4LuPe', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='Heptachlor, 76-44-8  \nHexachlorobenzene, 118-74-1  \nLindane, 58-89-9  \nMercury compounds, NA  \nMethamidophos, 10265-92-6  \nMonocrotophos, 6923-22-4  \nParathion, 56-38-2  \nPentachlorophenol and its salts and esters, 87-86-5  \nPhorate, 298-02-2  \nTerbufos, 13071-79-9  \nToxaphene, 8001-35-2  \nTrichlorfon, 52-68-6  \nBenomyl, 17804-35-2  \nCarbofuran, 1563-66-2  \nThiram, 137-26-8  \nPhosphamidon (mixture, (E) & (Z) isomers), 13171-21-6  \nPhosphamidon ((Z)-isomer), 23783-98-4  \nPhosphamidon ((E)-isomer), 297-99-4  \nMethyl-parathion, 298-00-0  \nAsbestos (Actinolite), 77536-66-4  \nAsbestos (Anthophyllite), 77536-67-5  \nAsbestos (Amosite), 12172-73-5  \nAsbestos (Crocidolite), 12001-28-4  \nAsbestos (Tremolite), 77536-68-6', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743428190, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=332, prompt_tokens=836, total_tokens=1168, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:37:00,574 - INFO - Extracting text from page 3/5
2025-03-31 15:37:00,574 - DEBUG - Extracted text: | 35
Chemical
Relevant
CAS number(s)
Category
Comm
2025-03-31 15:37:00,576 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 35\nChemical\nRelevant\nCAS number(s)\nCategory\nCommercial octabromodiphenyl ether \nincluding:\n– Hexabromodiphenyl ether\n– Heptabromodiphenyl ether\n36483-60-0\n68928-80-3\nIndustrial\nCommercial pentabromodiphenyl ether\nincluding:\n– Tetrabromodiphenyl ether\n– Pentabromodiphenyl ether\n40088-47-9\n32534-81-9\nIndustrial\nDecabromodiphenyl ether\n1163-19-5\nIndustrial\nHexabromocyclododecane\n25637-99-4\n3194-55-6\n134237-50-6 \n134237-51-7\n134237-52-8\nIndustrial\nPerﬂuorooctane sulfonic acid,\nperﬂuorooctane sulfonates,\nperﬂuorooctane sulfonamides and \nperﬂuorooctane sulfonyls including:\n– Perﬂuorooctane sulfonic acid\n– Potassium perﬂuorooctane sulfonate \n– Lithium perﬂuorooctane sulfonate \n– Ammonium perﬂuorooctane sulfonate \n–  Diethanolammonium perﬂuorooctane \nsulfonate\n–  Tetraethylammonium perﬂuorooctane \nsulfonate\n–  Didecyldimethylammonium \nperﬂuorooctane sulfonate\n– N-Ethylperﬂuorooctane sulfonamide \n– N-Methylperﬂuorooctane sulfonamide \n–  N-Ethyl-N-(2-hydroxyethyl) \nperﬂuorooctane sulfonamide\n–  N-(2-hydroxyethyl)- \nN-methylperﬂuorooctane sulfonamide\n– Perﬂuorooctane sulfonyl ﬂuoride\n1763-23-1\n2795-39-3\n29457-72-5\n 29081-56-9\n70225-14-8\n56773-42-3\n251099-16-8\n4151-50-2\n31506-32-8\n1691-99-2\n24448-09-7\n307-35-7\nIndustrial\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name (always a natural name) and CAS Number (always a number with 5-15 digits, might include "-").\n\nFormat your response as: Chemical Trade Name, CAS Number. Examples: \nMercury compounds, 71-43-2\nEthanol, 64-17-5\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:37:00,577 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:37:00,577 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:37:00,577 - DEBUG - send_request_headers.complete
2025-03-31 15:37:00,578 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:37:00,578 - DEBUG - send_request_body.complete
2025-03-31 15:37:00,578 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:39:42,511 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:39:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'161670'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124296'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'337ms'), (b'x-request-id', b'req_e1762aa1ae27e2208133224935a29cb6'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92903d2afcf2d348-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:39:42,516 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:39:42,516 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:39:42,517 - DEBUG - receive_response_body.complete
2025-03-31 15:39:42,518 - DEBUG - response_closed.started
2025-03-31 15:39:42,518 - DEBUG - response_closed.complete
2025-03-31 15:39:42,518 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:39:42 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '161670', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124296', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '337ms', 'x-request-id': 'req_e1762aa1ae27e2208133224935a29cb6', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92903d2afcf2d348-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:39:42,519 - DEBUG - request_id: req_e1762aa1ae27e2208133224935a29cb6
2025-03-31 15:39:42,523 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9bwvJRoCSYatGDAGbQsuGAKIWh1', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='Chemical Trade Name, CAS Number  \nCommercial octabromodiphenyl ether, 36483-60-0  \nCommercial octabromodiphenyl ether, 68928-80-3  \nHexabromodiphenyl ether, 36483-60-0  \nHexabromodiphenyl ether, 68928-80-3  \nHeptabromodiphenyl ether, 36483-60-0  \nHeptabromodiphenyl ether, 68928-80-3  \nCommercial pentabromodiphenyl ether, 40088-47-9  \nCommercial pentabromodiphenyl ether, 32534-81-9  \nTetrabromodiphenyl ether, 40088-47-9  \nTetrabromodiphenyl ether, 32534-81-9  \nPentabromodiphenyl ether, 40088-47-9  \nPentabromodiphenyl ether, 32534-81-9  \nDecabromodiphenyl ether, 1163-19-5  \nHexabromocyclododecane, 25637-99-4  \nHexabromocyclododecane, 3194-55-6  \nHexabromocyclododecane, 134237-50-6  \nHexabromocyclododecane, 134237-51-7  \nHexabromocyclododecane, 134237-52-8  \nPerfluorooctane sulfonic acid, 1763-23-1  \nPerfluorooctane sulfonic acid, 2795-39-3  \nPerfluorooctane sulfonic acid, 29457-72-5  \nPerfluorooctane sulfonic acid, 29081-56-9  \nPerfluorooctane sulfonic acid, 70225-14-8  \nPerfluorooctane sulfonic acid, 56773-42-3  \nPerfluorooctane sulfonic acid, 251099-16-8  \nPerfluorooctane sulfonic acid, 4151-50-2  \nPerfluorooctane sulfonic acid, 31506-32-8  \nPerfluorooctane sulfonic acid, 1691-99-2  \nPerfluorooctane sulfonic acid, 24448-09-7  \nPerfluorooctane sulfonic acid, 307-35-7  \nPotassium perfluorooctane sulfonate, 1763-23-1  \nPotassium perfluorooctane sulfonate, 2795-39-3  \nPotassium perfluorooctane sulfonate, 29457-72-5  \nPotassium perfluorooctane sulfonate, 29081-56-9  \nPotassium perfluorooctane sulfonate, 70225-14-8  \nPotassium perfluorooctane sulfonate, 56773-42-3  \nPotassium perfluorooctane sulfonate, 251099-16-8  \nPotassium perfluorooctane sulfonate, 4151-50-2  \nPotassium perfluorooctane sulfonate, 31506-32-8  \nPotassium perfluorooctane sulfonate, 1691-99-2  \nPotassium perfluorooctane sulfonate, 24448-09-7  \nPotassium perfluorooctane sulfonate, 307-35-7  \nLithium perfluorooctane sulfonate, 1763-23-1  \nLithium perfluorooctane sulfonate, 2795-39-3  \nLithium perfluorooctane sulfonate, 29457-72-5  \nLithium perfluorooctane sulfonate, 29081-56-9  \nLithium perfluorooctane sulfonate, 70225-14-8  \nLithium perfluorooctane sulfonate, 56773-42-3  \nLithium perfluorooctane sulfonate, 251099-16-8  \nLithium perfluorooctane sulfonate, 4151-50-2  \nLithium perfluorooctane sulfonate, 31506-32-8  \nLithium perfluorooctane sulfonate, 1691-99-2  \nLithium perfluorooctane sulfonate, 24448-09-7  \nLithium perfluorooctane sulfonate, 307-35-7  \nAmmonium perfluorooctane sulfonate, 1763-23-1  \nAmmonium perfluorooctane sulfonate, 2795-39-3  \nAmmonium perfluorooctane sulfonate, 29457-72-5  \nAmmonium perfluorooctane sulfonate, 29081-56-9  \nAmmonium perfluorooctane sulfonate, 70225-14-8  \nAmmonium perfluorooctane sulfonate, 56773-42-3  \nAmmonium perfluorooctane sulfonate, 251099-16-8  \nAmmonium perfluorooctane sulfonate, 4151-50-2  \nAmmonium perfluorooctane sulfonate, 31506-32-8  \nAmmonium perfluorooctane sulfonate, 1691-99-2  \nAmmonium perfluorooctane sulfonate, 24448-09-7  \nAmmonium perfluorooctane sulfonate, 307-35-7  \nDiethanolammonium perfluorooctane sulfonate, 1763-23-1  \nDiethanolammonium perfluorooctane sulfonate, 2795-39-3  \nDiethanolammonium perfluorooctane sulfonate, 29457-72-5  \nDiethanolammonium perfluorooctane sulfonate, 29081-56-9  \nDiethanolammonium perfluorooctane sulfonate, 70225-14-8  \nDiethanolammonium perfluorooctane sulfonate, 56773-42-3  \nDiethanolammonium perfluorooctane sulfonate, 251099-16-8  \nDiethanolammonium perfluorooctane sulfonate, 4151-50-2  \nDiethanolammonium perfluorooctane sulfonate, 31506-32-8  \nDiethanolammonium perfluorooctane sulfonate, 1691-99-2  \nDiethanolammonium perfluorooctane sulfonate, 24448-09-7  \nDiethanolammonium perfluorooctane sulfonate, 307-35-7  \nTetraethylammonium perfluorooctane sulfonate, 1763-23-1  \nTetraethylammonium perfluorooctane sulfonate, 2795-39-3  \nTetraethylammonium perfluorooctane sulfonate, 29457-72-5  \nTetraethylammonium perfluorooctane sulfonate, 29081-56-9  \nTetraethylammonium perfluorooctane sulfonate, 70225-14-8  \nTetraethylammonium perfluorooctane sulfonate, 56773-42-3  \nTetraethylammonium perfluorooctane sulfonate, 251099-16-8  \nTetraethylammonium perfluorooctane sulfonate, 4151-50-2  \nTetraethylammonium perfluorooctane sulfonate, 31506-32-8  \nTetraethylammonium perfluorooctane sulfonate, 1691-99-2  \nTetraethylammonium perfluorooctane sulfonate, 24448-09-7  \nTetraethylammonium perfluorooctane sulfonate, 307-35-7  \n\n[Output truncated, continue with next request if all needed.]', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743428220, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=1869, prompt_tokens=855, total_tokens=2724, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:39:42,545 - INFO - Extracting text from page 4/5
2025-03-31 15:39:42,545 - DEBUG - Extracted text: | 36
Chemical
Relevant
CAS number(s)
Category
Perﬂ
2025-03-31 15:39:42,549 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 36\nChemical\nRelevant\nCAS number(s)\nCategory\nPerﬂuorooctanoic acid (PFOA), its salts \nand PFOA-related compounds***\n335-67-1\nIndustrial\nPolybrominated biphenyls (PBB)\n36355-01-8 (hexa-)\n27858-07-7 (octa-)\n13654-09-6 (deca-)\nIndustrial\nPolychlorinated biphenyls (PCB)\n1336-36-3\nIndustrial\nPolychlorinated terphenyls (PCT)\n61788-33-8\nIndustrial\nShort-chain chlorinated paraﬃns\n85535-84-8\nIndustrial\nTetraethyl lead\n78-00-2\nIndustrial\nTetramethyl lead\n75-74-1\nIndustrial\nTris (2,3-dibromopropyl) phosphate\n126-72-7\nIndustrial\nAll tributyltin compounds including: \n– Tributyltin oxide\n– Tributyltin ﬂuoride\n– Tributyltin methacrylate\n– Tributyltin benzoate\n– Tributyltin chloride\n– Tributyltin linoleate\n– Tributyltin naphthenate\n56-35-9\n1983-10-4\n2155-70-6\n4342-36-3\n1461-22-9\n24124-25-2\n85409-17-2\nPesticide/\nIndustrial**\n* \n Only the CAS numbers of parent compounds are listed. For a list of other relevant \nCAS numbers, reference may be made to the relevant decision guidance \ndocument.\n** \n All tributyltin compounds are listed in Annex III in both the industrial and \npesticide categories. These chemicals were initially listed in Annex III in the \npesticide category by decision RC-4/5, with the amendment entering into force \non 1 February 2009. Decision RC-8/5 subsequently amended Annex III to list all \ntributyltin compounds in the industrial category, with the amendment entering \ninto force on 15 September 2017.\n***  The following substances are included in this designation:\n– Perﬂuorooctanoic acid (PFOA) and its salts\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name (always a natural name) and CAS Number (always a number with 5-15 digits, might include "-").\n\nFormat your response as: Chemical Trade Name, CAS Number. Examples: \nMercury compounds, 71-43-2\nEthanol, 64-17-5\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:39:42,551 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:39:42,552 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:39:42,552 - DEBUG - send_request_headers.complete
2025-03-31 15:39:42,552 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:39:42,552 - DEBUG - send_request_body.complete
2025-03-31 15:39:42,552 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:40:13,118 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:40:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'29200'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124286'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'342ms'), (b'x-request-id', b'req_fe1f8724c78f1afb023feed76e343550'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9290411f4f85d348-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:40:13,120 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:40:13,120 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:40:13,121 - DEBUG - receive_response_body.complete
2025-03-31 15:40:13,121 - DEBUG - response_closed.started
2025-03-31 15:40:13,121 - DEBUG - response_closed.complete
2025-03-31 15:40:13,121 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:40:13 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '29200', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124286', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '342ms', 'x-request-id': 'req_fe1f8724c78f1afb023feed76e343550', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9290411f4f85d348-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:40:13,121 - DEBUG - request_id: req_fe1f8724c78f1afb023feed76e343550
2025-03-31 15:40:13,122 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9eZrspIAG0fxrORqHWmdFCcC6gF', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='Perfluorooctanoic acid (PFOA), its salts and PFOA-related compounds, 335-67-1  \nPolybrominated biphenyls (PBB) (hexa-), 36355-01-8  \nPolybrominated biphenyls (PBB) (octa-), 27858-07-7  \nPolybrominated biphenyls (PBB) (deca-), 13654-09-6  \nPolychlorinated biphenyls (PCB), 1336-36-3  \nPolychlorinated terphenyls (PCT), 61788-33-8  \nShort-chain chlorinated paraffins, 85535-84-8  \nTetraethyl lead, 78-00-2  \nTetramethyl lead, 75-74-1  \nTris (2,3-dibromopropyl) phosphate, 126-72-7  \nTributyltin oxide, 56-35-9  \nTributyltin fluoride, 1983-10-4  \nTributyltin methacrylate, 2155-70-6  \nTributyltin benzoate, 4342-36-3  \nTributyltin chloride, 1461-22-9  \nTributyltin linoleate, 24124-25-2  \nTributyltin naphthenate, 85409-17-2', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743428383, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=312, prompt_tokens=802, total_tokens=1114, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:40:13,128 - INFO - Extracting text from page 5/5
2025-03-31 15:40:13,128 - DEBUG - Extracted text: | 37
– Any related substance (including its salts 
2025-03-31 15:40:13,132 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 37\n– Any related substance (including its salts and polymers) having a linear or \nbranched perﬂuoroheptyl group with the formula C7F15- directly attached to \nanother carbon atom as one of the structural elements \n– Any related substance (including its salts and polymers) having a linear \nor branched perﬂuorooctyl group with the formula C8F17- as one of the \nstructural elements\nThe following substances are excluded from this designation: \n– C8F17-X, where X = F, Cl, Br\n– C8F17-C(=O)OH, C8F17-C(=O)O-X\' or C8F17-CF2-X\'  \n(where X\' = any group, including salts)\n– Perﬂuorooctane sulfonic acid (PFOS) and its derivatives  \n(C8F17SO2X (X = OH, metal salt (O-M+), halide, amide and  \nother derivatives including polymers)).\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name (always a natural name) and CAS Number (always a number with 5-15 digits, might include "-").\n\nFormat your response as: Chemical Trade Name, CAS Number. Examples: \nMercury compounds, 71-43-2\nEthanol, 64-17-5\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:40:13,133 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:40:13,134 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:40:13,134 - DEBUG - send_request_headers.complete
2025-03-31 15:40:13,134 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:40:13,134 - DEBUG - send_request_body.complete
2025-03-31 15:40:13,134 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:40:23,189 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:40:23 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'9537'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124488'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'245ms'), (b'x-request-id', b'req_b668f81a1da17d9a34b7069d42af8f65'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'929041de7e91d348-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:40:23,192 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:40:23,193 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:40:23,193 - DEBUG - receive_response_body.complete
2025-03-31 15:40:23,193 - DEBUG - response_closed.started
2025-03-31 15:40:23,193 - DEBUG - response_closed.complete
2025-03-31 15:40:23,193 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:40:23 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '9537', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124488', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '245ms', 'x-request-id': 'req_b668f81a1da17d9a34b7069d42af8f65', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '929041de7e91d348-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:40:23,193 - DEBUG - request_id: req_b668f81a1da17d9a34b7069d42af8f65
2025-03-31 15:40:23,195 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9f3YDhP9VWP2ISyGWcx1fWZQB3A', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='Perfluorooctane sulfonic acid, NA\n\nNote: No CAS numbers were provided explicitly in the supplied text for the listed substances except "Perfluorooctane sulfonic acid," which also does not have an associated CAS number explicitly presented. Following your instructions strictly, no CAS numbers have been given in the provided text, thus all CAS numbers are marked as "NA" accordingly.', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743428413, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=83, prompt_tokens=530, total_tokens=613, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:40:23,289 - INFO - Processed rotterdam.pdf and saved Excel file to ../data/processed/rotterdam.xlsx
2025-03-31 15:40:23,357 - DEBUG - close.started
2025-03-31 15:40:23,359 - DEBUG - close.complete
2025-03-31 15:46:00,288 - INFO - Script is running
2025-03-31 15:46:00,289 - INFO - Processing PDF file: rotterdam.pdf
2025-03-31 15:46:00,312 - INFO - Extracting text from page 1/5
2025-03-31 15:46:00,312 - DEBUG - Extracted text: | 33
ANNEX III 1 
CHEMICALS SUBJECT TO THE PRIOR I
2025-03-31 15:46:00,315 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 33\nANNEX III 1 \nCHEMICALS SUBJECT TO THE PRIOR INFORMED CONSENT PROCEDURE\nChemical\nRelevant\nCAS number(s)\nCategory\n2,4,5-T and its salts and esters\n93-76-5*\nPesticide\nAlachlor\n15972-60-8\nPesticide\nAldicarb\n116-06-3\nPesticide\nAldrin\n309-00-2\nPesticide\nAzinphos-methyl\n86-50-0\nPesticide\nBinapacryl\n485-31-4\nPesticide\nCaptafol\n2425-06-1\nPesticide\nCarbofuran\n1563-66-2\nPesticide\nChlordane\n57-74-9\nPesticide\nChlordimeform\n6164-98-3\nPesticide\nChlorobenzilate\n510-15-6\nPesticide\nDDT\n50-29-3\nPesticide\nDieldrin\n60-57-1\nPesticide\nDinitro-ortho-cresol (DNOC) and its salts \n(such as ammonium salt, potassium salt \nand sodium salt)\n534-52-1\n2980-64-5\n5787-96-2\n2312-76-7\nPesticide\nDinoseb and its salts and esters\n88-85-7*\nPesticide\n1,2-dibromoethane (EDB)\n106-93-4\nPesticide\nEndosulfan\n115-29-7\nPesticide\nEthylene dichloride\n107-06-2\nPesticide\nEthylene oxide\n75-21-8\nPesticide\nFluoroacetamide\n640-19-7\nPesticide\nHCH (mixed isomers)\n608-73-1\nPesticide\n1 \nAs amended by the Conference of the Parties by its decision RC-1/3 of 24 September 2004; RC-4/5 of  \n31 October 2008; RC-5/3, RC-5/4 and RC-5/5 of 24 June 2011; RC-6/4, RC-6/5, RC-6/6 and RC-6/7 of  \n10 May 2013; RC-7/4 of 15 May 2015; RC-8/2, RC-8/3, RC-8/4 and RC-8/5 of 5 May 2017; RC-9/3 and RC-9/4 \nof 10 May 2019; RC-10/6 and RC-10/7 of 17 June 2022; and RC-11/3 of 12 May 2023.\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number.\n\nChemical Names are natural words, such as "Fluoroacetamide", "Terbufos", "1,1,1,2-Tetrachloroethane", etc.\nCAS Numbers are unique identifiers for chemicals, such as "640-19-7", "13071-79-9", "630-20-6", etc. CAS Numbers never contain words.\n\nFormat your response as: Chemical Trade Name, CAS Number. Examples: \nMercury compounds, 71-43-2\nEthanol, 64-17-5\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n5. If the entire text does not contain any Chemical Trade Names or CAS Numbers, respond with "N/A,N/A". Never write full-text answers explaining yourself.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:46:00,342 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:46:00,343 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-03-31 15:46:00,423 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11524b290>
2025-03-31 15:46:00,423 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x120540b00> server_hostname='api.openai.com' timeout=5.0
2025-03-31 15:46:00,463 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x12055fa90>
2025-03-31 15:46:00,463 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:46:00,463 - DEBUG - send_request_headers.complete
2025-03-31 15:46:00,463 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:46:00,463 - DEBUG - send_request_body.complete
2025-03-31 15:46:00,463 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:46:38,165 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:46:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'37365'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124262'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'354ms'), (b'x-request-id', b'req_74d55eb5346a842756871f1ba02ab8c8'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=xig7cUXADswiVZIwNbapo907V5YwtQf74FBRnbiJawk-1743428798-1.0.1.1-a.2FCniF8m4elF8pkv5SqijBmB1BNh9T.Qrcck1hxBBBVX0CqwXMZh0y8JVGmxzKB36PxMfd87CcpAxmoMWFyHi2px.bk18LWAEpA9DJLGM; path=/; expires=Mon, 31-Mar-25 14:16:38 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=.BVlJ39hQICMA9rbX9WLzQtnHRRVsERSmWJZzNMqhuI-1743428798089-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92904a592e9fd3a2-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:46:38,170 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:46:38,170 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:46:38,171 - DEBUG - receive_response_body.complete
2025-03-31 15:46:38,171 - DEBUG - response_closed.started
2025-03-31 15:46:38,171 - DEBUG - response_closed.complete
2025-03-31 15:46:38,171 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Mon, 31 Mar 2025 13:46:38 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'master-thesis-chemical-rag'), ('openai-processing-ms', '37365'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '1000'), ('x-ratelimit-limit-tokens', '125000'), ('x-ratelimit-remaining-requests', '999'), ('x-ratelimit-remaining-tokens', '124262'), ('x-ratelimit-reset-requests', '60ms'), ('x-ratelimit-reset-tokens', '354ms'), ('x-request-id', 'req_74d55eb5346a842756871f1ba02ab8c8'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=xig7cUXADswiVZIwNbapo907V5YwtQf74FBRnbiJawk-1743428798-1.0.1.1-a.2FCniF8m4elF8pkv5SqijBmB1BNh9T.Qrcck1hxBBBVX0CqwXMZh0y8JVGmxzKB36PxMfd87CcpAxmoMWFyHi2px.bk18LWAEpA9DJLGM; path=/; expires=Mon, 31-Mar-25 14:16:38 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=.BVlJ39hQICMA9rbX9WLzQtnHRRVsERSmWJZzNMqhuI-1743428798089-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '92904a592e9fd3a2-FRA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-03-31 15:46:38,171 - DEBUG - request_id: req_74d55eb5346a842756871f1ba02ab8c8
2025-03-31 15:46:38,177 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9ke0bzd8CCt38k4uAPUztbS7Xcv', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='2,4,5-T and its salts and esters, 93-76-5  \nAlachlor, 15972-60-8  \nAldicarb, 116-06-3  \nAldrin, 309-00-2  \nAzinphos-methyl, 86-50-0  \nBinapacryl, 485-31-4  \nCaptafol, 2425-06-1  \nCarbofuran, 1563-66-2  \nChlordane, 57-74-9  \nChlordimeform, 6164-98-3  \nChlorobenzilate, 510-15-6  \nDDT, 50-29-3  \nDieldrin, 60-57-1  \nDinitro-ortho-cresol (DNOC) and its salts (such as ammonium salt, potassium salt and sodium salt), 534-52-1  \nDinitro-ortho-cresol (DNOC) and its salts (such as ammonium salt, potassium salt and sodium salt), 2980-64-5  \nDinitro-ortho-cresol (DNOC) and its salts (such as ammonium salt, potassium salt and sodium salt), 5787-96-2  \nDinitro-ortho-cresol (DNOC) and its salts (such as ammonium salt, potassium salt and sodium salt), 2312-76-7  \nDinoseb and its salts and esters, 88-85-7  \n1,2-dibromoethane (EDB), 106-93-4  \nEndosulfan, 115-29-7  \nEthylene dichloride, 107-06-2  \nEthylene oxide, 75-21-8  \nFluoroacetamide, 640-19-7  \nHCH (mixed isomers), 608-73-1', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743428760, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=410, prompt_tokens=1012, total_tokens=1422, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:46:38,189 - INFO - Extracting text from page 2/5
2025-03-31 15:46:38,189 - DEBUG - Extracted text: | 34
Chemical
Relevant
CAS number(s)
Category
Hept
2025-03-31 15:46:38,192 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 34\nChemical\nRelevant\nCAS number(s)\nCategory\nHeptachlor\n76-44-8\nPesticide\nHexachlorobenzene\n118-74-1\nPesticide\nLindane\n58-89-9\nPesticide\nMercury compounds, including inorganic \nmercury compounds, alkyl mercury \ncompounds and alkyloxyalkyl and aryl \nmercury compounds\nPesticide\nMethamidophos\n10265-92-6\nPesticide\nMonocrotophos\n6923-22-4\nPesticide\nParathion\n56-38-2\nPesticide\nPentachlorophenol and its salts and \nesters\n87-86-5*\nPesticide\nPhorate\n298-02-2\nPesticide\nTerbufos\n13071-79-9\nPesticide \nToxaphene\n8001-35-2\nPesticide\nTrichlorfon\n52-68-6\nPesticide\nDustable powder formulations containing \na combination of:\n– Benomyl at or above 7 per cent,\n– Carbofuran at or above 10 per cent, and\n– Thiram at or above 15 per cent\n17804-35-2\n1563-66-2\n137-26-8\nSeverely \nhazardous \npesticide \nformulation\nPhosphamidon\n(soluble liquid formulations of the \nsubstance that exceed 1,000 g active \ningredient/l)\n13171-21-6 (mixture, \n(E) & (Z) isomers)\n23783-98-4 ((Z)-\nisomer)\n297-99-4 ((E)-isomer)\nSeverely \nhazardous \npesticide \nformulation\nMethyl-parathion\n(emulsiﬁable concentrates (EC) at or \nabove 19.5% active ingredient and dusts \nat or above 1.5% active ingredient)\n298-00-0\nSeverely \nhazardous \npesticide \nformulation\nAsbestos:\n– Actinolite\n– Anthophyllite\n– Amosite\n– Crocidolite\n– Tremolite\n77536-66-4\n77536-67-5\n12172-73-5\n12001-28-4\n77536-68-6\nIndustrial\nIndustrial\nIndustrial\nIndustrial\nIndustrial\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number.\n\nChemical Names are natural words, such as "Fluoroacetamide", "Terbufos", "1,1,1,2-Tetrachloroethane", etc.\nCAS Numbers are unique identifiers for chemicals, such as "640-19-7", "13071-79-9", "630-20-6", etc. CAS Numbers never contain words.\n\nFormat your response as: Chemical Trade Name, CAS Number. Examples: \nMercury compounds, 71-43-2\nEthanol, 64-17-5\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n5. If the entire text does not contain any Chemical Trade Names or CAS Numbers, respond with "N/A,N/A". Never write full-text answers explaining yourself.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:46:38,193 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:46:38,193 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:46:38,194 - DEBUG - send_request_headers.complete
2025-03-31 15:46:38,194 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:46:38,194 - DEBUG - send_request_body.complete
2025-03-31 15:46:38,194 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:47:09,291 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:47:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'30854'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124111'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'426ms'), (b'x-request-id', b'req_35ba6492fa1a61bb06c1bfd125c1b539'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92904b44fd00d3a2-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:47:09,295 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:47:09,295 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:47:09,296 - DEBUG - receive_response_body.complete
2025-03-31 15:47:09,296 - DEBUG - response_closed.started
2025-03-31 15:47:09,296 - DEBUG - response_closed.complete
2025-03-31 15:47:09,296 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:47:09 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '30854', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124111', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '426ms', 'x-request-id': 'req_35ba6492fa1a61bb06c1bfd125c1b539', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92904b44fd00d3a2-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:47:09,297 - DEBUG - request_id: req_35ba6492fa1a61bb06c1bfd125c1b539
2025-03-31 15:47:09,298 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9lG9EdXh6lNYK1CNTC6UddxrS3Z', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='Heptachlor, 76-44-8  \nHexachlorobenzene, 118-74-1  \nLindane, 58-89-9  \nMercury compounds, NA  \nMethamidophos, 10265-92-6  \nMonocrotophos, 6923-22-4  \nParathion, 56-38-2  \nPentachlorophenol and its salts and esters, 87-86-5*  \nPhorate, 298-02-2  \nTerbufos, 13071-79-9  \nToxaphene, 8001-35-2  \nTrichlorfon, 52-68-6  \nBenomyl, 17804-35-2  \nCarbofuran, 1563-66-2  \nThiram, 137-26-8  \nPhosphamidon ((E) & (Z) isomers mixture), 13171-21-6  \nPhosphamidon ((Z)-isomer), 23783-98-4  \nPhosphamidon ((E)-isomer), 297-99-4  \nMethyl-parathion, 298-00-0  \nActinolite, 77536-66-4  \nAnthophyllite, 77536-67-5  \nAmosite, 12172-73-5  \nCrocidolite, 12001-28-4  \nTremolite, 77536-68-6', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743428798, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=315, prompt_tokens=927, total_tokens=1242, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:47:09,307 - INFO - Extracting text from page 3/5
2025-03-31 15:47:09,308 - DEBUG - Extracted text: | 35
Chemical
Relevant
CAS number(s)
Category
Comm
2025-03-31 15:47:09,311 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 35\nChemical\nRelevant\nCAS number(s)\nCategory\nCommercial octabromodiphenyl ether \nincluding:\n– Hexabromodiphenyl ether\n– Heptabromodiphenyl ether\n36483-60-0\n68928-80-3\nIndustrial\nCommercial pentabromodiphenyl ether\nincluding:\n– Tetrabromodiphenyl ether\n– Pentabromodiphenyl ether\n40088-47-9\n32534-81-9\nIndustrial\nDecabromodiphenyl ether\n1163-19-5\nIndustrial\nHexabromocyclododecane\n25637-99-4\n3194-55-6\n134237-50-6 \n134237-51-7\n134237-52-8\nIndustrial\nPerﬂuorooctane sulfonic acid,\nperﬂuorooctane sulfonates,\nperﬂuorooctane sulfonamides and \nperﬂuorooctane sulfonyls including:\n– Perﬂuorooctane sulfonic acid\n– Potassium perﬂuorooctane sulfonate \n– Lithium perﬂuorooctane sulfonate \n– Ammonium perﬂuorooctane sulfonate \n–  Diethanolammonium perﬂuorooctane \nsulfonate\n–  Tetraethylammonium perﬂuorooctane \nsulfonate\n–  Didecyldimethylammonium \nperﬂuorooctane sulfonate\n– N-Ethylperﬂuorooctane sulfonamide \n– N-Methylperﬂuorooctane sulfonamide \n–  N-Ethyl-N-(2-hydroxyethyl) \nperﬂuorooctane sulfonamide\n–  N-(2-hydroxyethyl)- \nN-methylperﬂuorooctane sulfonamide\n– Perﬂuorooctane sulfonyl ﬂuoride\n1763-23-1\n2795-39-3\n29457-72-5\n 29081-56-9\n70225-14-8\n56773-42-3\n251099-16-8\n4151-50-2\n31506-32-8\n1691-99-2\n24448-09-7\n307-35-7\nIndustrial\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number.\n\nChemical Names are natural words, such as "Fluoroacetamide", "Terbufos", "1,1,1,2-Tetrachloroethane", etc.\nCAS Numbers are unique identifiers for chemicals, such as "640-19-7", "13071-79-9", "630-20-6", etc. CAS Numbers never contain words.\n\nFormat your response as: Chemical Trade Name, CAS Number. Examples: \nMercury compounds, 71-43-2\nEthanol, 64-17-5\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n5. If the entire text does not contain any Chemical Trade Names or CAS Numbers, respond with "N/A,N/A". Never write full-text answers explaining yourself.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:47:09,311 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:47:09,312 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:47:09,312 - DEBUG - send_request_headers.complete
2025-03-31 15:47:09,312 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:47:09,312 - DEBUG - send_request_body.complete
2025-03-31 15:47:09,312 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:50:14,946 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:50:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'185406'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124271'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'349ms'), (b'x-request-id', b'req_fd64a81be72d28dc47370c3a9aa58233'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92904c077b5bd3a2-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:50:14,951 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:50:14,952 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:50:14,953 - DEBUG - receive_response_body.complete
2025-03-31 15:50:14,953 - DEBUG - response_closed.started
2025-03-31 15:50:14,953 - DEBUG - response_closed.complete
2025-03-31 15:50:14,953 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:50:14 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '185406', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124271', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '349ms', 'x-request-id': 'req_fd64a81be72d28dc47370c3a9aa58233', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92904c077b5bd3a2-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:50:14,953 - DEBUG - request_id: req_fd64a81be72d28dc47370c3a9aa58233
2025-03-31 15:50:14,955 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9llYsqMtMCE9tRkuSN1GsFOOido', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='Commercial octabromodiphenyl ether, 36483-60-0  \nCommercial octabromodiphenyl ether, 68928-80-3  \nHexabromodiphenyl ether, 36483-60-0  \nHexabromodiphenyl ether, 68928-80-3  \nHeptabromodiphenyl ether, 36483-60-0  \nHeptabromodiphenyl ether, 68928-80-3  \nCommercial pentabromodiphenyl ether, 40088-47-9  \nCommercial pentabromodiphenyl ether, 32534-81-9  \nTetrabromodiphenyl ether, 40088-47-9  \nTetrabromodiphenyl ether, 32534-81-9  \nPentabromodiphenyl ether, 40088-47-9  \nPentabromodiphenyl ether, 32534-81-9  \nDecabromodiphenyl ether, 1163-19-5  \nHexabromocyclododecane, 25637-99-4  \nHexabromocyclododecane, 3194-55-6  \nHexabromocyclododecane, 134237-50-6  \nHexabromocyclododecane, 134237-51-7  \nHexabromocyclododecane, 134237-52-8  \nPerfluorooctane sulfonic acid, 1763-23-1  \nPerfluorooctane sulfonic acid, 2795-39-3  \nPerfluorooctane sulfonic acid, 29457-72-5  \nPerfluorooctane sulfonic acid, 29081-56-9  \nPerfluorooctane sulfonic acid, 70225-14-8  \nPerfluorooctane sulfonic acid, 56773-42-3  \nPerfluorooctane sulfonic acid, 251099-16-8  \nPerfluorooctane sulfonic acid, 4151-50-2  \nPerfluorooctane sulfonic acid, 31506-32-8  \nPerfluorooctane sulfonic acid, 1691-99-2  \nPerfluorooctane sulfonic acid, 24448-09-7  \nPerfluorooctane sulfonic acid, 307-35-7  \nPotassium perfluorooctane sulfonate, 1763-23-1  \nPotassium perfluorooctane sulfonate, 2795-39-3  \nPotassium perfluorooctane sulfonate, 29457-72-5  \nPotassium perfluorooctane sulfonate, 29081-56-9  \nPotassium perfluorooctane sulfonate, 70225-14-8  \nPotassium perfluorooctane sulfonate, 56773-42-3  \nPotassium perfluorooctane sulfonate, 251099-16-8  \nPotassium perfluorooctane sulfonate, 4151-50-2  \nPotassium perfluorooctane sulfonate, 31506-32-8  \nPotassium perfluorooctane sulfonate, 1691-99-2  \nPotassium perfluorooctane sulfonate, 24448-09-7  \nPotassium perfluorooctane sulfonate, 307-35-7  \nLithium perfluorooctane sulfonate, 1763-23-1  \nLithium perfluorooctane sulfonate, 2795-39-3  \nLithium perfluorooctane sulfonate, 29457-72-5  \nLithium perfluorooctane sulfonate, 29081-56-9  \nLithium perfluorooctane sulfonate, 70225-14-8  \nLithium perfluorooctane sulfonate, 56773-42-3  \nLithium perfluorooctane sulfonate, 251099-16-8  \nLithium perfluorooctane sulfonate, 4151-50-2  \nLithium perfluorooctane sulfonate, 31506-32-8  \nLithium perfluorooctane sulfonate, 1691-99-2  \nLithium perfluorooctane sulfonate, 24448-09-7  \nLithium perfluorooctane sulfonate, 307-35-7  \nAmmonium perfluorooctane sulfonate, 1763-23-1  \nAmmonium perfluorooctane sulfonate, 2795-39-3  \nAmmonium perfluorooctane sulfonate, 29457-72-5  \nAmmonium perfluorooctane sulfonate, 29081-56-9  \nAmmonium perfluorooctane sulfonate, 70225-14-8  \nAmmonium perfluorooctane sulfonate, 56773-42-3  \nAmmonium perfluorooctane sulfonate, 251099-16-8  \nAmmonium perfluorooctane sulfonate, 4151-50-2  \nAmmonium perfluorooctane sulfonate, 31506-32-8  \nAmmonium perfluorooctane sulfonate, 1691-99-2  \nAmmonium perfluorooctane sulfonate, 24448-09-7  \nAmmonium perfluorooctane sulfonate, 307-35-7  \nDiethanolammonium perfluorooctane sulfonate, 1763-23-1  \nDiethanolammonium perfluorooctane sulfonate, 2795-39-3  \nDiethanolammonium perfluorooctane sulfonate, 29457-72-5  \nDiethanolammonium perfluorooctane sulfonate, 29081-56-9  \nDiethanolammonium perfluorooctane sulfonate, 70225-14-8  \nDiethanolammonium perfluorooctane sulfonate, 56773-42-3  \nDiethanolammonium perfluorooctane sulfonate, 251099-16-8  \nDiethanolammonium perfluorooctane sulfonate, 4151-50-2  \nDiethanolammonium perfluorooctane sulfonate, 31506-32-8  \nDiethanolammonium perfluorooctane sulfonate, 1691-99-2  \nDiethanolammonium perfluorooctane sulfonate, 24448-09-7  \nDiethanolammonium perfluorooctane sulfonate, 307-35-7  \nTetraethylammonium perfluorooctane sulfonate, 1763-23-1  \nTetraethylammonium perfluorooctane sulfonate, 2795-39-3  \nTetraethylammonium perfluorooctane sulfonate, 29457-72-5  \nTetraethylammonium perfluorooctane sulfonate, 29081-56-9  \nTetraethylammonium perfluorooctane sulfonate, 70225-14-8  \nTetraethylammonium perfluorooctane sulfonate, 56773-42-3  \nTetraethylammonium perfluorooctane sulfonate, 251099-16-8  \nTetraethylammonium perfluorooctane sulfonate, 4151-50-2  \nTetraethylammonium perfluorooctane sulfonate, 31506-32-8  \nTetraethylammonium perfluorooctane sulfonate, 1691-99-2  \nTetraethylammonium perfluorooctane sulfonate, 24448-09-7  \nTetraethylammonium perfluorooctane sulfonate, 307-35-7  \nN-Ethylperfluorooctane sulfonamide, 4151-50-2  \nN-Methylperfluorooctane sulfonamide, 31506-32-8  \nPerfluorooctane sulfonyl fluoride, 307-35-7  \nDidecyldimethylammonium perfluorooctane sulfonate, 251099-16-8', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743428829, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=1937, prompt_tokens=946, total_tokens=2883, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:50:14,971 - INFO - Extracting text from page 4/5
2025-03-31 15:50:14,971 - DEBUG - Extracted text: | 36
Chemical
Relevant
CAS number(s)
Category
Perﬂ
2025-03-31 15:50:14,974 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 36\nChemical\nRelevant\nCAS number(s)\nCategory\nPerﬂuorooctanoic acid (PFOA), its salts \nand PFOA-related compounds***\n335-67-1\nIndustrial\nPolybrominated biphenyls (PBB)\n36355-01-8 (hexa-)\n27858-07-7 (octa-)\n13654-09-6 (deca-)\nIndustrial\nPolychlorinated biphenyls (PCB)\n1336-36-3\nIndustrial\nPolychlorinated terphenyls (PCT)\n61788-33-8\nIndustrial\nShort-chain chlorinated paraﬃns\n85535-84-8\nIndustrial\nTetraethyl lead\n78-00-2\nIndustrial\nTetramethyl lead\n75-74-1\nIndustrial\nTris (2,3-dibromopropyl) phosphate\n126-72-7\nIndustrial\nAll tributyltin compounds including: \n– Tributyltin oxide\n– Tributyltin ﬂuoride\n– Tributyltin methacrylate\n– Tributyltin benzoate\n– Tributyltin chloride\n– Tributyltin linoleate\n– Tributyltin naphthenate\n56-35-9\n1983-10-4\n2155-70-6\n4342-36-3\n1461-22-9\n24124-25-2\n85409-17-2\nPesticide/\nIndustrial**\n* \n Only the CAS numbers of parent compounds are listed. For a list of other relevant \nCAS numbers, reference may be made to the relevant decision guidance \ndocument.\n** \n All tributyltin compounds are listed in Annex III in both the industrial and \npesticide categories. These chemicals were initially listed in Annex III in the \npesticide category by decision RC-4/5, with the amendment entering into force \non 1 February 2009. Decision RC-8/5 subsequently amended Annex III to list all \ntributyltin compounds in the industrial category, with the amendment entering \ninto force on 15 September 2017.\n***  The following substances are included in this designation:\n– Perﬂuorooctanoic acid (PFOA) and its salts\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number.\n\nChemical Names are natural words, such as "Fluoroacetamide", "Terbufos", "1,1,1,2-Tetrachloroethane", etc.\nCAS Numbers are unique identifiers for chemicals, such as "640-19-7", "13071-79-9", "630-20-6", etc. CAS Numbers never contain words.\n\nFormat your response as: Chemical Trade Name, CAS Number. Examples: \nMercury compounds, 71-43-2\nEthanol, 64-17-5\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n5. If the entire text does not contain any Chemical Trade Names or CAS Numbers, respond with "N/A,N/A". Never write full-text answers explaining yourself.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:50:14,975 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:50:14,975 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:50:14,975 - DEBUG - send_request_headers.complete
2025-03-31 15:50:14,975 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:50:14,975 - DEBUG - send_request_body.complete
2025-03-31 15:50:14,975 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:50:43,823 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:50:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'28622'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'122513'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'1.193s'), (b'x-request-id', b'req_c8013ba69bde615c46b41a4addc53d16'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9290508fdaa4d3a2-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:50:43,827 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:50:43,827 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:50:43,827 - DEBUG - receive_response_body.complete
2025-03-31 15:50:43,828 - DEBUG - response_closed.started
2025-03-31 15:50:43,828 - DEBUG - response_closed.complete
2025-03-31 15:50:43,828 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:50:43 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '28622', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '122513', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '1.193s', 'x-request-id': 'req_c8013ba69bde615c46b41a4addc53d16', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9290508fdaa4d3a2-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:50:43,828 - DEBUG - request_id: req_c8013ba69bde615c46b41a4addc53d16
2025-03-31 15:50:43,830 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9ol0fGExqw2rKNi3FotuSv9PWUb', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='Perfluorooctanoic acid (PFOA), 335-67-1  \nPolybrominated biphenyls (hexa-), 36355-01-8  \nPolybrominated biphenyls (octa-), 27858-07-7  \nPolybrominated biphenyls (deca-), 13654-09-6  \nPolychlorinated biphenyls (PCB), 1336-36-3  \nPolychlorinated terphenyls (PCT), 61788-33-8  \nShort-chain chlorinated paraffins, 85535-84-8  \nTetraethyl lead, 78-00-2  \nTetramethyl lead, 75-74-1  \nTris (2,3-dibromopropyl) phosphate, 126-72-7  \nTributyltin oxide, 56-35-9  \nTributyltin fluoride, 1983-10-4  \nTributyltin methacrylate, 2155-70-6  \nTributyltin benzoate, 4342-36-3  \nTributyltin chloride, 1461-22-9  \nTributyltin linoleate, 24124-25-2  \nTributyltin naphthenate, 85409-17-2', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743429015, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=291, prompt_tokens=893, total_tokens=1184, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:50:43,838 - INFO - Extracting text from page 5/5
2025-03-31 15:50:43,838 - DEBUG - Extracted text: | 37
– Any related substance (including its salts 
2025-03-31 15:50:43,841 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 37\n– Any related substance (including its salts and polymers) having a linear or \nbranched perﬂuoroheptyl group with the formula C7F15- directly attached to \nanother carbon atom as one of the structural elements \n– Any related substance (including its salts and polymers) having a linear \nor branched perﬂuorooctyl group with the formula C8F17- as one of the \nstructural elements\nThe following substances are excluded from this designation: \n– C8F17-X, where X = F, Cl, Br\n– C8F17-C(=O)OH, C8F17-C(=O)O-X\' or C8F17-CF2-X\'  \n(where X\' = any group, including salts)\n– Perﬂuorooctane sulfonic acid (PFOS) and its derivatives  \n(C8F17SO2X (X = OH, metal salt (O-M+), halide, amide and  \nother derivatives including polymers)).\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number.\n\nChemical Names are natural words, such as "Fluoroacetamide", "Terbufos", "1,1,1,2-Tetrachloroethane", etc.\nCAS Numbers are unique identifiers for chemicals, such as "640-19-7", "13071-79-9", "630-20-6", etc. CAS Numbers never contain words.\n\nFormat your response as: Chemical Trade Name, CAS Number. Examples: \nMercury compounds, 71-43-2\nEthanol, 64-17-5\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n5. If the entire text does not contain any Chemical Trade Names or CAS Numbers, respond with "N/A,N/A". Never write full-text answers explaining yourself.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:50:43,843 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:50:43,843 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:50:43,844 - DEBUG - send_request_headers.complete
2025-03-31 15:50:43,844 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:50:43,844 - DEBUG - send_request_body.complete
2025-03-31 15:50:43,844 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:50:45,256 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:50:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'1134'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124410'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'283ms'), (b'x-request-id', b'req_baabc48e63aa5638493c8efa26afd526'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'929051444a1cd3a2-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:50:45,258 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:50:45,258 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:50:45,259 - DEBUG - receive_response_body.complete
2025-03-31 15:50:45,259 - DEBUG - response_closed.started
2025-03-31 15:50:45,259 - DEBUG - response_closed.complete
2025-03-31 15:50:45,260 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:50:45 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '1134', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124410', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '283ms', 'x-request-id': 'req_baabc48e63aa5638493c8efa26afd526', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '929051444a1cd3a2-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:50:45,261 - DEBUG - request_id: req_baabc48e63aa5638493c8efa26afd526
2025-03-31 15:50:45,262 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9pEu4KX0z4BxWQM8PlHLWLMXQ2j', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='N/A,N/A', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743429044, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=5, prompt_tokens=621, total_tokens=626, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:50:45,359 - INFO - Processed rotterdam.pdf and saved Excel file to ../data/processed/rotterdam.xlsx
2025-03-31 15:50:45,433 - DEBUG - close.started
2025-03-31 15:50:45,433 - DEBUG - close.complete
2025-03-31 15:52:41,520 - INFO - Script is running
2025-03-31 15:52:41,520 - INFO - Processing PDF file: rotterdam.pdf
2025-03-31 15:52:41,538 - INFO - Extracting text from page 1/5
2025-03-31 15:52:41,539 - DEBUG - Extracted text: | 33
ANNEX III 1 
CHEMICALS SUBJECT TO THE PRIOR I
2025-03-31 15:52:41,541 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 33\nANNEX III 1 \nCHEMICALS SUBJECT TO THE PRIOR INFORMED CONSENT PROCEDURE\nChemical\nRelevant\nCAS number(s)\nCategory\n2,4,5-T and its salts and esters\n93-76-5*\nPesticide\nAlachlor\n15972-60-8\nPesticide\nAldicarb\n116-06-3\nPesticide\nAldrin\n309-00-2\nPesticide\nAzinphos-methyl\n86-50-0\nPesticide\nBinapacryl\n485-31-4\nPesticide\nCaptafol\n2425-06-1\nPesticide\nCarbofuran\n1563-66-2\nPesticide\nChlordane\n57-74-9\nPesticide\nChlordimeform\n6164-98-3\nPesticide\nChlorobenzilate\n510-15-6\nPesticide\nDDT\n50-29-3\nPesticide\nDieldrin\n60-57-1\nPesticide\nDinitro-ortho-cresol (DNOC) and its salts \n(such as ammonium salt, potassium salt \nand sodium salt)\n534-52-1\n2980-64-5\n5787-96-2\n2312-76-7\nPesticide\nDinoseb and its salts and esters\n88-85-7*\nPesticide\n1,2-dibromoethane (EDB)\n106-93-4\nPesticide\nEndosulfan\n115-29-7\nPesticide\nEthylene dichloride\n107-06-2\nPesticide\nEthylene oxide\n75-21-8\nPesticide\nFluoroacetamide\n640-19-7\nPesticide\nHCH (mixed isomers)\n608-73-1\nPesticide\n1 \nAs amended by the Conference of the Parties by its decision RC-1/3 of 24 September 2004; RC-4/5 of  \n31 October 2008; RC-5/3, RC-5/4 and RC-5/5 of 24 June 2011; RC-6/4, RC-6/5, RC-6/6 and RC-6/7 of  \n10 May 2013; RC-7/4 of 15 May 2015; RC-8/2, RC-8/3, RC-8/4 and RC-8/5 of 5 May 2017; RC-9/3 and RC-9/4 \nof 10 May 2019; RC-10/6 and RC-10/7 of 17 June 2022; and RC-11/3 of 12 May 2023.\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number.\n\nChemical Names are natural words, such as "Fluoroacetamide", "1,1,1,2-Tetrachloroethane", "2,4,5-T and its salts and esters", "1,2-dibromoethane (EDB) " etc.\nCAS Numbers are unique identifiers for chemicals, such as "640-19-7", "13071-79-9", "630-20-6", etc. CAS Numbers never contain words.\n\nFormat your response as: Chemical Trade Name, CAS Number. Examples: \nMercury compounds, 71-43-2\nEthanol, 64-17-5\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n5. If the entire text does not contain any Chemical Trade Names or CAS Numbers, respond with "N/A,N/A". Never write full-text answers explaining yourself.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:52:41,560 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:52:41,561 - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-03-31 15:52:41,652 - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10f5b8d90>
2025-03-31 15:52:41,652 - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x10f570b00> server_hostname='api.openai.com' timeout=5.0
2025-03-31 15:52:41,694 - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10e5c6590>
2025-03-31 15:52:41,694 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:52:41,694 - DEBUG - send_request_headers.complete
2025-03-31 15:52:41,694 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:52:41,694 - DEBUG - send_request_body.complete
2025-03-31 15:52:41,694 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:53:19,684 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:53:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'37703'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124249'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'360ms'), (b'x-request-id', b'req_d653afcc4e51db859c0d18430c2f5491'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=jATuVIDUz2plxpESmPPZj9vxrEJsEXormX1bla..c4k-1743429199-1.0.1.1-WvqdO8Ra28qRaKRRs8zmBNDiaL0CBoqlkkDcfTDxdhEzLWS2tV9rf5nJceQAlm0MqnwRnt5uKBsg0GKnJ1MUo4A1kCI_GfRM.7.1jOMS0tw; path=/; expires=Mon, 31-Mar-25 14:23:19 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=Rs5a_qlFokb6JttOQF4GuEUmlHysAUORwabQowO4fHo-1743429199614-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92905424dc471e6c-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:53:19,690 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:53:19,690 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:53:19,691 - DEBUG - receive_response_body.complete
2025-03-31 15:53:19,691 - DEBUG - response_closed.started
2025-03-31 15:53:19,691 - DEBUG - response_closed.complete
2025-03-31 15:53:19,692 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Mon, 31 Mar 2025 13:53:19 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'master-thesis-chemical-rag'), ('openai-processing-ms', '37703'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '1000'), ('x-ratelimit-limit-tokens', '125000'), ('x-ratelimit-remaining-requests', '999'), ('x-ratelimit-remaining-tokens', '124249'), ('x-ratelimit-reset-requests', '60ms'), ('x-ratelimit-reset-tokens', '360ms'), ('x-request-id', 'req_d653afcc4e51db859c0d18430c2f5491'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=jATuVIDUz2plxpESmPPZj9vxrEJsEXormX1bla..c4k-1743429199-1.0.1.1-WvqdO8Ra28qRaKRRs8zmBNDiaL0CBoqlkkDcfTDxdhEzLWS2tV9rf5nJceQAlm0MqnwRnt5uKBsg0GKnJ1MUo4A1kCI_GfRM.7.1jOMS0tw; path=/; expires=Mon, 31-Mar-25 14:23:19 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=Rs5a_qlFokb6JttOQF4GuEUmlHysAUORwabQowO4fHo-1743429199614-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '92905424dc471e6c-FRA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-03-31 15:53:19,692 - DEBUG - request_id: req_d653afcc4e51db859c0d18430c2f5491
2025-03-31 15:53:19,702 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9r7hz1Wm81RFIWXb6e4xwuAe5Bw', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='2,4,5-T and its salts and esters, 93-76-5  \nAlachlor, 15972-60-8  \nAldicarb, 116-06-3  \nAldrin, 309-00-2  \nAzinphos-methyl, 86-50-0  \nBinapacryl, 485-31-4  \nCaptafol, 2425-06-1  \nCarbofuran, 1563-66-2  \nChlordane, 57-74-9  \nChlordimeform, 6164-98-3  \nChlorobenzilate, 510-15-6  \nDDT, 50-29-3  \nDieldrin, 60-57-1  \nDinitro-ortho-cresol (DNOC) and its salts (such as ammonium salt, potassium salt and sodium salt), 534-52-1  \nDinitro-ortho-cresol (DNOC) and its salts (such as ammonium salt, potassium salt and sodium salt), 2980-64-5  \nDinitro-ortho-cresol (DNOC) and its salts (such as ammonium salt, potassium salt and sodium salt), 5787-96-2  \nDinitro-ortho-cresol (DNOC) and its salts (such as ammonium salt, potassium salt and sodium salt), 2312-76-7  \nDinoseb and its salts and esters, 88-85-7  \n1,2-dibromoethane (EDB), 106-93-4  \nEndosulfan, 115-29-7  \nEthylene dichloride, 107-06-2  \nEthylene oxide, 75-21-8  \nFluoroacetamide, 640-19-7  \nHCH (mixed isomers), 608-73-1', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743429161, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=410, prompt_tokens=1035, total_tokens=1445, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:53:19,715 - INFO - Extracting text from page 2/5
2025-03-31 15:53:19,715 - DEBUG - Extracted text: | 34
Chemical
Relevant
CAS number(s)
Category
Hept
2025-03-31 15:53:19,720 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 34\nChemical\nRelevant\nCAS number(s)\nCategory\nHeptachlor\n76-44-8\nPesticide\nHexachlorobenzene\n118-74-1\nPesticide\nLindane\n58-89-9\nPesticide\nMercury compounds, including inorganic \nmercury compounds, alkyl mercury \ncompounds and alkyloxyalkyl and aryl \nmercury compounds\nPesticide\nMethamidophos\n10265-92-6\nPesticide\nMonocrotophos\n6923-22-4\nPesticide\nParathion\n56-38-2\nPesticide\nPentachlorophenol and its salts and \nesters\n87-86-5*\nPesticide\nPhorate\n298-02-2\nPesticide\nTerbufos\n13071-79-9\nPesticide \nToxaphene\n8001-35-2\nPesticide\nTrichlorfon\n52-68-6\nPesticide\nDustable powder formulations containing \na combination of:\n– Benomyl at or above 7 per cent,\n– Carbofuran at or above 10 per cent, and\n– Thiram at or above 15 per cent\n17804-35-2\n1563-66-2\n137-26-8\nSeverely \nhazardous \npesticide \nformulation\nPhosphamidon\n(soluble liquid formulations of the \nsubstance that exceed 1,000 g active \ningredient/l)\n13171-21-6 (mixture, \n(E) & (Z) isomers)\n23783-98-4 ((Z)-\nisomer)\n297-99-4 ((E)-isomer)\nSeverely \nhazardous \npesticide \nformulation\nMethyl-parathion\n(emulsiﬁable concentrates (EC) at or \nabove 19.5% active ingredient and dusts \nat or above 1.5% active ingredient)\n298-00-0\nSeverely \nhazardous \npesticide \nformulation\nAsbestos:\n– Actinolite\n– Anthophyllite\n– Amosite\n– Crocidolite\n– Tremolite\n77536-66-4\n77536-67-5\n12172-73-5\n12001-28-4\n77536-68-6\nIndustrial\nIndustrial\nIndustrial\nIndustrial\nIndustrial\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number.\n\nChemical Names are natural words, such as "Fluoroacetamide", "1,1,1,2-Tetrachloroethane", "2,4,5-T and its salts and esters", "1,2-dibromoethane (EDB) " etc.\nCAS Numbers are unique identifiers for chemicals, such as "640-19-7", "13071-79-9", "630-20-6", etc. CAS Numbers never contain words.\n\nFormat your response as: Chemical Trade Name, CAS Number. Examples: \nMercury compounds, 71-43-2\nEthanol, 64-17-5\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n5. If the entire text does not contain any Chemical Trade Names or CAS Numbers, respond with "N/A,N/A". Never write full-text answers explaining yourself.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:53:19,723 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:53:19,723 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:53:19,724 - DEBUG - send_request_headers.complete
2025-03-31 15:53:19,724 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:53:19,724 - DEBUG - send_request_body.complete
2025-03-31 15:53:19,724 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:53:56,400 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:53:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'36333'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124226'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'371ms'), (b'x-request-id', b'req_b4cf31f2899002a7b98f073b610936b7'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9290551288091e6c-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:53:56,402 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:53:56,402 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:53:56,412 - DEBUG - receive_response_body.complete
2025-03-31 15:53:56,413 - DEBUG - response_closed.started
2025-03-31 15:53:56,413 - DEBUG - response_closed.complete
2025-03-31 15:53:56,413 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:53:56 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '36333', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124226', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '371ms', 'x-request-id': 'req_b4cf31f2899002a7b98f073b610936b7', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9290551288091e6c-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:53:56,413 - DEBUG - request_id: req_b4cf31f2899002a7b98f073b610936b7
2025-03-31 15:53:56,413 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9rkfBt3Rbokc5sQQ6Bs7IoCGtPv', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='Heptachlor, 76-44-8  \nHexachlorobenzene, 118-74-1  \nLindane, 58-89-9  \nMercury compounds, NA  \nMethamidophos, 10265-92-6  \nMonocrotophos, 6923-22-4  \nParathion, 56-38-2  \nPentachlorophenol and its salts and esters, 87-86-5  \nPhorate, 298-02-2  \nTerbufos, 13071-79-9  \nToxaphene, 8001-35-2  \nTrichlorfon, 52-68-6  \nBenomyl, 17804-35-2  \nCarbofuran, 1563-66-2  \nThiram, 137-26-8  \nPhosphamidon (mixture, (E) & (Z) isomers), 13171-21-6  \nPhosphamidon ((Z)-isomer), 23783-98-4  \nPhosphamidon ((E)-isomer), 297-99-4  \nMethyl-parathion, 298-00-0  \nAsbestos (Actinolite), 77536-66-4  \nAsbestos (Anthophyllite), 77536-67-5  \nAsbestos (Amosite), 12172-73-5  \nAsbestos (Crocidolite), 12001-28-4  \nAsbestos (Tremolite), 77536-68-6', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743429200, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=332, prompt_tokens=950, total_tokens=1282, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:53:56,418 - INFO - Extracting text from page 3/5
2025-03-31 15:53:56,418 - DEBUG - Extracted text: | 35
Chemical
Relevant
CAS number(s)
Category
Comm
2025-03-31 15:53:56,419 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 35\nChemical\nRelevant\nCAS number(s)\nCategory\nCommercial octabromodiphenyl ether \nincluding:\n– Hexabromodiphenyl ether\n– Heptabromodiphenyl ether\n36483-60-0\n68928-80-3\nIndustrial\nCommercial pentabromodiphenyl ether\nincluding:\n– Tetrabromodiphenyl ether\n– Pentabromodiphenyl ether\n40088-47-9\n32534-81-9\nIndustrial\nDecabromodiphenyl ether\n1163-19-5\nIndustrial\nHexabromocyclododecane\n25637-99-4\n3194-55-6\n134237-50-6 \n134237-51-7\n134237-52-8\nIndustrial\nPerﬂuorooctane sulfonic acid,\nperﬂuorooctane sulfonates,\nperﬂuorooctane sulfonamides and \nperﬂuorooctane sulfonyls including:\n– Perﬂuorooctane sulfonic acid\n– Potassium perﬂuorooctane sulfonate \n– Lithium perﬂuorooctane sulfonate \n– Ammonium perﬂuorooctane sulfonate \n–  Diethanolammonium perﬂuorooctane \nsulfonate\n–  Tetraethylammonium perﬂuorooctane \nsulfonate\n–  Didecyldimethylammonium \nperﬂuorooctane sulfonate\n– N-Ethylperﬂuorooctane sulfonamide \n– N-Methylperﬂuorooctane sulfonamide \n–  N-Ethyl-N-(2-hydroxyethyl) \nperﬂuorooctane sulfonamide\n–  N-(2-hydroxyethyl)- \nN-methylperﬂuorooctane sulfonamide\n– Perﬂuorooctane sulfonyl ﬂuoride\n1763-23-1\n2795-39-3\n29457-72-5\n 29081-56-9\n70225-14-8\n56773-42-3\n251099-16-8\n4151-50-2\n31506-32-8\n1691-99-2\n24448-09-7\n307-35-7\nIndustrial\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number.\n\nChemical Names are natural words, such as "Fluoroacetamide", "1,1,1,2-Tetrachloroethane", "2,4,5-T and its salts and esters", "1,2-dibromoethane (EDB) " etc.\nCAS Numbers are unique identifiers for chemicals, such as "640-19-7", "13071-79-9", "630-20-6", etc. CAS Numbers never contain words.\n\nFormat your response as: Chemical Trade Name, CAS Number. Examples: \nMercury compounds, 71-43-2\nEthanol, 64-17-5\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n5. If the entire text does not contain any Chemical Trade Names or CAS Numbers, respond with "N/A,N/A". Never write full-text answers explaining yourself.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:53:56,420 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:53:56,420 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:53:56,420 - DEBUG - send_request_headers.complete
2025-03-31 15:53:56,420 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:53:56,420 - DEBUG - send_request_body.complete
2025-03-31 15:53:56,420 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:56:54,728 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:56:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'178043'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124152'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'406ms'), (b'x-request-id', b'req_943af7bdeafa3b830cdf60857668060a'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'929055f7eaaa1e6c-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:56:54,733 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:56:54,735 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:56:54,736 - DEBUG - receive_response_body.complete
2025-03-31 15:56:54,737 - DEBUG - response_closed.started
2025-03-31 15:56:54,737 - DEBUG - response_closed.complete
2025-03-31 15:56:54,738 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:56:54 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '178043', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124152', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '406ms', 'x-request-id': 'req_943af7bdeafa3b830cdf60857668060a', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '929055f7eaaa1e6c-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:56:54,738 - DEBUG - request_id: req_943af7bdeafa3b830cdf60857668060a
2025-03-31 15:56:54,742 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9sKNEFjYzg2QkYM2H7wx4ps6PJc', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='Commercial octabromodiphenyl ether, 36483-60-0  \nCommercial octabromodiphenyl ether, 68928-80-3  \nHexabromodiphenyl ether, 36483-60-0  \nHexabromodiphenyl ether, 68928-80-3  \nHeptabromodiphenyl ether, 36483-60-0  \nHeptabromodiphenyl ether, 68928-80-3  \nCommercial pentabromodiphenyl ether, 40088-47-9  \nCommercial pentabromodiphenyl ether, 32534-81-9  \nTetrabromodiphenyl ether, 40088-47-9  \nTetrabromodiphenyl ether, 32534-81-9  \nPentabromodiphenyl ether, 40088-47-9  \nPentabromodiphenyl ether, 32534-81-9  \nDecabromodiphenyl ether, 1163-19-5  \nHexabromocyclododecane, 25637-99-4  \nHexabromocyclododecane, 3194-55-6  \nHexabromocyclododecane, 134237-50-6  \nHexabromocyclododecane, 134237-51-7  \nHexabromocyclododecane, 134237-52-8  \nPerfluorooctane sulfonic acid, 1763-23-1  \nPerfluorooctane sulfonic acid, 2795-39-3  \nPerfluorooctane sulfonic acid, 29457-72-5  \nPerfluorooctane sulfonic acid, 29081-56-9  \nPerfluorooctane sulfonic acid, 70225-14-8  \nPerfluorooctane sulfonic acid, 56773-42-3  \nPerfluorooctane sulfonic acid, 251099-16-8  \nPerfluorooctane sulfonic acid, 4151-50-2  \nPerfluorooctane sulfonic acid, 31506-32-8  \nPerfluorooctane sulfonic acid, 1691-99-2  \nPerfluorooctane sulfonic acid, 24448-09-7  \nPerfluorooctane sulfonic acid, 307-35-7  \nPotassium perfluorooctane sulfonate, 1763-23-1  \nPotassium perfluorooctane sulfonate, 2795-39-3  \nPotassium perfluorooctane sulfonate, 29457-72-5  \nPotassium perfluorooctane sulfonate, 29081-56-9  \nPotassium perfluorooctane sulfonate, 70225-14-8  \nPotassium perfluorooctane sulfonate, 56773-42-3  \nPotassium perfluorooctane sulfonate, 251099-16-8  \nPotassium perfluorooctane sulfonate, 4151-50-2  \nPotassium perfluorooctane sulfonate, 31506-32-8  \nPotassium perfluorooctane sulfonate, 1691-99-2  \nPotassium perfluorooctane sulfonate, 24448-09-7  \nPotassium perfluorooctane sulfonate, 307-35-7  \nLithium perfluorooctane sulfonate, 1763-23-1  \nLithium perfluorooctane sulfonate, 2795-39-3  \nLithium perfluorooctane sulfonate, 29457-72-5  \nLithium perfluorooctane sulfonate, 29081-56-9  \nLithium perfluorooctane sulfonate, 70225-14-8  \nLithium perfluorooctane sulfonate, 56773-42-3  \nLithium perfluorooctane sulfonate, 251099-16-8  \nLithium perfluorooctane sulfonate, 4151-50-2  \nLithium perfluorooctane sulfonate, 31506-32-8  \nLithium perfluorooctane sulfonate, 1691-99-2  \nLithium perfluorooctane sulfonate, 24448-09-7  \nLithium perfluorooctane sulfonate, 307-35-7  \nAmmonium perfluorooctane sulfonate, 1763-23-1  \nAmmonium perfluorooctane sulfonate, 2795-39-3  \nAmmonium perfluorooctane sulfonate, 29457-72-5  \nAmmonium perfluorooctane sulfonate, 29081-56-9  \nAmmonium perfluorooctane sulfonate, 70225-14-8  \nAmmonium perfluorooctane sulfonate, 56773-42-3  \nAmmonium perfluorooctane sulfonate, 251099-16-8  \nAmmonium perfluorooctane sulfonate, 4151-50-2  \nAmmonium perfluorooctane sulfonate, 31506-32-8  \nAmmonium perfluorooctane sulfonate, 1691-99-2  \nAmmonium perfluorooctane sulfonate, 24448-09-7  \nAmmonium perfluorooctane sulfonate, 307-35-7  \nDiethanolammonium perfluorooctane sulfonate, 1763-23-1  \nDiethanolammonium perfluorooctane sulfonate, 2795-39-3  \nDiethanolammonium perfluorooctane sulfonate, 29457-72-5  \nDiethanolammonium perfluorooctane sulfonate, 29081-56-9  \nDiethanolammonium perfluorooctane sulfonate, 70225-14-8  \nDiethanolammonium perfluorooctane sulfonate, 56773-42-3  \nDiethanolammonium perfluorooctane sulfonate, 251099-16-8  \nDiethanolammonium perfluorooctane sulfonate, 4151-50-2  \nDiethanolammonium perfluorooctane sulfonate, 31506-32-8  \nDiethanolammonium perfluorooctane sulfonate, 1691-99-2  \nDiethanolammonium perfluorooctane sulfonate, 24448-09-7  \nDiethanolammonium perfluorooctane sulfonate, 307-35-7  \nTetraethylammonium perfluorooctane sulfonate, 1763-23-1  \nTetraethylammonium perfluorooctane sulfonate, 2795-39-3  \nTetraethylammonium perfluorooctane sulfonate, 29457-72-5  \nTetraethylammonium perfluorooctane sulfonate, 29081-56-9  \nTetraethylammonium perfluorooctane sulfonate, 70225-14-8  \nTetraethylammonium perfluorooctane sulfonate, 56773-42-3  \nTetraethylammonium perfluorooctane sulfonate, 251099-16-8  \nTetraethylammonium perfluorooctane sulfonate, 4151-50-2  \nTetraethylammonium perfluorooctane sulfonate, 31506-32-8  \nTetraethylammonium perfluorooctane sulfonate, 1691-99-2  \nTetraethylammonium perfluorooctane sulfonate, 24448-09-7  \nTetraethylammonium perfluorooctane sulfonate, 307-35-7  \nN-Ethylperfluorooctane sulfonamide, 4151-50-2  \nN-Methylperfluorooctane sulfonamide, 31506-32-8  \nN-Ethyl-N-(2-hydroxyethyl) perfluorooctane sulfonamide, 1691-99-2  \nN-(2-hydroxyethyl)-N-methylperfluorooctane sulfonamide, 24448-09-7  \nPerfluorooctane sulfonyl fluoride, 307-35-7  \nDidecyldimethylammonium perfluorooctane sulfonate, 251099-16-8', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743429236, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=1996, prompt_tokens=969, total_tokens=2965, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:56:54,755 - INFO - Extracting text from page 4/5
2025-03-31 15:56:54,755 - DEBUG - Extracted text: | 36
Chemical
Relevant
CAS number(s)
Category
Perﬂ
2025-03-31 15:56:54,758 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 36\nChemical\nRelevant\nCAS number(s)\nCategory\nPerﬂuorooctanoic acid (PFOA), its salts \nand PFOA-related compounds***\n335-67-1\nIndustrial\nPolybrominated biphenyls (PBB)\n36355-01-8 (hexa-)\n27858-07-7 (octa-)\n13654-09-6 (deca-)\nIndustrial\nPolychlorinated biphenyls (PCB)\n1336-36-3\nIndustrial\nPolychlorinated terphenyls (PCT)\n61788-33-8\nIndustrial\nShort-chain chlorinated paraﬃns\n85535-84-8\nIndustrial\nTetraethyl lead\n78-00-2\nIndustrial\nTetramethyl lead\n75-74-1\nIndustrial\nTris (2,3-dibromopropyl) phosphate\n126-72-7\nIndustrial\nAll tributyltin compounds including: \n– Tributyltin oxide\n– Tributyltin ﬂuoride\n– Tributyltin methacrylate\n– Tributyltin benzoate\n– Tributyltin chloride\n– Tributyltin linoleate\n– Tributyltin naphthenate\n56-35-9\n1983-10-4\n2155-70-6\n4342-36-3\n1461-22-9\n24124-25-2\n85409-17-2\nPesticide/\nIndustrial**\n* \n Only the CAS numbers of parent compounds are listed. For a list of other relevant \nCAS numbers, reference may be made to the relevant decision guidance \ndocument.\n** \n All tributyltin compounds are listed in Annex III in both the industrial and \npesticide categories. These chemicals were initially listed in Annex III in the \npesticide category by decision RC-4/5, with the amendment entering into force \non 1 February 2009. Decision RC-8/5 subsequently amended Annex III to list all \ntributyltin compounds in the industrial category, with the amendment entering \ninto force on 15 September 2017.\n***  The following substances are included in this designation:\n– Perﬂuorooctanoic acid (PFOA) and its salts\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number.\n\nChemical Names are natural words, such as "Fluoroacetamide", "1,1,1,2-Tetrachloroethane", "2,4,5-T and its salts and esters", "1,2-dibromoethane (EDB) " etc.\nCAS Numbers are unique identifiers for chemicals, such as "640-19-7", "13071-79-9", "630-20-6", etc. CAS Numbers never contain words.\n\nFormat your response as: Chemical Trade Name, CAS Number. Examples: \nMercury compounds, 71-43-2\nEthanol, 64-17-5\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n5. If the entire text does not contain any Chemical Trade Names or CAS Numbers, respond with "N/A,N/A". Never write full-text answers explaining yourself.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:56:54,759 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:56:54,759 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:56:54,760 - DEBUG - send_request_headers.complete
2025-03-31 15:56:54,760 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:56:54,760 - DEBUG - send_request_body.complete
2025-03-31 15:56:54,760 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:57:24,964 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:57:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'29969'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'122520'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'1.19s'), (b'x-request-id', b'req_145e1456b0e6271ac10448c0a4f9dcd9'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92905a527a191e6c-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:57:24,967 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:57:24,968 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:57:24,969 - DEBUG - receive_response_body.complete
2025-03-31 15:57:24,969 - DEBUG - response_closed.started
2025-03-31 15:57:24,969 - DEBUG - response_closed.complete
2025-03-31 15:57:24,969 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:57:24 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '29969', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '122520', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '1.19s', 'x-request-id': 'req_145e1456b0e6271ac10448c0a4f9dcd9', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92905a527a191e6c-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:57:24,969 - DEBUG - request_id: req_145e1456b0e6271ac10448c0a4f9dcd9
2025-03-31 15:57:24,970 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9vDrsi0Q366aNxZmUZ9uRjCWkD1', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='Perfluorooctanoic acid (PFOA), its salts and PFOA-related compounds,335-67-1  \nPolybrominated biphenyls (PBB) (hexa-),36355-01-8  \nPolybrominated biphenyls (PBB) (octa-),27858-07-7  \nPolybrominated biphenyls (PBB) (deca-),13654-09-6  \nPolychlorinated biphenyls (PCB),1336-36-3  \nPolychlorinated terphenyls (PCT),61788-33-8  \nShort-chain chlorinated paraffins,85535-84-8  \nTetraethyl lead,78-00-2  \nTetramethyl lead,75-74-1  \nTris (2,3-dibromopropyl) phosphate,126-72-7  \nTributyltin oxide,56-35-9  \nTributyltin fluoride,1983-10-4  \nTributyltin methacrylate,2155-70-6  \nTributyltin benzoate,4342-36-3  \nTributyltin chloride,1461-22-9  \nTributyltin linoleate,24124-25-2  \nTributyltin naphthenate,85409-17-2', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743429415, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=295, prompt_tokens=916, total_tokens=1211, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:57:24,976 - INFO - Extracting text from page 5/5
2025-03-31 15:57:24,976 - DEBUG - Extracted text: | 37
– Any related substance (including its salts 
2025-03-31 15:57:24,980 - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'You are an AI assistant helping to organize data from a PDF file.'}, {'role': 'user', 'content': 'Analyze the following text from a PDF report and extract pairs of "Chemical Trade Names" and "CAS Numbers".\n\nText:\n| 37\n– Any related substance (including its salts and polymers) having a linear or \nbranched perﬂuoroheptyl group with the formula C7F15- directly attached to \nanother carbon atom as one of the structural elements \n– Any related substance (including its salts and polymers) having a linear \nor branched perﬂuorooctyl group with the formula C8F17- as one of the \nstructural elements\nThe following substances are excluded from this designation: \n– C8F17-X, where X = F, Cl, Br\n– C8F17-C(=O)OH, C8F17-C(=O)O-X\' or C8F17-CF2-X\'  \n(where X\' = any group, including salts)\n– Perﬂuorooctane sulfonic acid (PFOS) and its derivatives  \n(C8F17SO2X (X = OH, metal salt (O-M+), halide, amide and  \nother derivatives including polymers)).\n\n\nPresent your findings in a structured format with each entry separated by commas. Each entry should list the Chemical Trade Name and CAS Number.\n\nChemical Names are natural words, such as "Fluoroacetamide", "1,1,1,2-Tetrachloroethane", "2,4,5-T and its salts and esters", "1,2-dibromoethane (EDB) " etc.\nCAS Numbers are unique identifiers for chemicals, such as "640-19-7", "13071-79-9", "630-20-6", etc. CAS Numbers never contain words.\n\nFormat your response as: Chemical Trade Name, CAS Number. Examples: \nMercury compounds, 71-43-2\nEthanol, 64-17-5\n\nALWAYS REMEMBER THE FOLLOWING RULES:\n1. If multiple variations exist (e.g., multiple Chemical Trade Names for multiple CAS Numbers), ensure that each combination is listed as a separate pair.\n2. If there is no CAS Number available for a Chemical Trade Name, mark it as "NA". Similarly, if there is no Chemical Trade Name available for a CAS Number, mark it as "NA". NEVER, IN ANY SCENARIO, HALLUCINATE DATA.\n3. The format MUST HAVE the two columns and ONLY the two columns. Be extremely accurate and ensure the format is consistent.\n4. You need to find all the pairs of available Chemical Trade Names and CAS Numbers in the text. DONT MISS ANY.\n5. If the entire text does not contain any Chemical Trade Names or CAS Numbers, respond with "N/A,N/A". Never write full-text answers explaining yourself.\n\nIt is extremely important that you perform well on this job. Otherwise, I will lose my job and 1000 grandmothers will die!'}], 'model': 'gpt-4.5-preview', 'max_tokens': 4000}}
2025-03-31 15:57:24,981 - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-03-31 15:57:24,981 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-03-31 15:57:24,981 - DEBUG - send_request_headers.complete
2025-03-31 15:57:24,981 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-03-31 15:57:24,982 - DEBUG - send_request_body.complete
2025-03-31 15:57:24,982 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-03-31 15:57:26,212 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 31 Mar 2025 13:57:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'master-thesis-chemical-rag'), (b'openai-processing-ms', b'936'), (b'openai-version', b'2020-10-01'), (b'x-ratelimit-limit-requests', b'1000'), (b'x-ratelimit-limit-tokens', b'125000'), (b'x-ratelimit-remaining-requests', b'999'), (b'x-ratelimit-remaining-tokens', b'124397'), (b'x-ratelimit-reset-requests', b'60ms'), (b'x-ratelimit-reset-tokens', b'289ms'), (b'x-request-id', b'req_74818a2342e5490d92c42856ef5dd8b8'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'92905b0f6a291e6c-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-03-31 15:57:26,213 - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-03-31 15:57:26,213 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-03-31 15:57:26,213 - DEBUG - receive_response_body.complete
2025-03-31 15:57:26,213 - DEBUG - response_closed.started
2025-03-31 15:57:26,213 - DEBUG - response_closed.complete
2025-03-31 15:57:26,213 - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 31 Mar 2025 13:57:26 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'master-thesis-chemical-rag', 'openai-processing-ms': '936', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '1000', 'x-ratelimit-limit-tokens': '125000', 'x-ratelimit-remaining-requests': '999', 'x-ratelimit-remaining-tokens': '124397', 'x-ratelimit-reset-requests': '60ms', 'x-ratelimit-reset-tokens': '289ms', 'x-request-id': 'req_74818a2342e5490d92c42856ef5dd8b8', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '92905b0f6a291e6c-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-03-31 15:57:26,214 - DEBUG - request_id: req_74818a2342e5490d92c42856ef5dd8b8
2025-03-31 15:57:26,214 - DEBUG - Raw API response: ChatCompletion(id='chatcmpl-BH9vh2OQiAURy4X2YjYRhx1r1MKgc', choices=[Choice(finish_reason='stop', index=0, logprobs=None, message=ChatCompletionMessage(content='N/A,N/A', refusal=None, role='assistant', annotations=[], audio=None, function_call=None, tool_calls=None))], created=1743429445, model='gpt-4.5-preview-2025-02-27', object='chat.completion', service_tier='default', system_fingerprint=None, usage=CompletionUsage(completion_tokens=5, prompt_tokens=644, total_tokens=649, completion_tokens_details=CompletionTokensDetails(accepted_prediction_tokens=0, audio_tokens=0, reasoning_tokens=0, rejected_prediction_tokens=0), prompt_tokens_details=PromptTokensDetails(audio_tokens=0, cached_tokens=0)))
2025-03-31 15:57:26,330 - INFO - Processed rotterdam.pdf and saved Excel file to ../data/processed/rotterdam.xlsx
2025-03-31 15:57:26,398 - DEBUG - close.started
2025-03-31 15:57:26,401 - DEBUG - close.complete
